{"version":3,"sources":["Js/actions.js","components/common/ErrorComponent.jsx","Js/validation.js","Constants.js","api/LoginService.js","components/common/AuthenticationService.js","components/home/LoginComponent.jsx","components/home/WelcomeComponent.jsx","api/UserService.js","components/user/AddUserComponent.jsx","Labels.js","components/user/UserListComponent.jsx","components/user/EditUserComponent.jsx","components/home/UpdateExpiredPasswordComponent.jsx","components/home/ChangePasswordComponent.jsx","components/home/ForgotPasswordComponent.jsx","components/user/RoleListComponent.jsx","components/user/AddRoleComponent.jsx","components/user/EditRoleComponent.jsx","api/LanguageService.js","components/language/AddLanguageComponent.jsx","components/language/LanguageListComponent.jsx","components/language/EditLanguageComponent.jsx","api/DataSourceTypeService.js","components/datasourceType/AddDataSourceTypeComponent.jsx","components/datasourceType/DataSourceTypeListComponent.jsx","components/datasourceType/UpdateDataSourceTypeComponent.jsx","api/DataSourceService.js","components/dataSource/AddDataSource.jsx","components/dataSource/DataSourceListComponent.jsx","components/dataSource/UpdateDataSourceComponent.jsx","api/CurrencyService.js","components/currency/AddCurrencyComponent.jsx","components/currency/CurrencyListComponent.jsx","components/currency/UpdateCurrencyComponent.jsx","api/CountryService.js","components/country/AddCountryComponent.jsx","components/country/CountryListComponent.jsx","components/country/UpdateCountryComponent.jsx","api/ShipmentStatusService.js","components/shipmentStatus/AddShipmentStatusComponent.jsx","components/shipmentStatus/ShipmentStatusListComponent.jsx","components/shipmentStatus/UpdateShipmentStatusComponent.jsx","api/ProgramService.js","components/program/DownloadProgramDataComponent.jsx","components/program/ImportProgramDataComponent.jsx","components/program/ExportProgramDataComponent.jsx","components/common/Layout.js","components/common/Sidebar.jsx","App.js","serviceWorker.js","index.js"],"names":["onload","x_navigation_onresize","page_content_onresize","$","css","content_minus","length","content","sidebar","height","document","window","width","hasClass","doc_height","show","removeClass","data","addClass","panel_refresh","panel","action","callback","find","remove","append","innerWidth","each","this","x_navigation_minimize","onresize","timeout","setTimeout","ready","on","e","stopPropagation","parents","fadeOut","parent","wr","prop","box","toggleClass","is","hide","prev","unwrap","resize","head","body","footer","hplus","wrap","panel_fullscreen","animate","panel_remove","blockOpen","attr","accordion","noCollapse","slideUp","slideDown","not","elm","index","setInterval","click","li","event","children","focus","x_navigation","Object","size","obj","key","hasOwnProperty","ErrorComponent","validator","addMethod","value","element","optional","test","API_URL","SECRET_KEY","username","password","console","log","axios","post","localStorage","getItem","token","jwt_decode","userId","user","language","languageId","typeOfSession","navigator","onLine","newUsername","usernameStored","originalText","CryptoJS","AES","decrypt","toString","enc","Utf8","confirm","decoded","Date","exp","curDate","sessionExpiresOn","setupAxiosInterceptors","get","then","response","catch","error","basicAuthHeader","interceptors","request","use","config","headers","authorization","LoginComponent","props","state","message","loginClicked","bind","forgotPassword","validate","ignore","rules","emailId","required","errorPlacement","insertAfter","className","name","id","match","params","type","onClick","val","valid","AuthenticationService","isUserLoggedIn","LoginService","authenticate","status","checkIfDifferentUserIsLoggedIn","sub","setItem","encrypt","history","push","setState","pathname","decryptedUsername","decryptedPassword","bcrypt","compare","err","res","alert","Component","WelcomeComponent","json","put","oldPassword","newPassword","AddUserComponent","getLanguageId","realms","languages","roles","submitClicked","cancelClicked","checkTypeOfSession","UserService","getRealmList","getLanguageList","getRoleList","email","phoneNumber","number","roleId","realmList","map","item","i","realmId","label","porLabel","engLabel","freLabel","spaLabel","languagesList","languageName","roleList","style","margin","border","background","maxLength","minLength","realm","role","countryIds","addNewUser","UserListComponent","userList","editUser","unlockAccount","getUserList","marginLeft","align","lastLoginDate","faildAttempts","active","location","reload","EditUserComponent","_isMounted","updateClicked","dataChange","target","onChange","checked","UpdateExpiredPasswordComponent","logoutClicked","confirmNewPassword","checkPassword","updateExpiredPassword","text","ChangePasswordComponent","checkOldPassword","getLoggedInUserId","statusText","ForgotPasswordComponent","RoleListComponent","editRole","addNewRole","AddRoleComponent","businessFunctions","getBusinessFunctionList","maxlength","businessFunctionsList","businessFunctionId","class","href","data-live-search","data-actions-box","multiple","canCreateRole","Array","from","selectedOptions","readOnly","placeholder","AddLanguageComponent","updateFieldData","submitForm","lettersonly","LanguageService","addLanguage","LanguageListComponent","langaugeList","editLanguage","addNewLanguage","EditLanguageComponent","updateForm","AddDataSourceTypeComponent","DataSourceTypeService","addDataSourceType","DataSourceListComponent","dataSourceList","editDataSourceType","addNewDataSourceType","getDataSourceTypeList","dataSourceType","dataSourceTypeId","UpdateDataSourceTypeComponent","labelId","AddDataSource","dataSourceTypeList","getDataSourceTypeListActive","dataSource","DataSourceService","addDataSource","dataSourceTypes","editDataSource","addNewDataSource","getDataSourceList","dataSourceId","UpdateDataSourceComponent","AddCurrencyComponent","currencyCode","currencySymbol","conversionRateToUsd","integer","currency","CurrencyService","addCurrency","CurrencyListComponent","currencyList","editCurrency","addNewCurrency","getCurrencyList","currencyId","UpdateCurrencyComponent","AddCountryComponent","languageList","getLanguageListActive","getCurrencyListActive","CountryService","addCountry","languageItems","currencyItems","itemOne","CountryListComponent","countryList","addNewCountry","editCountry","getCountryListAll","country","countryId","UpdateCountryComponent","curencyId","AddShipmentStatusComponent","shipmentStatus","nextShipmentStatusAllowed","shipmentStatusList","ShipmentStatusService","getShipmentStatusListActive","addShipmentStatus","shipmentStatusItems","shipmentStatusId","ShipmentStatusListComponent","editShipmentStatus","addNewShipmentStatus","getShipmentStatusListAll","UpdateShipmentStatusComponent","programId","DownloadProgramDataComponent","programData","programList","downloadClicked","ProgramService","getProgramList","programItems","programArr","j","getProgramData","openRequest","indexedDB","open","onupgradeneeded","db1","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onsuccess","program","transaction","objectStore","encryptedText","JSON","stringify","getRequest","onerror","ImportProgramDataComponent","importClicked","programSubmitClicked","File","FileReader","FileList","Blob","undefined","querySelector","files","file","JSZip","loadAsync","zip","fileName","keys","forEach","filename","async","fileData","programDataJson","parse","plaintext","programDataJsonDecrypted","labelEn","selectedPrgArr","addProgramDataRequest","ExportProgramDataComponent","exportClicked","getAll","proList","myResult","programJson","selectedPrgArrText","toArray","txt","parseInt","generateAsync","FileSaver","saveAs","Layout","checkSessionTimeOut","showModal","userLoggedIn","isTimedOut","idleTimer","onAction","_onAction","onActive","_onActive","onIdle","_onIdle","handleClose","handleLogout","reset","ref","debounce","path","exact","component","render","React","Sidebar","data-sound","basename","data-box","src","alt","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8f36be3c.chunk.js","sourcesContent":["import $ from 'jquery';\r\n//const $ = window.$;\r\n$(document).ready(function(){        \r\n    \r\n    /* PROGGRESS START */\r\n    // $.mpb(\"show\",{value: [0,50],speed: 5});        \r\n    /* END PROGGRESS START */\r\n    \r\n    var html_click_avail = true;\r\n    \r\n    $(\"html\").on(\"click\", function(){\r\n        if(html_click_avail)\r\n            $(\".x-navigation-horizontal li,.x-navigation-minimized li\").removeClass('active');        \r\n    });        \r\n    \r\n    $(\".x-navigation-horizontal .panel\").on(\"click\",function(e){\r\n        e.stopPropagation();\r\n    });    \r\n    \r\n    /* WIDGETS (DEMO)*/\r\n    $(\".widget-remove\").on(\"click\",function(){\r\n        $(this).parents(\".widget\").fadeOut(400,function(){\r\n            $(this).remove();\r\n            $(\"body > .tooltip\").remove();\r\n        });\r\n        return false;\r\n    });\r\n    /* END WIDGETS */\r\n    \r\n    /* Gallery Items */\r\n    $(\".gallery-item .iCheck-helper\").on(\"click\",function(){\r\n        var wr = $(this).parent(\"div\");\r\n        if(wr.hasClass(\"checked\")){\r\n            $(this).parents(\".gallery-item\").addClass(\"active\");\r\n        }else{            \r\n            $(this).parents(\".gallery-item\").removeClass(\"active\");\r\n        }\r\n    });\r\n    $(\".gallery-item-remove\").on(\"click\",function(){\r\n        $(this).parents(\".gallery-item\").fadeOut(400,function(){\r\n            $(this).remove();\r\n        });\r\n        return false;\r\n    });\r\n    $(\"#gallery-toggle-items\").on(\"click\",function(){\r\n        \r\n        $(\".gallery-item\").each(function(){\r\n            \r\n            var wr = $(this).find(\".iCheck-helper\").parent(\"div\");\r\n            \r\n            if(wr.hasClass(\"checked\")){\r\n                $(this).removeClass(\"active\");\r\n                wr.removeClass(\"checked\");\r\n                wr.find(\"input\").prop(\"checked\",false);\r\n            }else{            \r\n                $(this).addClass(\"active\");\r\n                wr.addClass(\"checked\");\r\n                wr.find(\"input\").prop(\"checked\",true);\r\n            }\r\n            \r\n        });\r\n        \r\n    });\r\n    /* END Gallery Items */\r\n\r\n    // XN PANEL DRAGGING\r\n    // $( \".xn-panel-dragging\" ).draggable({\r\n    //     containment: \".page-content\", handle: \".panel-heading\", scroll: false,\r\n    //     start: function(event,ui){\r\n    //         html_click_avail = false;\r\n    //         $(this).addClass(\"dragged\");\r\n    //     },\r\n    //     stop: function( event, ui ) {\r\n    //         $(this).resizable({\r\n    //             maxHeight: 400,\r\n    //             maxWidth: 600,\r\n    //             minHeight: 200,\r\n    //             minWidth: 200,\r\n    //             helper: \"resizable-helper\",\r\n    //             start: function( event, ui ) {\r\n    //                 html_click_avail = false;\r\n    //             },\r\n    //             stop: function( event, ui ) {\r\n    //                 $(this).find(\".panel-body\").height(ui.size.height - 82);\r\n    //                 $(this).find(\".scroll\").mCustomScrollbar(\"update\");\r\n                                            \r\n    //                 setTimeout(function(){\r\n    //                     html_click_avail = true; \r\n    //                 },1000);\r\n                                            \r\n    //             }\r\n    //         })\r\n            \r\n    //         setTimeout(function(){\r\n    //             html_click_avail = true; \r\n    //         },1000);            \r\n    //     }\r\n    // });\r\n    // END XN PANEL DRAGGING\r\n    \r\n    /* DROPDOWN TOGGLE */\r\n    $(\".dropdown-toggle\").on(\"click\",function(){\r\n        onresize();\r\n    });\r\n    /* DROPDOWN TOGGLE */\r\n    \r\n    /* MESSAGE BOX */\r\n    $(\".mb-control\").on(\"click\",function(){\r\n        var box = $($(this).data(\"box\"));\r\n        if(box.length > 0){\r\n            box.toggleClass(\"open\");\r\n            \r\n            var sound = box.data(\"sound\");\r\n            \r\n            if(sound === 'alert')\r\n                playAudio('alert');\r\n            \r\n            if(sound === 'fail')\r\n                playAudio('fail');\r\n            \r\n        }        \r\n        return false;\r\n    });\r\n    $(\".mb-control-close\").on(\"click\",function(){\r\n       $(this).parents(\".message-box\").removeClass(\"open\");\r\n       return false;\r\n    });    \r\n    /* END MESSAGE BOX */\r\n    \r\n    /* CONTENT FRAME */\r\n    $(\".content-frame-left-toggle\").on(\"click\",function(){\r\n        $(\".content-frame-left\").is(\":visible\") \r\n        ? $(\".content-frame-left\").hide() \r\n        : $(\".content-frame-left\").show();\r\n        page_content_onresize();\r\n    });\r\n    $(\".content-frame-right-toggle\").on(\"click\",function(){\r\n        $(\".content-frame-right\").is(\":visible\") \r\n        ? $(\".content-frame-right\").hide() \r\n        : $(\".content-frame-right\").show();\r\n        page_content_onresize();\r\n    });    \r\n    /* END CONTENT FRAME */\r\n    \r\n    /* MAILBOX */\r\n    $(\".mail .mail-star\").on(\"click\",function(){\r\n        $(this).toggleClass(\"starred\");\r\n    });\r\n    \r\n    $(\".mail-checkall .iCheck-helper\").on(\"click\",function(){\r\n        \r\n        var prop = $(this).prev(\"input\").prop(\"checked\");\r\n                    \r\n        $(\".mail .mail-item\").each(function(){            \r\n            var cl = $(this).find(\".mail-checkbox > div\");            \r\n            cl.toggleClass(\"checked\",prop).find(\"input\").prop(\"checked\",prop);                        \r\n        }); \r\n        \r\n    });\r\n    /* END MAILBOX */\r\n    \r\n    /* PANELS */\r\n    \r\n    $(\".panel-fullscreen\").on(\"click\",function(){\r\n        panel_fullscreen($(this).parents(\".panel\"));\r\n        return false;\r\n    });\r\n    \r\n    $(\".panel-collapse\").on(\"click\",function(){\r\n        panel_collapse($(this).parents(\".panel\"));\r\n        $(this).parents(\".dropdown\").removeClass(\"open\");\r\n        return false;\r\n    });    \r\n    $(\".panel-remove\").on(\"click\",function(){\r\n        panel_remove($(this).parents(\".panel\"));\r\n        $(this).parents(\".dropdown\").removeClass(\"open\");\r\n        return false;\r\n    });\r\n    $(\".panel-refresh\").on(\"click\",function(){\r\n        var panel = $(this).parents(\".panel\");\r\n        panel_refresh(panel);\r\n\r\n        setTimeout(function(){\r\n            panel_refresh(panel);\r\n        },3000);\r\n        \r\n        $(this).parents(\".dropdown\").removeClass(\"open\");\r\n        return false;\r\n    });\r\n    /* EOF PANELS */\r\n    \r\n    /* ACCORDION */\r\n    $(\".accordion .panel-title a\").on(\"click\",function(){\r\n        \r\n        var blockOpen = $(this).attr(\"href\");\r\n        var accordion = $(this).parents(\".accordion\");        \r\n        var noCollapse = accordion.hasClass(\"accordion-dc\");\r\n        \r\n        \r\n        if($(blockOpen).length > 0){            \r\n            \r\n            if($(blockOpen).hasClass(\"panel-body-open\")){\r\n                $(blockOpen).slideUp(200,function(){\r\n                    $(this).removeClass(\"panel-body-open\");\r\n                });\r\n            }else{\r\n                $(blockOpen).slideDown(200,function(){\r\n                    $(this).addClass(\"panel-body-open\");\r\n                });\r\n            }\r\n            \r\n            if(!noCollapse){\r\n                accordion.find(\".panel-body-open\").not(blockOpen).slideUp(200,function(){\r\n                    $(this).removeClass(\"panel-body-open\");\r\n                });                                           \r\n            }\r\n            \r\n            return false;\r\n        }\r\n        \r\n    });\r\n    /* EOF ACCORDION */\r\n    \r\n    /* DATATABLES/CONTENT HEIGHT FIX */\r\n    $(\".dataTables_length select\").on(\"change\",function(){\r\n        onresize();\r\n    });\r\n    /* END DATATABLES/CONTENT HEIGHT FIX */\r\n    \r\n    /* TOGGLE FUNCTION */\r\n    $(\".toggle\").on(\"click\",function(){\r\n        var elm = $(\"#\"+$(this).data(\"toggle\"));\r\n        if(elm.is(\":visible\"))\r\n            elm.addClass(\"hidden\").removeClass(\"show\");\r\n        else\r\n            elm.addClass(\"show\").removeClass(\"hidden\");\r\n        \r\n        return false;\r\n    });\r\n    /* END TOGGLE FUNCTION */\r\n    \r\n    /* MESSAGES LOADING */\r\n    $(\".messages .item\").each(function(index){\r\n        var elm = $(this);\r\n        setInterval(function(){\r\n            elm.addClass(\"item-visible\");\r\n        },index*300);              \r\n    });\r\n    /* END MESSAGES LOADING */\r\n    \r\n    x_navigation();\r\n});\r\n\r\n$(function(){            \r\n    onload();\r\n\r\n    /* PROGGRESS COMPLETE */\r\n    // $.mpb(\"update\",{value: 100, speed: 5, complete: function(){            \r\n    //     $(\".mpb\").fadeOut(200,function(){\r\n    //         $(this).remove();\r\n    //     });\r\n    // }});\r\n    /* END PROGGRESS COMPLETE */\r\n});\r\n\r\n$(window).resize(function(){\r\n    x_navigation_onresize();\r\n    page_content_onresize();\r\n});\r\n\r\nfunction onload(){\r\n    x_navigation_onresize();    \r\n    page_content_onresize();\r\n}\r\n\r\nfunction page_content_onresize(){\r\n    $(\".page-content,.content-frame-body,.content-frame-right,.content-frame-left\").css(\"width\",\"\").css(\"height\",\"\");\r\n    \r\n    var content_minus = 0;\r\n    content_minus = ($(\".page-container-boxed\").length > 0) ? 40 : content_minus;\r\n    content_minus += ($(\".page-navigation-top-fixed\").length > 0) ? 50 : 0;\r\n    \r\n    var content = $(\".page-content\");\r\n    var sidebar = $(\".page-sidebar\");\r\n    \r\n    if(content.height() < $(document).height() - content_minus){        \r\n        content.height($(document).height() - content_minus);\r\n    }        \r\n    \r\n    if(sidebar.height() > content.height()){        \r\n        content.height(sidebar.height());\r\n    }\r\n    \r\n    if($(window).width() > 1024){\r\n        \r\n        if($(\".page-sidebar\").hasClass(\"scroll\")){\r\n            if($(\"body\").hasClass(\"page-container-boxed\")){\r\n                var doc_height = $(document).height() - 40;\r\n            }else{\r\n                var doc_height = $(window).height();\r\n            }\r\n           $(\".page-sidebar\").height(doc_height);\r\n           \r\n       }\r\n       \r\n        if($(\".content-frame-body\").height() < $(document).height()-162){\r\n            $(\".content-frame-body,.content-frame-right,.content-frame-left\").height($(document).height()-162);            \r\n        }else{\r\n            $(\".content-frame-right,.content-frame-left\").height($(\".content-frame-body\").height());\r\n        }\r\n        \r\n        $(\".content-frame-left\").show();\r\n        $(\".content-frame-right\").show();\r\n    }else{\r\n        $(\".content-frame-body\").height($(\".content-frame\").height()-80);\r\n        \r\n        if($(\".page-sidebar\").hasClass(\"scroll\"))\r\n           $(\".page-sidebar\").css(\"height\",\"\");\r\n    }\r\n    \r\n    if($(window).width() < 1200){\r\n        if($(\"body\").hasClass(\"page-container-boxed\")){\r\n            $(\"body\").removeClass(\"page-container-boxed\").data(\"boxed\",\"1\");\r\n        }\r\n    }else{\r\n        if($(\"body\").data(\"boxed\") === \"1\"){\r\n            $(\"body\").addClass(\"page-container-boxed\").data(\"boxed\",\"\");\r\n        }\r\n    }\r\n}\r\n\r\n/* PANEL FUNCTIONS */\r\nfunction panel_fullscreen(panel){    \r\n    \r\n    if(panel.hasClass(\"panel-fullscreened\")){\r\n        panel.removeClass(\"panel-fullscreened\").unwrap();\r\n        panel.find(\".panel-body,.chart-holder\").css(\"height\",\"\");\r\n        panel.find(\".panel-fullscreen .fa\").removeClass(\"fa-compress\").addClass(\"fa-expand\");        \r\n        \r\n        $(window).resize();\r\n    }else{\r\n        var head    = panel.find(\".panel-heading\");\r\n        var body    = panel.find(\".panel-body\");\r\n        var footer  = panel.find(\".panel-footer\");\r\n        var hplus   = 30;\r\n        \r\n        if(body.hasClass(\"panel-body-table\") || body.hasClass(\"padding-0\")){\r\n            hplus = 0;\r\n        }\r\n        if(head.length > 0){\r\n            hplus += head.height()+21;\r\n        } \r\n        if(footer.length > 0){\r\n            hplus += footer.height()+21;\r\n        } \r\n\r\n        panel.find(\".panel-body,.chart-holder\").height($(window).height() - hplus);\r\n        \r\n        \r\n        panel.addClass(\"panel-fullscreened\").wrap('<div class=\"panel-fullscreen-wrap\"></div>');        \r\n        panel.find(\".panel-fullscreen .fa\").removeClass(\"fa-expand\").addClass(\"fa-compress\");\r\n        \r\n        $(window).resize();\r\n    }\r\n}\r\n\r\nfunction panel_collapse(panel,action,callback){\r\n\r\n    if(panel.hasClass(\"panel-toggled\")){        \r\n        panel.removeClass(\"panel-toggled\");\r\n        \r\n        panel.find(\".panel-collapse .fa-angle-up\").removeClass(\"fa-angle-up\").addClass(\"fa-angle-down\");\r\n\r\n        if(action && action === \"shown\" && typeof callback === \"function\")\r\n            callback();            \r\n\r\n        onload();\r\n                \r\n    }else{\r\n        panel.addClass(\"panel-toggled\");\r\n                \r\n        panel.find(\".panel-collapse .fa-angle-down\").removeClass(\"fa-angle-down\").addClass(\"fa-angle-up\");\r\n\r\n        if(action && action === \"hidden\" && typeof callback === \"function\")\r\n            callback();\r\n\r\n        onload();        \r\n        \r\n    }\r\n}\r\nfunction panel_refresh(panel,action,callback){        \r\n    if(!panel.hasClass(\"panel-refreshing\")){\r\n        panel.append('<div class=\"panel-refresh-layer\"><img src=\"img/loaders/default.gif\"/></div>');\r\n        panel.find(\".panel-refresh-layer\").width(panel.width()).height(panel.height());\r\n        panel.addClass(\"panel-refreshing\");\r\n        \r\n        if(action && action === \"shown\" && typeof callback === \"function\") \r\n            callback();\r\n    }else{\r\n        panel.find(\".panel-refresh-layer\").remove();\r\n        panel.removeClass(\"panel-refreshing\");\r\n        \r\n        if(action && action === \"hidden\" && typeof callback === \"function\") \r\n            callback();        \r\n    }       \r\n    onload();\r\n}\r\nfunction panel_remove(panel,action,callback){    \r\n    if(action && action === \"before\" && typeof callback === \"function\") \r\n        callback();\r\n    \r\n    panel.animate({'opacity':0},200,function(){\r\n        panel.parent(\".panel-fullscreen-wrap\").remove();\r\n        $(this).remove();        \r\n        if(action && action === \"after\" && typeof callback === \"function\") \r\n            callback();\r\n        \r\n        \r\n        onload();\r\n    });    \r\n}\r\n/* EOF PANEL FUNCTIONS */\r\n\r\n/* X-NAVIGATION CONTROL FUNCTIONS */\r\nfunction x_navigation_onresize(){    \r\n    \r\n    var inner_port = window.innerWidth || $(document).width();\r\n    \r\n    if(inner_port < 1025){               \r\n        $(\".page-sidebar .x-navigation\").removeClass(\"x-navigation-minimized\");\r\n        $(\".page-container\").removeClass(\"page-container-wide\");\r\n        $(\".page-sidebar .x-navigation li.active\").removeClass(\"active\");\r\n        \r\n                \r\n        $(\".x-navigation-horizontal\").each(function(){            \r\n            if(!$(this).hasClass(\"x-navigation-panel\")){                \r\n                $(\".x-navigation-horizontal\").addClass(\"x-navigation-h-holder\").removeClass(\"x-navigation-horizontal\");\r\n            }\r\n        });\r\n        \r\n        \r\n    }else{        \r\n        if($(\".page-navigation-toggled\").length > 0){\r\n            x_navigation_minimize(\"close\");\r\n        }       \r\n        \r\n        $(\".x-navigation-h-holder\").addClass(\"x-navigation-horizontal\").removeClass(\"x-navigation-h-holder\");                \r\n    }\r\n    \r\n}\r\n\r\nfunction x_navigation_minimize(action){\r\n    \r\n    if(action == 'open'){\r\n        $(\".page-container\").removeClass(\"page-container-wide\");\r\n        $(\".page-sidebar .x-navigation\").removeClass(\"x-navigation-minimized\");\r\n        $(\".x-navigation-minimize\").find(\".fa\").removeClass(\"fa-indent\").addClass(\"fa-dedent\");\r\n     //   $(\".page-sidebar.scroll\").mCustomScrollbar(\"update\");\r\n    }\r\n    \r\n    if(action == 'close'){\r\n        $(\".page-container\").addClass(\"page-container-wide\");\r\n        $(\".page-sidebar .x-navigation\").addClass(\"x-navigation-minimized\");\r\n        $(\".x-navigation-minimize\").find(\".fa\").removeClass(\"fa-dedent\").addClass(\"fa-indent\");\r\n        // $(\".page-sidebar.scroll\").mCustomScrollbar(\"disable\",true);\r\n    }\r\n    \r\n    $(\".x-navigation li.active\").removeClass(\"active\");\r\n    \r\n}\r\n\r\nfunction x_navigation(){\r\n    \r\n    $(\".x-navigation-control\").click(function(){\r\n        $(this).parents(\".x-navigation\").toggleClass(\"x-navigation-open\");\r\n        \r\n        onresize();\r\n        \r\n        return false;\r\n    });\r\n\r\n    if($(\".page-navigation-toggled\").length > 0){\r\n        x_navigation_minimize(\"close\");\r\n    }    \r\n    \r\n    $(\".x-navigation-minimize\").click(function(){\r\n                \r\n        if($(\".page-sidebar .x-navigation\").hasClass(\"x-navigation-minimized\")){\r\n            $(\".page-container\").removeClass(\"page-navigation-toggled\");\r\n            x_navigation_minimize(\"open\");\r\n        }else{            \r\n            $(\".page-container\").addClass(\"page-navigation-toggled\");\r\n            x_navigation_minimize(\"close\");            \r\n        }\r\n        \r\n        onresize();\r\n        \r\n        return false;        \r\n    });\r\n       \r\n    $(\".x-navigation  li > a\").click(function(){\r\n        \r\n        var li = $(this).parent('li');        \r\n        var ul = li.parent(\"ul\");\r\n        \r\n        ul.find(\" > li\").not(li).removeClass(\"active\");    \r\n        \r\n    });\r\n    \r\n    $(\".x-navigation li\").click(function(event){\r\n        event.stopPropagation();\r\n        \r\n        var li = $(this);\r\n                \r\n            if(li.children(\"ul\").length > 0 || li.children(\".panel\").length > 0 || $(this).hasClass(\"xn-profile\") > 0){\r\n                if(li.hasClass(\"active\")){\r\n                    li.removeClass(\"active\");\r\n                    li.find(\"li.active\").removeClass(\"active\");\r\n                }else\r\n                    li.addClass(\"active\");\r\n                    \r\n                onresize();\r\n                \r\n                if($(this).hasClass(\"xn-profile\") > 0)\r\n                    return true;\r\n                else\r\n                    return false;\r\n            }                                     \r\n    });\r\n    \r\n    /* XN-SEARCH */\r\n    $(\".xn-search\").on(\"click\",function(){\r\n        $(this).find(\"input\").focus();\r\n    })\r\n    /* END XN-SEARCH */\r\n    \r\n}\r\n/* EOF X-NAVIGATION CONTROL FUNCTIONS */\r\n\r\n/* PAGE ON RESIZE WITH TIMEOUT */\r\nfunction onresize(timeout){    \r\n    timeout = timeout ? timeout : 200;\r\n\r\n    setTimeout(function(){\r\n        page_content_onresize();\r\n    },timeout);\r\n}\r\n/* EOF PAGE ON RESIZE WITH TIMEOUT */\r\n\r\n/* PLAY SOUND FUNCTION */\r\nfunction playAudio(file){\r\n    /*if(file === 'alert')\r\n        document.getElementById('audio-alert').play();\r\n\r\n    if(file === 'fail')\r\n        document.getElementById('audio-fail').play(); */   \r\n}\r\n/* END PLAY SOUND FUNCTION */\r\n\r\n/* NEW OBJECT(GET SIZE OF ARRAY) */\r\nObject.size = function(obj) {\r\n    var size = 0, key;\r\n    for (key in obj) {\r\n        if (obj.hasOwnProperty(key)) size++;\r\n    }\r\n    return size;\r\n};\r\n/* EOF NEW OBJECT(GET SIZE OF ARRAY) */","import React from \"react\";\n\nfunction ErrorComponent() {\n    return (\n        <div>An Error occurred</div>\n    )\n}\n\nexport default ErrorComponent","import $ from 'jquery';\nimport 'jquery-validation';\n\n\n\n$.validator.addMethod('emailId', function (value, element) {\n\n    return this.optional(element) || /^[\\w][\\w.-]{0,127}$/.test(value)\n  \n  }, \"Please enter a valid Docker image tag, like 'latest' or '1.10.0'\");\n\n  $.validator.addMethod( \"lettersonly\", function( value, element ) {\n    return this.optional( element ) || /^[a-z]+$/i.test( value );\n  }, \"Letters only please\" );\n\n  $.validator.addMethod( \"integer\", function( value, element ) {\n    return this.optional( element ) || /^-?\\d+$/.test( value );\n  }, \"A positive or negative non-decimal number please\" );\n  ","//export const API_URL = 'http://localhost:8081'\n// export const API_URL = 'http://server6.altius.cc:8080/FASP'\n\n// export const API_URL='http://localhost:8080/FASP'\nexport const API_URL='https://fasp.altius.cc/FASP'\nexport const SECRET_KEY = 'afhghggrehreqiuhrjhjdbfjehgfuoerhfjhfyguayaegrf'\n","import axios from \"axios\"\nimport {API_URL} from '../Constants.js'\n\nclass LoginService {\n\n\n\n    authenticate(username, password) {\n        console.log(\"username---\"+username);\n        console.log(\"password---\"+password);\n        return axios.post(`${API_URL}/authenticate`,{username, password},{});\n    }\n\n    \n}\n\nexport default new LoginService()","import axios from 'axios'\nimport { Online } from \"react-detect-offline\";\nimport jwt_decode from 'jwt-decode'\nimport { API_URL } from '../../Constants.js'\nimport CryptoJS from 'crypto-js'\nimport { SECRET_KEY } from '../../Constants.js'\n\nclass AuthenticationService {\n\n    isUserLoggedIn() {\n        let user = localStorage.getItem('userId');\n        if (user === null) return false\n        return true\n    }\n    getLoggedInUserId() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        return decoded.userId;\n    }\n\n    getLanguageId() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        return decoded.user.language.languageId;\n    }\n\n    checkTypeOfSession() {\n        let typeOfSession = localStorage.getItem('typeOfSession');\n        console.log(\"typeofsession---\" + typeOfSession);\n        console.log(\"network----\" + navigator.onLine);\n        if ((typeOfSession === 'Online' && navigator.onLine) || (typeOfSession === 'Offline' && !navigator.onLine)) {\n            console.log(\"true\");\n            return true;\n        } else {\n            console.log(\"false\");\n            return false;\n\n\n\n        }\n    }\n\n    checkIfDifferentUserIsLoggedIn(newUsername) {\n        console.log(\"token username---\" + newUsername);\n        let usernameStored = localStorage.getItem('username');\n        console.log(\"usernameStored---\"+usernameStored);\n        if (usernameStored !== null && usernameStored !== \"\") {\n            var usernameDecrypted = CryptoJS.AES.decrypt(usernameStored, `${SECRET_KEY}`)\n            var originalText = usernameDecrypted.toString(CryptoJS.enc.Utf8);\n            console.log(\"usernameDecrypted---\" + originalText);\n            if (originalText !== newUsername) {\n                if (window.confirm(\"Are you sure you want to overrride already logged in user's details?\")) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    checkIfTokenExpired() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        console.log(decoded);\n        let tokenExpiryTime = new Date(decoded.exp * 1000);\n        var curDate = new Date();\n        console.log(new Date(decoded.exp * 1000));\n        console.log(\"cur date---\" + curDate);\n\n        if (new Date(decoded.exp * 1000) > new Date()) {\n            console.log(\"Token not expired\");\n            return true;\n        } else {\n            console.log(\"Token expired\");\n            return false;\n        }\n    }\n\n    checkSessionTimeOut() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        console.log(\"decoded---\", decoded);\n        console.log(\"Session expires on---\" + decoded.user.sessionExpiresOn);\n        return decoded.user.sessionExpiresOn;\n    }\n\n    refreshToken() {\n        let token = localStorage.getItem('token');\n        console.log(\"token---\" + token);\n        this.setupAxiosInterceptors();\n        return axios.get(`${API_URL}/refresh`, {}).then(response => {\n            console.log(\"response----------------\", response)\n        }).catch(\n            error => {\n                console.log(\"error----------\", error);\n            })\n    }\n\n    setupAxiosInterceptors() {\n        //console.log(\"Inside interceptor setup\");\n        let token = localStorage.getItem('token');\n        let basicAuthHeader = 'Bearer ' + token\n        console.log(\"headers=\" + basicAuthHeader);\n        axios.interceptors.request.use(\n            // if (this.isUserLoggedIn) {\n            (config) => {\n                config.headers.authorization = basicAuthHeader\n                return config;\n            }\n            // }\n        )\n\n    }\n}\n\n\nexport default new AuthenticationService()","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport LoginService from '../../api/LoginService'\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode'\nimport { SECRET_KEY } from '../../Constants.js'\n\n\nexport default class LoginComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n        this.loginClicked = this.loginClicked.bind(this);\n        this.forgotPassword = this.forgotPassword.bind(this);\n    }\n\n    componentDidMount() {\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                emailId: {\n                    required: true\n                },\n                password: {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Login</h3>\n                    <p>{this.props.match.params.message}</p>\n                    Username : <input type=\"text\" id=\"emailId\" name=\"emailId\" /><br></br><br></br>\n                    Password : <input type=\"password\" id=\"password\" name=\"password\" /><br></br><br></br>\n                    <button className=\"btn btn-success\" type=\"button\" onClick={this.loginClicked}>Login</button><br></br><br></br>\n                    <Online><button className=\"btn btn-danger\" type=\"button\" onClick={this.forgotPassword}>Forgot Password</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    loginClicked() {\n        var username = $(\"#emailId\").val();\n        var password = $(\"#password\").val();\n        if ($(\"#form1\").valid()) {\n            console.log(\"Going to perform login----\" + AuthenticationService.isUserLoggedIn());\n\n            if (navigator.onLine) {\n                console.log(\"Inside Authentication not found\");\n                LoginService.authenticate(username, password)\n                    .then(response => {\n                        console.log(\"my response\");\n                        var decoded = jwt_decode(response.data.token);\n                        console.log(\"status code--\" + response.data.status);\n\n                        // console.log(new Date(decoded.iat*1000));\n                        // console.log(new Date(decoded.exp*1000));\n                        console.log(\"username---\", decoded);\n                        if (!AuthenticationService.checkIfDifferentUserIsLoggedIn(decoded.sub)) {\n                            localStorage.setItem('token', response.data.token);\n                            localStorage.setItem('typeOfSession', \"Online\");\n                            localStorage.setItem('userId', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('username', CryptoJS.AES.encrypt((decoded.sub).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('password', CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('languageId', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n\n                            // response.data.password = CryptoJS.AES.encrypt(JSON.stringify(password), 'my-secret-key@123').toString();\n\n                            AuthenticationService.setupAxiosInterceptors();\n\n                            this.props.history.push(`/welcome`)\n                        }else{\n                            localStorage.setItem('token', response.data.token);\n                            localStorage.setItem('typeOfSession', \"Online\");\n                            localStorage.setItem('userId', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('username', CryptoJS.AES.encrypt((decoded.sub).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('password', CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('languageId', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n\n                            // response.data.password = CryptoJS.AES.encrypt(JSON.stringify(password), 'my-secret-key@123').toString();\n\n                            AuthenticationService.setupAxiosInterceptors();\n\n                            this.props.history.push(`/welcome`)  \n                        }\n                    })\n                    .catch(\n                        error => {\n                            // console.log(\"response in catch---\"+error.response);\n                            if (error.response != null && error.response.status === 401) {\n                                switch (error.response.data) {\n                                    case \"Password expired\":\n                                        this.setState({\n                                            message: error.response.data\n                                        })\n                                        this.props.history.push({\n                                            pathname: \"/updateExpiredPassword\",\n                                            state: { username: username }\n                                        });\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data\n                                        })\n                                        break\n                                }\n                            } else {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                }\n                            }\n                        }\n                    );\n            }\n            else {\n                if (AuthenticationService.isUserLoggedIn()) {\n                    var usernameBytes = CryptoJS.AES.decrypt(localStorage.getItem('username').toString(), `${SECRET_KEY}`);\n                    var decryptedUsername = usernameBytes.toString(CryptoJS.enc.Utf8);\n\n                    var passWordBytes = CryptoJS.AES.decrypt(localStorage.getItem('password').toString(), `${SECRET_KEY}`);\n                    var decryptedPassword = passWordBytes.toString(CryptoJS.enc.Utf8);\n\n                    if (username === decryptedUsername) {\n                        bcrypt.compare(password, decryptedPassword, function (err, res) {\n                            if (err) {\n                                console.log(\"error---\" + err);\n                            }\n                            if (res) {\n                                localStorage.setItem('typeOfSession', \"Offline\");\n                                console.log(\"Offline authentication\");\n                                this.props.history.push(`/welcome`)\n                            } else {\n                                this.setState({ message: 'Bad credentials' });\n                                console.log(\"Password do not match\");\n                            }\n                        }.bind(this));\n                    } else {\n                        this.setState({ message: 'Username does not match' });\n                        console.log(\"Username do not match\");\n                    }\n                    // bcrypt.compare(password, userOff.password, function (err, res) {\n                    //     if (err) {\n                    //         console.log(\"error---\" + err);\n                    //     }\n                    //     if (res && username == userOff.username) {\n                    //         userOff.sessionExpiresOn = moment(new Date(new Date().getTime() + 30 * 60000)).format('YYYY-MM-DD HH:mm');\n                    //         localStorage.setItem('user', JSON.stringify(userOff));\n                    //         this.props.history.push(`/welcome`)\n                    //     } else {\n                    //         this.setState({ message: 'Password do not match' });\n                    //         console.log(\"Password do not match\");\n                    //     }\n                    // }.bind(this));\n                } else {\n                    alert(\"You must be Online for a first time login.\")\n                }\n            }\n        }\n    }\n\n    forgotPassword() {\n        this.props.history.push(`/forgotPassword`)\n    }\n}\n\n","import React, { Component } from \"react\";\n\nclass WelcomeComponent extends Component {\n\n    constructor(props) {\n        super(props);\n       {/* this.listUserApproval=this.listUserApproval.bind(this);*/}\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Welcome!!</h1>\n                <p>{this.props.match.params.message}</p>\n            </>\n        );\n    }\n\n   /*{ listUserApproval() {\n        this.props.history.push(`/listUserApproval`)\n    }*/\n}\n\nexport default WelcomeComponent","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\n\nclass UserService {\n    getLanguageList() {\n        return axios.get(`${API_URL}/api/getLanguageList`, {\n        });\n    }\n    getRoleList() {\n        return axios.get(`${API_URL}/api/getRoleList`, {\n        });\n    }\n    getBusinessFunctionList() {\n        return axios.get(`${API_URL}/api/getBusinessFunctionList`, {\n        });\n    }\n    getRealmList() {\n        return axios.get(`${API_URL}/api/getRealmList`, {\n        });\n    }\n    addNewUser(json) {\n        console.log(json);\n        // var jsonString=JSON.stringify(json);\n\n        return axios.put(`${API_URL}/api/addNewUser/`, json, {\n        });\n    }\n    addNewRole(json) {\n        console.log(json);\n        // var jsonString=JSON.stringify(json);\n\n        return axios.put(`${API_URL}/api/addNewRole/`, json, {\n        });\n    }\n\n    getUserList() {\n        return axios.get(`${API_URL}/api/getUserList`, {\n        });\n    }\n    getUserByUserId(userId) {\n        return axios.get(`${API_URL}/api/getUserByUserId/${userId}`, {\n        });\n    }\n    editUser(json) {\n        return axios.put(`${API_URL}/api/editUser/`, json, {\n        });\n    }\n\n    editRole(json) {\n        console.log(json);\n        // var jsonString=JSON.stringify(json);\n\n        return axios.put(`${API_URL}/api/editRole/`, json, {\n        });\n    }\n    unlockAccount(userId, emailId) {\n        return axios.put(`${API_URL}/api/unlockAccount/${userId}/${emailId}`, {\n        });\n    }\n    updateExpiredPassword(userId, oldPassword, newPassword) {\n        return axios.post(`${API_URL}/api/updateExpiredPassword/`, { userId, oldPassword, newPassword }, {});\n    }\n    forgotPassword(username) {\n        return axios.get(`${API_URL}/api/forgotPassword/${username}`, {});\n    }\n}\n\nexport default new UserService()","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport { EMAIL_ID, PHONE_NO, REALM, ROLE, PREFERRED_LANGUAGE,BTN_SUBMIT, BTN_CANCEL, TITLE_ADD_USER, USERNAME } from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\nexport default class AddUserComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            languageId: AuthenticationService.getLanguageId(),\n            realms: [],\n            languages: [],\n            roles: []\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(\"check---\"+AuthenticationService.checkTypeOfSession());\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getRealmList()\n            .then(response => {\n                this.setState({\n                    realms: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getLanguageList()\n            .then(response => {\n                this.setState({\n                    languages: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#userForm\").validate({\n            ignore: [],\n            rules: {\n                emailId: {\n                    required: true,\n                    email: true\n                },\n                phoneNumber: {\n                    required: true,\n                    number: true\n                },\n                languageId: {\n                    required: true\n                },\n                roleId: {\n                    required: true\n                },\n                username: {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        const { realms } = this.state;\n        const { languages } = this.state;\n        const { roles } = this.state;\n\n        let realmList = realms.length > 0\n            && realms.map((item, i) => {\n                return (\n                    <option key={i} value={item.realmId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        let languagesList = languages.length > 0\n            && languages.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>\n                        {item.languageName}\n                    </option>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div className=\"addUser\">\n                <div><h5>{this.state.message}</h5></div>\n                <div className=\"page-navigation-toggled page-container-wide\">\n                    <div className=\"page-content\">\n                        <div className=\"page-content-wrap\">\n                        \n                            <div className=\"row\">\n                                <div className=\"col-md-offset-3 col-md-6\" style={{ margin: '40px', border: '5px solid black' }} >\n                                    <form name=\"userForm\" id=\"userForm\">\n                                        <div className=\"panel panel-default\" style={{ background: '#ffffffad' }}>\n                                            <div className=\"panel-heading\"> <h3>{TITLE_ADD_USER}</h3> </div>\n                                            <div className=\"col-md-offset-1 panel-body\">\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\"> {REALM}</label>\n                                                    <div className=\"col-md-6 col-xs-12\">\n                                                        <select className=\"form-control select\" id=\"realmId\" name=\"realmId\">\n                                                            <option value=\"\">-Nothing Selected-</option>\n                                                            {realmList}\n                                                        </select>\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{USERNAME} </label>\n                                                    <div className=\"col-md-6 col-xs-12\"> <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" />\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{EMAIL_ID} </label>\n                                                    <div className=\"col-md-6 col-xs-12\">\n                                                        <input className=\"form-control\" type=\"text\" id=\"emailId\" name=\"emailId\" />\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{PHONE_NO}</label>\n                                                    <div className=\"col-md-6 col-xs-12\">\n                                                        <input className=\"form-control\" type=\"text\" id=\"phoneNumber\" name=\"phoneNumber\" maxLength=\"15\" minLength=\"4\" />\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{ROLE} </label><div className=\"col-md-6 col-xs-12\"> <select className=\"form-control select\" id=\"roleId\" name=\"roleId\">\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {roleList}\n                                                    </select></div>\n                                                </div><br />\n                                                {/* <div className=\"form-group\">\n                                                <label className=\"req col-md-3 col-xs-12 control-label\">{COUNTRY} </label><div className=\"col-md-6 col-xs-12\"> <select className=\" form-control mdb-select colorful-select dropdown-primary md-form\" id=\"countryIds\" name=\"countryIds\">\n                                                    <option value=\"\">-Nothing Selected-</option>\n                                                    {roleList}\n                                                </select></div>\n                                                </div><br /> */}\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{PREFERRED_LANGUAGE} </label> <div className=\"col-md-6 col-xs-12\"><select className=\"form-control select\" id=\"languageId\" name=\"languageId\">\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {languagesList}\n                                                    </select></div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <div className=\"col-md-6 col-xs-12\"><button className=\"btn btn-success\" type=\"button\" onClick={this.submitClicked}>{BTN_SUBMIT}</button>\n                                                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.cancelClicked}>{BTN_CANCEL}</button></div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div></div></div></div></div></div>\n        )\n    }\n    submitClicked() {\n        console.log($(\"#countryIds\").val())\n        if (navigator.onLine) {\n            console.log(\"check---\"+AuthenticationService.checkTypeOfSession());\n            if (AuthenticationService.checkTypeOfSession()) {\n                var json = {\n                    username: $(\"#username\").val(),\n                    emailId: $(\"#emailId\").val(),\n                    phoneNumber: $(\"#phoneNumber\").val(),\n                    realm: {\n                        realmId: $(\"#realmId\").val()\n                    },\n                    role: {\n                        roleId: $(\"#roleId\").val()\n                    },\n                    language: {\n                        languageId: $(\"#languageId\").val()\n                    },\n                    countryIds: $(\"#countryIds\").val()\n                }\n                if ($(\"#userForm\").valid()) {\n                    UserService.addNewUser(json)\n                        .then(response => {\n                            this.props.history.push(`/userList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/userList/` + \"Action Canceled\")\n    }\n\n}\n\n","export const TITLE_ADD_USER = 'Create new user'\nexport const TITLE_USER_LIST = 'User List'\nexport const TITLE_EDIT_USER = 'Update user - '\nexport const TITLE_ADD_ROLE = 'ADD NEW ROLE'\nexport const TITLE_ROLE_LIST = 'ROLE LIST'\nexport const TITLE_EDIT_ROLE = 'UPDATE ROLE'\nexport const USERNAME = 'Username'\nexport const EMAIL_ID = 'Email Id'\nexport const PHONE_NO = 'Phone No'\nexport const ADDRESS = 'Address'\nexport const COUNTRY = 'Country'\nexport const REALM = 'Realm'\nexport const STATE = 'State/Province'\nexport const CITY = 'City'\nexport const ROLE = 'Role'\nexport const ACTIVE = 'Status'\nexport const LAST_LOGIN_DATE = 'Last Login Date'\nexport const FAILED_ATTEMPTS = 'Failed Attempts'\nexport const PREFERRED_LANGUAGE = 'Preferred Language'\nexport const BTN_SUBMIT = 'Submit'\nexport const BTN_CANCEL = 'Cancel'\nexport const BTN_UPDATE = 'Update'\nexport const BTN_EDIT = 'Update'\nexport const BTN_FAILED_ATTEMPTS = 'Unlock account'\nexport const LANGUAGE_NAME = 'Language name'\nexport const HEALTH_AREA = 'Health Area'\nexport const ORGANISATION = 'Organisation'\nexport const REGION = 'Region'\nexport const ROLE_NAME = 'Role Name'\nexport const ROLE_NAME_ENG = 'Role Name[English]'\nexport const ROLE_NAME_SPA = 'Role Name[Spanish]'\nexport const ROLE_NAME_FRE = 'Role Name[French]'\nexport const ROLE_NAME_POR = 'Role Name[Portuguese]'\nexport const ROLE_ID = 'Role Id'\nexport const BUSINESS_FUNCTION = 'Business Function'\nexport const CAN_CREATE_ROLE = 'Can Create Role'\nexport const BTN_DOWNLOAD='DOWNLOAD'\nexport const BTN_EXPORT='EXPORT'\nexport const EXPORT_TITLE='Export Program Data'\nexport const PROGRAM='Program'\nexport const NOTHING_SELECTED='-Nothing Selected-'\nexport const DOWNLOAD_TITLE='Download Program Data'\nexport const IMPORT_TITLE='Import Program Data'\nexport const BTN_IMPORT='Import'\nexport const DATA_DOWNLOAD_SUCCESS='Data downloaded successfully.'\nexport const DATA_EXPORT_SUCCESS='Data exported successfully.'\nexport const DATA_IMPORT_SUCCESS='DATA imported successfully'\nexport const IMPORT_PROGRAM='Select programs to import'\nexport const IS_ACTIVE = 'Active'\nexport const ADD_LANGUAGE = 'Add Language'\nexport const UPDATE_LANGUAGE = 'Update Language'\nexport const SUBMIT_BUTTON = 'Submit'\nexport const UPDATE_BUTTON = 'Update'\nexport const ADD_NEW_LANGUAGE_TITLE = 'Add New Language'\nexport const ADD_DATASOURCE_TYPE = 'Add Data Source Type'\nexport const DATASOURCE_TYPE_NAME_EN = 'Data source type name (English)'\nexport const DATASOURCE_TYPE_NAME_FR = 'Data source  type name (French)'\nexport const DATASOURCE_TYPE_NAME_SP = 'Data source type  name (Spanish)'\nexport const DATASOURCE_TYPE_NAME_PO = 'Data source type name (portuguese)'\nexport const DATA_SOURCE_TYPE_LIST = 'Data Source Type List'\nexport const DATA_SOURCE_TYPE_ACTIVE = 'Active'\nexport const UPDATE_DATA_SOURCE_TYPE = \"Update Data Source Type\"\nexport const ADD_NEW_DATA_SOURCE_TYPE = \"Add New Data Source Type\"\nexport const ADD_DATASOURCE = 'Add Data Source'\nexport const UPDATE_DATASOURCE = 'Update Data Source'\nexport const DATASOURCE_NAME_EN = 'Data source name (English)'\nexport const DATASOURCE_NAME_FR = 'Data source name (French)'\nexport const DATASOURCE_NAME_SP = 'Data source name (Spanish)'\nexport const DATASOURCE_NAME_PO = 'Data source name (portuguese)'\nexport const DATASOURCE_ACTIVE = 'Active'\nexport const DATA_SOURCE_LIST = 'Data Source  List'\nexport const SELECT_DATA_SOURCE_TYPE='Select Data Source Type'\nexport const ADD_NEW_DATA_SOURCE = \"Add New Data Source\"\n\nexport const ADD_CURRENCY = 'Add Currency'\nexport const UPDATE_CURRENCY = 'Update Currency'\nexport const CURRENCY_NAME_EN = 'Currency name (English)'\nexport const CURRENCY_NAME_FR = 'Currency name (French)'\nexport const CURRENCY_NAME_SP = 'Currency name (Spanish)'\nexport const CURRENCY_NAME_PO = 'Currency name (portuguese)'\nexport const CURRENCY_CODE = 'Currency code'\nexport const CURRENCY_SYMBOL = 'Currency symbol'\nexport const CONVERSIONRATE_TO_USD = 'Conversion rate to usd'\nexport const CURRENCY_LIST=\"Currency List\"\nexport const ADD_NEW_CURRENCY=\"Add New Currency\"\n\nexport const COUNTRY_NAME_EN = 'Country name (English)'\nexport const COUNTRY_NAME_FR = 'Country name (French)'\nexport const COUNTRY_NAME_SP = 'Country name (Spanish)'\nexport const COUNTRY_NAME_PO = 'Country name (portuguese)'\nexport const SELECT_LANGUAGE='Select language'\nexport const SELECT_CURRENCY='Select currency'\nexport const ADD_COUNTRY='Add Country'\nexport const ADD_NEW_COUNTRY='Add New Country'\nexport const COUNTRY_LIST='Country List'\nexport const COUNTRY_ACTIVE=\"Active\"\nexport const UPDATE_COUNTRY=\"Update Country\"\n\nexport const ADD_SHIPMENT_STATUS=\"Add Shipment Status\"\nexport const UPDATE_SHIPMENT_STATUS=\"Update Shipment Status\"\nexport const SHIPMENTSTATUS_NAME_EN = 'Shipment status name (English)'\nexport const SHIPMENTSTATUS_NAME_FR = 'Shipment status name (French)'\nexport const SHIPMENTSTATUS_NAME_SP = 'Shipment status name (Spanish)'\nexport const SHIPMENTSTATUS_NAME_PO = 'Shipment status name (portuguese)'\nexport const SHIPMENT_STATUS_LIST='Shipment Status List'\nexport const ADD_NEW_SHIPMENT_STATUS='Add New Shipment Status'\nexport const SELECT_NEXT_SHIPMENT_STATUS='Select next shipment status'\n\n\n\n\n","import React, { Component } from 'react';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport { EMAIL_ID, PHONE_NO, REALM, ROLE, PREFERRED_LANGUAGE, TITLE_USER_LIST, TITLE_ADD_USER, ACTIVE, LAST_LOGIN_DATE, FAILED_ATTEMPTS, BTN_EDIT, BTN_FAILED_ATTEMPTS, USERNAME } from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nexport default class UserListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: []\n        }\n        this.editUser = this.editUser.bind(this);\n        this.unlockAccount = this.unlockAccount.bind(this);\n        this.addNewUser = this.addNewUser.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getUserList()\n            .then(response => {\n                this.setState({\n                    userList: response.data\n                })\n            })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n    render() {\n        return (\n            <div className=\"userList\">\n                <p>{this.props.match.params.message}</p>\n                <h1>{TITLE_USER_LIST}</h1>\n                <div className=\"container\">\n                    <button className=\"btn btn-add\" type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewUser}>{TITLE_ADD_USER}</button><br /><br />\n                    <div className=\"row\">\n                        <div className=\"col-md-12 scrollable\"></div>\n                        <table className=\"table table-responsive\" border=\"1\" align=\"center\">\n                            <thead>\n                                <tr>\n                                    <th>{REALM}</th>\n                                    <th>{USERNAME}</th>\n                                    <th>{EMAIL_ID}</th>\n                                    <th>{PHONE_NO}</th>\n                                    <th>{ROLE}</th>\n                                    <th>{PREFERRED_LANGUAGE}</th>\n                                    <th>{LAST_LOGIN_DATE}</th>\n                                    <th>{FAILED_ATTEMPTS}</th>\n                                    <th>{ACTIVE}</th>\n                                    <th>{BTN_EDIT}</th>\n                                    <th>{BTN_FAILED_ATTEMPTS}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.userList.map(\n                                        user =>\n                                            // <tr key={user.userId} onClick={() => this.editUser(user.userId)}>\n                                            <tr key={user.userId} onClick={() => this.editUser(user)}>\n                                                <td>\n                                                    {user.realm.label.engLabel}\n                                                </td>\n                                                <td>{user.username}</td>\n                                                <td>{user.emailId}</td>\n                                                <td>{user.phoneNumber}</td>\n                                                <td>{user.role.label.engLabel}</td>\n                                                <td>{user.language.languageName}</td>\n                                                <td>{user.lastLoginDate}</td>\n                                                <td>{user.faildAttempts}</td>\n                                                <td>{user.active.toString() === \"true\" ? \"Active\" : \"Disabled\"}\n                                                </td>\n                                                <td><button type=\"button\" onClick={() => this.editUser(user)}>{BTN_EDIT}</button></td>\n                                                <td><button type=\"button\" onClick={(e) => { e.stopPropagation(); this.unlockAccount(user.userId, user.emailId) }}>{BTN_FAILED_ATTEMPTS}</button></td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table></div>\n                </div>\n\n            </div>\n        )\n    }\n    editUser(user) {\n        this.props.history.push({\n            pathname: \"/editUser\",\n            state: { user: user }\n        });\n    }\n    unlockAccount(userId, emailId) {\n        if (navigator.onLine) {\n            UserService.unlockAccount(userId, emailId)\n                .then(response => {\n                    this.props.history.push(`/userList/${response.data.message}`)\n                    window.location.reload();\n                })\n                .catch(\n                    error => {\n                        switch (error.message) {\n                            case \"Network Error\":\n                                this.setState({\n                                    message: error.message\n                                })\n                                break\n                            default:\n                                this.setState({\n                                    message: error.response.data.message\n                                })\n                                break\n                        }\n                    }\n                );\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    addNewUser() {\n        if (navigator.onLine) {\n            this.props.history.push(`/addUser`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport { EMAIL_ID, PHONE_NO, REALM, ROLE, PREFERRED_LANGUAGE, ACTIVE, BTN_UPDATE, BTN_CANCEL, TITLE_EDIT_USER, USERNAME } from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\nexport default class EditUserComponent extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            languageId: AuthenticationService.getLanguageId(),\n            realms: [],\n            languages: [],\n            roles: [],\n            user: '',\n            'user.active': true\n        }\n        this.updateClicked = this.updateClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            user: this.props.location.state.user\n        });\n        UserService.getRealmList()\n            .then(response => {\n                this.setState({\n                    realms: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getLanguageList()\n            .then(response => {\n                this.setState({\n                    languages: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#userForm\").validate({\n            ignore: [],\n            rules: {\n                'user.emailId': {\n                    required: true,\n                    email: true\n                },\n                'user.phoneNumber': {\n                    required: true,\n                    number: true\n                },\n                'username': {\n                    required: true\n                },\n                'user.language.languageId': {\n                    required: true\n                },\n                'user.role.roleId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    dataChange(event) {\n        let { user } = this.state\n        if (event.target.name === \"user.realm.realmId\") {\n            user.realm.realmId = event.target.value\n        }\n        else if (event.target.name === \"user.realm.realmId\") {\n            user.realm.realmId = event.target.value\n        }\n        else if (event.target.name === \"user.role.roleId\") {\n            user.role.roleId = event.target.value\n        }\n        else if (event.target.name === \"user.language.languageId\") {\n            user.language.languageId = event.target.value\n        }\n        else if (event.target.name === \"user.emailId\") {\n            user.emailId = event.target.value\n        }\n        else if (event.target.name === \"user.username\") {\n            user.username = event.target.value\n        }\n        else if (event.target.name === \"user.phoneNumber\") {\n            user.phoneNumber = event.target.value\n        }\n        else if (event.target.name === \"user.active\") {\n            user.active = event.target.id === \"user.active2\" ? false : true\n        }\n\n        this.setState({\n            user\n        }, (\n        ) => {\n            // console.log(\"state after update---\",this.state.user)\n        })\n    }\n\n    render() {\n        const { realms } = this.state;\n        const { languages } = this.state;\n        const { roles } = this.state;\n        const { user } = this.state;\n\n        let realmList = realms.length > 0\n            && realms.map((item, i) => {\n                return (\n                    <option key={i} value={item.realmId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        let languagesList = languages.length > 0\n            && languages.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>\n                        {item.languageName}\n                    </option>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div className=\"addUser\">\n                <form name=\"userForm\" id=\"userForm\">\n                    <h3>{TITLE_EDIT_USER}{this.state.user.userId}</h3>\n                    {REALM} : <select id=\"user.realm.realmId\" name=\"user.realm.realmId\" value={this.state.user.realm ? this.state.user.realm.realmId : ''} onChange={this.dataChange}>\n                        <option value=\"\">-Nothing Selected-</option>\n                        {realmList}\n                    </select><br></br><br></br>\n                    {USERNAME} : <input type=\"text\" id=\"user.username\" name=\"user.username\" value={this.state.user.username} onChange={this.dataChange} /><br></br><br></br>\n                    {EMAIL_ID} : <input type=\"text\" id=\"user.emailId\" name=\"user.emailId\" value={this.state.user.emailId} onChange={this.dataChange} /><br></br><br></br>\n                    {PHONE_NO} : <input type=\"text\" id=\"user.phoneNumber\" name=\"user.phoneNumber\" value={this.state.user.phoneNumber} onChange={this.dataChange} maxLength=\"15\" minLength=\"4\" /><br></br><br></br>\n                    {ROLE} : <select id=\"user.role.roleId\" name=\"user.role.roleId\" value={this.state.user.role ? this.state.user.role.roleId : ''} onChange={this.dataChange}>\n                        <option value=\"\">-Nothing Selected-</option>\n                        {roleList}\n                    </select><br></br><br></br>\n                    {PREFERRED_LANGUAGE} : <select id=\"user.language.languageId\" name=\"user.language.languageId\" value={this.state.user.language ? this.state.user.language.languageId : ''} onChange={this.dataChange}>\n                        <option value=\"\">-Nothing Selected-</option>\n                        {languagesList}\n                    </select><br></br><br></br>\n                    {ACTIVE}:\n                    <input type=\"radio\" id=\"user.active1\" name=\"user.active\" value={true} checked={this.state.user.active === true} onChange={this.dataChange} /> Active\n                    <input type=\"radio\" id=\"user.active2\" name=\"user.active\" value={false} checked={this.state.user.active === false} onChange={this.dataChange} /> Disabled\n                    <br></br><br></br>\n\n                    <button type=\"button\" onClick={this.updateClicked}>{BTN_UPDATE}</button>\n                    <button type=\"button\" onClick={this.cancelClicked}>{BTN_CANCEL}</button><br></br><br></br>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n    updateClicked() {\n        if (navigator.onLine) {\n            if (AuthenticationService.checkTypeOfSession()) {\n                var json = this.state.user;\n                if ($(\"#userForm\").valid()) {\n                    UserService.editUser(json)\n                        .then(response => {\n                            this.props.history.push(`/userList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/userList/` + \"Action Canceled\")\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from '../../api/UserService'\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport { SECRET_KEY } from '../../Constants.js'\nimport jwt_decode from 'jwt-decode'\n\n\nexport default class UpdateExpiredPasswordComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            username: this.props.location.state.username\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.logoutClicked = this.logoutClicked.bind(this);\n    }\n\n\n    componentDidMount() {\n        console.log(\"mount called for\");\n        // AuthenticationService.setupAxiosInterceptors();\n        $.validator.addMethod('checkPassword', function () {\n            if ($('#newPassword').val() === $('#confirmNewPassword').val()) {\n                return true;\n            } else {\n                return false;\n            }\n        }, 'The New passwords do not match.');\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                oldPassword: {\n                    required: true\n                },\n                newPassword: {\n                    required: true\n                },\n                confirmNewPassword: {\n                    required: true,\n                    checkPassword: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Update Password</h3>\n                    Old password : <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" /><br></br><br></br>\n                    New password : <input type=\"password\" id=\"newPassword\" name=\"newPassword\" /><br></br><br></br>\n                    Confirm new password : <input type=\"password\" id=\"confirmNewPassword\" name=\"confirmNewPassword\" /><br></br><br></br>\n                    <Online><button type=\"button\" onClick={this.submitClicked}>Submit</button></Online>\n                    <Online><button type=\"button\" onClick={this.logoutClicked}>Logout</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    submitClicked() {\n        if ($(\"#form1\").valid()) {\n            if (navigator.onLine) {\n                UserService.updateExpiredPassword(this.state.username, $('#oldPassword').val(), $('#newPassword').val())\n                    .then(response => {\n                        console.log(response.data.data)\n                        var decoded = jwt_decode(response.data.token);\n                        localStorage.setItem('token', response.data.token);\n                        localStorage.setItem('typeOfSession', \"Online\");\n                        localStorage.setItem('userId', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                        localStorage.setItem('username', CryptoJS.AES.encrypt((decoded.sub).toString(), `${SECRET_KEY}`));\n                        localStorage.setItem('password', CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                        localStorage.setItem('languageId', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n                        this.props.history.push(`/welcome/${response.data.message}`)\n                    })\n                    .catch(\n                        error => {\n                            console.log(error.message);\n                            console.log(error.text);\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    );\n            } else {\n                alert(\"You must be Online to update the password.\")\n            }\n        }\n    }\n\n    logoutClicked() {\n        this.props.history.push(`/login/You are logged out.`)\n    }\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from '../../api/UserService'\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport { SECRET_KEY } from '../../Constants.js'\n\n\nexport default class ChangePasswordComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        $.validator.addMethod('checkPassword', function () {\n            if ($('#newPassword').val() === $('#confirmNewPassword').val()) {\n                return true;\n            } else {\n                return false;\n            }\n        }, 'The new password does not match.');\n\n        $.validator.addMethod('checkOldPassword', function () {\n            if ($('#newPassword').val() === $('#oldPassword').val()) {\n                console.log(\"same\");\n                return false;\n            } else {\n                console.log(\"different\");\n                return true;\n            }\n        }, \"The new password can't be same as old password.\");\n\n        // $.validator.addMethod('checkOldPassword', function () {\n        //     let userOff = JSON.parse(localStorage.getItem('user'));\n        //     let val;\n        //     console.log(\"password---\"+$('#oldPassword').val())\n        //     bcrypt.compare($('#oldPassword').val(), userOff.password, function (err, res) {\n        //         console.log(\"res---\"+res);\n        //             val = res; \n        //     });\n        //     if (val === true) {\n        //         return true;\n        //     } \n        //     if(val === false) {\n        //         return false;\n        //     }\n        //     // return val;\n        // }, 'Old password is incorrect.');\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                oldPassword: {\n                    required: true\n                },\n                newPassword: {\n                    required: true,\n                    checkOldPassword:true\n                },\n                confirmNewPassword: {\n                    required: true,\n                    checkPassword: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Update Password</h3>\n                    Old password : <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" /><br></br><br></br>\n                    New password : <input type=\"password\" id=\"newPassword\" name=\"newPassword\" /><br></br><br></br>\n                    Confirm new password : <input type=\"password\" id=\"confirmNewPassword\" name=\"confirmNewPassword\" /><br></br><br></br>\n                    <Online><button type=\"button\" onClick={this.submitClicked}>Submit</button></Online>\n                    <Online><button type=\"button\" onClick={this.cancelClicked}>Cancel</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    submitClicked() {\n        if ($(\"#form1\").valid()) {\n            if (navigator.onLine) {\n                UserService.updateExpiredPassword(AuthenticationService.getLoggedInUserId(),$('#oldPassword').val(),$('#newPassword').val())\n                    .then(response => {\n                        console.log(response.statusText)\n                        localStorage.setItem('password', CryptoJS.AES.encrypt((response.data.data).toString(), `${SECRET_KEY}`));\n                        this.props.history.push(`/welcome/${response.data.message}`)\n                    })\n                    .catch(\n                        error => {\n                            console.log(error.message);\n                            console.log(error.text);\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    );\n            } else {\n                alert(\"You must be Online to update the password.\")\n            }\n        }\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/welcome/Action canceled.`)\n    }\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from '../../api/UserService'\nimport { Online } from \"react-detect-offline\";\n\nexport default class ForgotPasswordComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                username: {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Forgot Password</h3>\n                    Username : <input type=\"text\" id=\"username\" name=\"username\" /><br></br><br></br>\n                    <Online><button type=\"button\" onClick={this.submitClicked}>Submit</button></Online>\n                    <Online><button type=\"button\" onClick={this.cancelClicked}>Cancel</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    submitClicked() {\n        if ($(\"#form1\").valid()) {\n            if (navigator.onLine) {\n                UserService.forgotPassword($('#username').val())\n                    .then(response => {\n                        // console.log(response.statusText)\n                        this.props.history.push(`/login/${response.data.message}`)\n                    })\n                    .catch(\n                        error => {\n                            console.log(error.message);\n                            console.log(error.text);\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    );\n            } else {\n                alert(\"You must be Online to update the password.\")\n            }\n        }\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/login/Action Canceled.`)\n    }\n}\n\n","import React, { Component } from 'react';\nimport UserService from \"../../api/UserService.js\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as labels from '../../Labels.js'\n\n\nexport default class RoleListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            roles: [],\n            message: \"\"\n        }\n        this.editRole = this.editRole.bind(this);\n        this.addNewRole = this.addNewRole.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getRoleList()\n            .then(response => {\n                console.log(\"rol list---\" + response.data);\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    render() {\n        return (\n            <div className=\"roleList\">\n                <p>{this.props.match.params.message}</p>\n                <h3>{this.state.message}</h3>\n                <div>{labels.TITLE_ROLE_LIST}</div>\n                <button className=\"btn btn-add\" type=\"button\" style={{ marginLeft: '-736px' }} onClick={this.addNewRole}>{labels.TITLE_ADD_ROLE}</button><br /><br />\n                <table border=\"1\" align=\"center\">\n                    <thead>\n                        <tr>\n                            <th>{labels.ROLE_ID}</th>\n                            <th>{labels.ROLE_NAME_ENG}</th>\n                            <th>{labels.ROLE_NAME_POR}</th>\n                            <th>{labels.ROLE_NAME_FRE}</th>\n                            <th>{labels.ROLE_NAME_SPA}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.roles.map(role =>\n                                <tr key={role.roleId} onClick={() => this.editRole(role)}>\n                                    <td>{role.roleId}</td>\n                                    <td>{role.label.engLabel}</td>\n                                    <td>{role.label.porLabel}</td>\n                                    <td>{role.label.freLabel}</td>\n                                    <td>{role.label.spaLabel}</td>\n                                </tr>)\n                        }\n                    </tbody>\n                </table>\n                <br />\n            </div>\n        );\n    }\n    editRole(role) {\n        this.props.history.push({\n            pathname: \"/editRole\",\n            state: { role: role }\n        });\n    }\n    addNewRole() {\n        if (navigator.onLine) {\n            this.props.history.push(`/addRole`);\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport * as labels from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport '../../css/bootstrap/bootstrap.min.css';\nimport '../../App.css'\n\n\nexport default class AddRoleComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            businessFunctions: [],\n            roles: [],\n            message: '',\n            languageId: AuthenticationService.getLanguageId(),\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        // this.dataChange = this.dataChange.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    // dataChange(event) {\n    //     let { role } = this.state\n    //     // console.log(\"business function---\", event.target.value);\n    //     console.log(\"name---------------\" + event.target.name);\n    //     switch (event.target.name) {\n    //         case \"role.label.engLabel\": role.label.engLabel = event.target.value;\n    //         case \"role.label.porLabel\": role.label.porLabel = event.target.value;\n    //         case \"role.label.freLabel\": role.label.freLabel = event.target.value;\n    //         case \"role.label.spaLabel\": role.label.spaLabel = event.target.value;\n    //         case \"role.businessFunctions\": role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value);\n    //         case \"role.canCreateRole\": role.canCreateRole = event.target.value;\n    //         default: [event.target.name] = event.target.value;\n    //     }\n\n    //     this.setState({\n    //         role\n    //     }, (\n    //     ) => {\n    //         console.log(\"state after update---\", this.state.role)\n    //     })\n    // }\n\n    // handleChange(event) {\n    //     this.setState({\n    //         role: {\n    //             label: {\n    //                 engLabel: ''\n    //             },\n    //             businessFunctions: Array.from(event.target.selectedOptions, (item) => item.value)\n    //         }\n    //     }, (\n    //     ) => {\n    //         console.log(\"state after update---\", this.state.role)\n    //     });\n    // }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getBusinessFunctionList()\n            .then(response => {\n                console.log(\"business functions---\", response.data);\n                this.setState({\n                    businessFunctions: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                console.log(\"role list---\", response.data);\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n\n        $(\"#roleForm\").validate({\n            ignore: [],\n            rules: {\n                'role.label.engLabel': {\n                    required: true,\n                    // lettersonly: true,\n                    maxlength: 255\n\n                },\n                'role.label.porLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.freLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.spaLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.businessFunctions': {\n                    required: true\n                },\n                'role.canCreateRole': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        const { businessFunctions } = this.state;\n        const { roles } = this.state;\n\n        let businessFunctionsList = businessFunctions.length > 0\n            && businessFunctions.map((item, i) => {\n                return (\n                    <>\n                        <option key={i} value={item.businessFunctionId}>\n                            {(() => {\n                                switch (this.state.languageId) {\n                                    case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                    case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                    case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                    default: return item.label.engLabel;\n                                }\n                            })()}\n                        </option>\n                    </>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div class=\"page-container page-navigation-toggled page-container-wide\">\n                <div class=\"page-content\">\n                    <ul class=\"breadcrumb\">\n                        <li><a href=\"#\">Home</a></li>\n                        <li><a href=\"#\">Admin</a></li>\n                        <li><a href=\"#\">Role</a></li>\n                        <li><a href=\"#\">Add Role</a></li>\n                    </ul>\n                    <div class=\"page-content-wrap\">\n                        <div><h5>{this.state.message}</h5></div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n\n                                <form name=\"roleForm\" id=\"roleForm\" class=\"form-horizontal\">\n                                    <div class=\"panel panel-default\">\n                                        <div class=\"panel-heading\">\n                                            <h3 class=\"panel-title\">{labels.TITLE_ADD_ROLE}</h3>\n                                        </div>\n                                        <div class=\"panel-body\">\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_ENG}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.engLabel\" class=\"form-control\" name=\"role.label.engLabel\" />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_POR}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.porLabel\" name=\"role.label.porLabel\" class=\"form-control\" />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_FRE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.freLabel\" name=\"role.label.freLabel\" class=\"form-control\" />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_SPA}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.spaLabel\" name=\"role.label.spaLabel\" class=\"form-control\" />\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.BUSINESS_FUNCTION}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.businessFunctions\" class=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.businessFunctions\" multiple={true}>\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {businessFunctionsList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.CAN_CREATE_ROLE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.canCreateRole\" className=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.canCreateRole\" multiple={true} onChange={this.dataChange}>\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {roleList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.submitClicked}>{labels.BTN_SUBMIT}</button>\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.cancelClicked}>{labels.BTN_CANCEL}</button><br></br><br></br>\n\n                                        </div>\n                                        <div class=\"panel-footer\">\n                                            <div class=\"pull-right\">\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    submitClicked() {\n        console.log($(\"#role\\\\.businessFunctions\").val())\n        if (navigator.onLine) {\n            if (AuthenticationService.checkTypeOfSession()) {\n                if ($(\"#roleForm\").valid()) {\n                    var json = {\n                        label: {\n                            engLabel: $(\"#role\\\\.label\\\\.engLabel\").val(),\n                            porLabel: $(\"#role\\\\.label\\\\.porLabel\").val(),\n                            freLabel: $(\"#role\\\\.label\\\\.freLabel\").val(),\n                            spaLabel: $(\"#role\\\\.label\\\\.spaLabel\").val()\n                        },\n                        businessFunctions: $(\"#role\\\\.businessFunctions\").val(),\n                        canCreateRole: $(\"#role\\\\.canCreateRole\").val()\n                    }\n                    UserService.addNewRole(json)\n                        .then(response => {\n                            this.props.history.push(`/roleList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/roleList/` + \"Action Canceled\")\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport * as labels from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport '../../css/bootstrap/bootstrap.min.css';\nimport '../../App.css'\n\n\nexport default class AddRoleComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            businessFunctions: [],\n            roles: [],\n            message: '',\n            languageId: AuthenticationService.getLanguageId(),\n            role: this.props.location.state.role\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        // this.setState({\n        //     role: this.props.location.state.role\n        // });\n        UserService.getBusinessFunctionList()\n            .then(response => {\n                console.log(\"business functions---\", response.data);\n                this.setState({\n                    businessFunctions: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                console.log(\"role list---\", response.data);\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n\n        $(\"#roleForm\").validate({\n            ignore: [],\n            rules: {\n                'role.label.engLabel': {\n                    required: true,\n                    // lettersonly: true,\n                    maxlength: 255\n\n                },\n                'role.label.porLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.freLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.spaLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.businessFunctions': {\n                    required: true\n                },\n                'role.canCreateRole': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    dataChange(event) {\n        let { role } = this.state\n        console.log(\"name---------------\" + event.target.name);\n        if (event.target.name === \"role.label.engLabel\") {\n            role.label.engLabel = event.target.value\n        } else if (event.target.name === \"role.label.porLabel\") {\n            role.label.porLabel = event.target.value\n        }\n        else if (event.target.name === \"role.label.freLabel\") {\n            role.label.freLabel = event.target.value\n        }\n        else if (event.target.name === \"role.label.spaLabel\") {\n            role.label.spaLabel = event.target.value\n        }\n        else if (event.target.name === \"role.businessFunctions\") {\n            role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value)\n        }\n\n        else if (event.target.name === \"role.canCreateRole\") {\n            role.canCreateRole = Array.from(event.target.selectedOptions, (item) => item.value)\n        }\n        // switch (event.target.name) {\n        //     case \"role.label.engLabel\": role.label.engLabel = event.target.value;\n        //     case \"role.label.porLabel\": role.label.porLabel = event.target.value;\n        //     case \"role.label.freLabel\": role.label.freLabel = event.target.value;\n        //     case \"role.label.spaLabel\": role.label.spaLabel = event.target.value;\n        //     // case \"role.businessFunctions\": role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value);\n        //     // case \"role.canCreateRole\": role.canCreateRole = event.target.value;\n        //     // default: [event.target.name] = event.target.value;\n        // }\n\n        this.setState({\n            role\n        }, (\n        ) => {\n            console.log(\"state after update---\", this.state.role)\n        })\n    }\n\n\n    render() {\n        const { businessFunctions } = this.state;\n        const { roles } = this.state;\n\n        let businessFunctionsList = businessFunctions.length > 0\n            && businessFunctions.map((item, i) => {\n                return (\n                    <>\n                        <option key={i} value={item.businessFunctionId}>\n                            {(() => {\n                                switch (this.state.languageId) {\n                                    case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                    case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                    case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                    default: return item.label.engLabel;\n                                }\n                            })()}\n                        </option>\n                    </>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div class=\"page-container page-navigation-toggled page-container-wide\">\n                <div class=\"page-content\">\n                    <ul class=\"breadcrumb\">\n                        <li><a href=\"#\">Home</a></li>\n                        <li><a href=\"#\">Admin</a></li>\n                        <li><a href=\"#\">Role</a></li>\n                        <li><a href=\"#\">Edit Role</a></li>\n                    </ul>\n                    <div class=\"page-content-wrap\">\n                        <div><h5>{this.state.message}</h5></div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n\n                                <form name=\"roleForm\" id=\"roleForm\" class=\"form-horizontal\">\n                                    <div class=\"panel panel-default\">\n                                        <div class=\"panel-heading\">\n                                            <h3 class=\"panel-title\">{labels.TITLE_EDIT_ROLE}</h3>\n                                        </div>\n                                        <div class=\"panel-body\">\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_ENG}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.engLabel\" class=\"form-control\" name=\"role.label.engLabel\" value={this.state.role.label.engLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_POR}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.porLabel\" name=\"role.label.porLabel\" class=\"form-control\" value={this.state.role.label.porLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_FRE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.freLabel\" name=\"role.label.freLabel\" class=\"form-control\" value={this.state.role.label.freLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_SPA}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.spaLabel\" name=\"role.label.spaLabel\" class=\"form-control\" value={this.state.role.label.spaLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.BUSINESS_FUNCTION}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.businessFunctions\" class=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.businessFunctions\" multiple={true} value={this.state.role.businessFunctions} onChange={this.dataChange} placeholder=\"Please select business function\">\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {businessFunctionsList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.CAN_CREATE_ROLE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.canCreateRole\" className=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.canCreateRole\" multiple={true} value={this.state.role.canCreateRole} onChange={this.dataChange}>\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {roleList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.submitClicked}>{labels.BTN_UPDATE}</button>\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.cancelClicked}>{labels.BTN_CANCEL}</button><br></br><br></br>\n\n                                        </div>\n                                        <div class=\"panel-footer\">\n                                            <div class=\"pull-right\">\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    submitClicked() {\n        console.log($(\"#role\\\\.businessFunctions\").val())\n        if (navigator.onLine) {\n            if (AuthenticationService.checkTypeOfSession()) {\n                if ($(\"#roleForm\").valid()) {\n\n                    UserService.editRole(this.state.role)\n                        .then(response => {\n                            this.props.history.push(`/roleList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/roleList/` + \"Action Canceled\")\n    }\n\n}\n\n","import axios from \"axios\";\nimport {API_URL} from '../Constants.js'\nclass LanguageService{\n\naddLanguage(json){\n    return axios.put(`${API_URL}/api/addLanguage/`, json, {\n    });\n}\n\ngetLanguageList() {\n    return axios.get(`${API_URL}/api/getLanguageListAll/`, {\n    });\n}\ngetLanguageListActive() {\n    return axios.get(`${API_URL}/api/getLanguageList/`, {\n    });\n}\neditLanguage(json) {\n    return axios.put(`${API_URL}/api/editLanguage/`, json, {\n    });\n}\n\n}\n\nexport default new LanguageService()","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport * as myConst from '../../Labels.js';\nimport LanguageService from '../../api/LanguageService.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\nclass AddLanguageComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            languageName: ''\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n    updateFieldData(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        $(\"#languageForm\").validate({\n            ignore: [],\n            rules: {\n                languageName: {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 100\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    submitForm(event) {\n        if (navigator.onLine) {\n            console.log(\"user in online-----\");\n            if ($(\"#languageForm\").valid()) {\n                LanguageService.addLanguage(this.state).then(response => {\n                    this.props.history.push(`/languageList/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h3>{myConst.ADD_LANGUAGE}</h3>\n                <form name=\"languageForm\" id=\"languageForm\">\n                    <div>\n                        <label>{myConst.LANGUAGE_NAME}:-</label>\n                        <input type=\"text\" name=\"languageName\" value={this.state.languageName} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\nexport default AddLanguageComponent;","import React, { Component } from 'react';\nimport LanguageService from '../../api/LanguageService.js'\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\n\nexport default class LanguageListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            langaugeList: []\n        }\n        this.editLanguage = this.editLanguage.bind(this);\n        this.addNewLanguage = this.addNewLanguage.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        LanguageService.getLanguageList()\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    langaugeList: response.data\n                })\n            })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    editLanguage(language) {\n        this.props.history.push({\n            pathname: \"/editLanguage\",\n            state: { language: language }\n        });\n    }\n\n    addNewLanguage(){\n        if (navigator.onLine) {\n            this.props.history.push(`/addLanguage`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n            <p>{this.props.match.params.message}</p>\n            <div>\n             <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewLanguage}>{myConst.ADD_NEW_LANGUAGE_TITLE}</button><br /><br />\n            </div>  \n              <div className=\"langaugeList\">\n\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.LANGUAGE_NAME}</th>\n                                <th>{myConst.IS_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.langaugeList.map(language =>\n\n                                    <tr key={language.languageId} onClick={() => this.editLanguage(language)}>\n                                        <td>{language.languageName}</td>\n                                        <td>{language.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport LanguageService from '../../api/LanguageService.js'\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\n\nexport default class EditLanguageComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = { language: '' }\n\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n    componentDidMount() {\n       AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            language: this.props.location.state.language\n        });\n        console.log(this.state);\n        $(\"#updateLanguageForm\").validate({\n            ignore: [],\n            rules: {\n                'language.languageName': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 100\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    updateFieldData(event) {\n\n        let { language } = this.state\n\n        if (event.target.name === \"language.languageName\") {\n            console.log(\"inside if\")\n            language.languageName = event.target.value\n        } else if (event.target.name === \"language.active\") {\n            language.active = event.target.id === \"language.active2\" ? false : true\n        }\n\n        this.setState(\n            {\n                language\n            }\n        );\n    }\n\n    updateForm() {\n        if (navigator.onLine) {\n            if ($(\"#updateLanguageForm\").valid()) {\n\n                LanguageService.editLanguage(this.state.language).then(response => {\n                    this.props.history.push(`/languageList/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n\n            }\n        } else { alert(\"To perform this action you must be online.\"); }\n    }\n\n    render() {\n\n        return (\n            <>\n                <h3>{myConst.UPDATE_LANGUAGE}</h3>\n                <form name=\"updatyeLanguageForm\" id=\"updateLanguageForm\">\n                    <div>\n                        <label>{myConst.LANGUAGE_NAME}:-</label>\n                        <input type=\"text\" name=\"language.languageName\" value={this.state.language.languageName} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <div>\n                            {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"language.active1\" name=\"language.active\" value={true} checked={this.state.language.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"language.active2\" name=\"language.active\" value={false} checked={this.state.language.active === false} onChange={this.updateFieldData} /> Disabled\n        </div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n\n        );\n    }\n}","import axios from \"axios\";\nimport {API_URL} from '../Constants.js';\n\nclass DataSourceTypeService{\n\naddDataSourceType(json){\nreturn axios.put(`${API_URL}/api/addDataSourceType/`,json,{}\n);\n}\n\ngetDataSourceTypeList() {\n    return axios.get(`${API_URL}/api/getDataSourceTypeList/`, {\n    });\n}\n\ngetDataSourceTypeListActive() {\n    return axios.get(`${API_URL}/api/getDataSourceTypeListActive/`, {\n    });\n}\n\neditDataSourceType(json) {\n    return axios.put(`${API_URL}/api/editDataSourceType/`, json, {\n    });\n}\n}\nexport default new DataSourceTypeService();","import React,{Component} from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport DataSourceTypeService from '../../api/DataSourceTypeService.js'\n\nexport default class AddDataSourceTypeComponent extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            \n         }\n\n         this.updateFieldData=this.updateFieldData.bind(this);\n         this.submitForm=this.submitForm.bind(this);\n\n    }\n\n    componentDidMount(){\n        AuthenticationService.setupAxiosInterceptors();\n        $(\"#dataSourceTypeForm\").validate({\n            ignore: [],\n            rules: {\n                'engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'freLabel': {\n                   \n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'spaLabel': {\n                    \n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'porLabel': {\n                    \n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n\n    }\n\n    updateFieldData(event){\n       //console.log(event.target.name); \n        this.setState(\n           {\n                [event.target.name]: event.target.value      \n            }\n        )\n\n    }\n\n    submitForm(){\n        if (navigator.onLine) {\n            if ($(\"#dataSourceTypeForm\").valid()) {\n                console.log(this.state);\n                DataSourceTypeService.addDataSourceType(this.state).then(response => {\n                    this.props.history.push(`/dataSourceTypeList/${response.data.message}`)\n                    console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n               \n\n\n            }\n        }else{\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\nrender(){\n        return(\n         <>\n        <h3>{myConst.ADD_DATASOURCE_TYPE}</h3>\n                <form name=\"dataSourceTypeForm\" id=\"dataSourceTypeForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"engLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"freLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"spaLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"porLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n        </>);\n    }\n}","import React, { Component } from 'react';\nimport DataSourceTypeService from '../../api/DataSourceTypeService'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\n\nexport default class DataSourceListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSourceList: []\n\n        }\n\n        this.editDataSourceType = this.editDataSourceType.bind(this);\n        this.addNewDataSourceType = this.addNewDataSourceType.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        DataSourceTypeService.getDataSourceTypeList().then(response => {\n            //console.log(response.data)\n            this.setState({\n                dataSourceList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    editDataSourceType(dataSourceType) {\n        this.props.history.push({\n            pathname: \"/editDataSourceType\",\n            state: { dataSourceType: dataSourceType }\n        });\n\n    }\n\n    addNewDataSourceType() {\n\n        if (navigator.onLine) {\n            this.props.history.push(`/addDataSourceType`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n\n    }\n    render() {\n        return (\n            <>\n\n                <p>{this.props.match.params.message}</p>\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewDataSourceType}>{myConst.ADD_NEW_DATA_SOURCE_TYPE}</button><br /><br />\n                </div>\n\n                <div className=\"dataSourceTypeList\">\n\n                    <h1>{myConst.DATA_SOURCE_TYPE_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_EN}</th>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_FR}</th>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_SP}</th>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_PO}</th>\n                                <th>{myConst.DATA_SOURCE_TYPE_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.dataSourceList.map(dataSourceType =>\n\n                                    <tr key={dataSourceType.dataSourceTypeId} onClick={() => this.editDataSourceType(dataSourceType)}>\n                                        <td>{dataSourceType.label.engLabel}</td>\n                                        <td>{dataSourceType.label.freLabel}</td>\n                                        <td>{dataSourceType.label.spaLabel}</td>\n                                        <td>{dataSourceType.label.porLabel}</td>\n                                        <td>{dataSourceType.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport DataSourceTypeService from '../../api/DataSourceTypeService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class UpdateDataSourceTypeComponent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSourceType:\n            {\n                active: '',\n                \n                label: {\n                    engLabel: '',\n                    spaLabel: '',\n                    freLabel: '',\n                    porLabel: '',\n                    labelId: '',\n                }\n            }\n        }\n\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        console.log(this.props.location.state.dataSourceType);\n        this.setState({\n            dataSourceType: this.props.location.state.dataSourceType\n        });\n\n\n        $(\"#updatyeDataSourceTypeForm\").validate({\n            ignore: [],\n            rules: {\n                'dataSourceType.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n\n    updateFieldData(event) {\n        let { dataSourceType } = this.state\n\n        if (event.target.name === \"dataSourceType.label.engLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.engLabel = event.target.value\n        } if (event.target.name === \"dataSourceType.label.freLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.freLabel = event.target.value\n        } if (event.target.name === \"dataSourceType.label.spaLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.spaLabel = event.target.value\n        } if (event.target.name === \"dataSourceType.label.porLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.porLabel = event.target.value\n        } else if (event.target.name === \"dataSourceType.active\") {\n            dataSourceType.active = event.target.id === \"dataSourceType.active2\" ? false : true\n        }\n\n\n        this.setState(\n            {\n                dataSourceType\n            }\n        )\n    }\n\n    updateForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#updatyeDataSourceTypeForm\").valid()) {\n\n                DataSourceTypeService.editDataSourceType(this.state.dataSourceType).then(response => {\n                    //this.props.history.push(`/languageList/${response.data.message}`)\n                    this.props.history.push(`/dataSourceTypeList/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n\n            }\n        }else{\n\n            alert(\"To perform this action you must be online.\");\n        }\n\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <h3>{myConst.UPDATE_DATA_SOURCE_TYPE}</h3>\n                <form name=\"updatyeDataSourceTypeForm\" id=\"updatyeDataSourceTypeForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.engLabel\" value={this.state.dataSourceType.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.freLabel\" value={this.state.dataSourceType.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.spaLabel\" value={this.state.dataSourceType.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.porLabel\" value={this.state.dataSourceType.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"dataSourceType.active1\" name=\"dataSourceType.active\" value={true} checked={this.state.dataSourceType.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"dataSourceType.active2\" name=\"dataSourceType.active\" value={false} checked={this.state.dataSourceType.active === false} onChange={this.updateFieldData} /> Disabled\n                     </div>\n                    {/* <input type=\"hidden\" name=\"dataSourceType.labelId\" value={this.state.dataSourceType.labelId} /> */}\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n\n\n\n            </>\n        );\n    }\n\n\n}\n\n","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass DataSourceService {\n\n    addDataSource(json) {\n        return axios.put(`${API_URL}/api/addDataSource/`, json, {}\n        );\n    }\n\n    getDataSourceList() {\n        return axios.get(`${API_URL}/api/getDataSourceList/`, {\n        });\n    }\n\n    editDataSource(json) {\n        return axios.put(`${API_URL}/api/editDataSource/`,json,{}\n            );\n        }\n    \n}\nexport default new DataSourceService();","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport DataSourceService from '../../api/DataSourceService';\nimport DataSourceTypeService from '../../api/DataSourceTypeService';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class AddDataSource extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: {\n                engLabel: '',\n                freLabel: '',\n                spaLabel: '',\n                porLabel: ''\n            },\n            dataSourceType: {\n                dataSourceTypeId: ''\n            },\n            dataSourceTypeList: []\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        DataSourceTypeService.getDataSourceTypeListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                dataSourceTypeList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n        $(\"#dataSourceForm\").validate({\n            ignore: [],\n            rules: {\n                'label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.dataSourceTypeId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    updateFieldData(event) {\n        if (event.target.name === \"label.engLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"label.freLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.freLabel = event.target.value\n        } if (event.target.name === \"label.spaLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.spaLabel = event.target.value\n        } if (event.target.name === \"label.porLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.porLabel = event.target.value\n        }\n        else if (event.target.name === \"dataSourceType.dataSourceTypeId\") {\n            this.state.dataSourceType.dataSourceTypeId = event.target.value\n        }\n\n        let { dataSource } = this.state\n        this.setState(\n            {\n                dataSource\n            }\n        )\n\n\n    }\n\n    submitForm() {\n\n        if (navigator.onLine) {\n            if ($(\"#dataSourceForm\").valid()) {\n                console.log(this.state);\n                //delete this.state[\"dataSourceTypeList\"];\n                DataSourceService.addDataSource(this.state).then(response => {\n                    this.props.history.push(`/dataSourceList/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n               \n\n            }\n        } else {\n            alert(\"To perform this action you must be online.\");\n\n        }\n\n    }\n\n\n    render() {\n        const { dataSourceTypeList } = this.state;\n        let dataSourceTypes = dataSourceTypeList.length > 0\n            && dataSourceTypeList.map((item, i) => {\n                return (\n                    <option key={i} value={item.dataSourceTypeId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <>\n\n                <h3>{myConst.ADD_DATASOURCE}</h3>\n                <form name=\"dataSourceForm\" id=\"dataSourceForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n\n                    <div>\n                        {myConst.SELECT_DATA_SOURCE_TYPE} : <select id=\"dataSourceTypeId\" name=\"dataSourceType.dataSourceTypeId\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {dataSourceTypes}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n        );\n\n    }\n\n}","import React,{Compoent, Component} from 'react';\nimport DataSourceService from '../../api/DataSourceService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\n\n\nexport default class DataSourceListComponent extends Component{\n\nconstructor(props){\nsuper(props);\nthis.state={\ndataSourceList:[]\n\n}\nthis.editDataSource=this.editDataSource.bind(this);\nthis.addNewDataSource=this.addNewDataSource.bind(this);\n}\n\ncomponentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    DataSourceService.getDataSourceList().then(response => {        \n        this.setState({\n            dataSourceList: response.data\n        })\n    })\n        .catch(\n            error => {\n                switch (error.message) {\n                    case \"Network Error\":\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                    default:\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                }\n            }\n        );\n}\n\neditDataSource(dataSource) {\n    this.props.history.push({\n        pathname: \"/editDataSource\",\n        state: { dataSource: dataSource }\n    });\n\n}\n\naddNewDataSource(){\n\n    if (navigator.onLine) {\n        this.props.history.push(`/addDataSource`)\n    } else {\n        alert(\"You must be Online.\")\n    }\n\n}\n\nrender() {\n    return (\n        <>\n\n            <p>{this.props.match.params.message}</p>\n            <div>\n                <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewDataSource}>{myConst.ADD_NEW_DATA_SOURCE}</button><br /><br />\n            </div>\n\n            <div className=\"dataSourceList\">\n\n                <h1>{myConst.DATA_SOURCE_LIST}</h1>\n                <table border=\"1\" align=\"center\">\n                    <thead>\n                        <tr>\n                            <th>{myConst.DATASOURCE_NAME_EN}</th>\n                            <th>{myConst.DATASOURCE_NAME_FR}</th>\n                            <th>{myConst.DATASOURCE_NAME_SP}</th>\n                            <th>{myConst.DATASOURCE_NAME_PO}</th>\n                            <th>{myConst.DATASOURCE_ACTIVE}</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.dataSourceList.map(dataSource =>\n\n                                <tr key={dataSource.dataSourceId} onClick={() => this.editDataSource(dataSource)}>\n                                    <td>{dataSource.label.engLabel}</td>\n                                    <td>{dataSource.label.freLabel}</td>\n                                    <td>{dataSource.label.spaLabel}</td>\n                                    <td>{dataSource.label.porLabel}</td>\n                                    <td>{dataSource.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                </tr>\n                            )\n\n                        }\n                    </tbody>\n                </table>\n            </div>\n\n        </>\n    );\n}\n\n}","import React, { Component } from 'react';\nimport DataSourceTypeService from '../../api/DataSourceTypeService';\nimport DataSourceService from '../../api/DataSourceService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class UpdateDataSourceComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            dataSource: {\n                active: '',\n                dataSourceId: '',\n                label: {\n                    engLabel: '',\n                    spaLabel: '',\n                    freLabel: '',\n                    porLabel: '',\n                    labelId: '',\n                },\n                dataSourceType: {\n                    dataSourceTypeId: ''\n                }\n            },\n            dataSourceTypeList: []\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            dataSource: this.props.location.state.dataSource\n        });\n\n        DataSourceTypeService.getDataSourceTypeListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                dataSourceTypeList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#updatyeDataSourceForm\").validate({\n            ignore: [],\n            rules: {\n                'dataSource.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.dataSourceType.dataSourceTypeId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n\n    updateFieldData(event) {\n\n        let { dataSource } = this.state\n\n        if (event.target.name === \"dataSource.label.engLabel\") {\n            // console.log(\"inside if\")\n            dataSource.label.engLabel = event.target.value\n        } if (event.target.name === \"dataSource.label.freLabel\") {\n            //onsole.log(\"inside if\")\n            dataSource.label.freLabel = event.target.value\n        } if (event.target.name === \"dataSource.label.spaLabel\") {\n            //console.log(\"inside if\")\n            dataSource.label.spaLabel = event.target.value\n        } if (event.target.name === \"dataSource.label.porLabel\") {\n            //console.log(\"inside if\")\n            dataSource.label.porLabel = event.target.value\n        } if (event.target.name === \"dataSource.dataSourceType.dataSourceTypeId\") {\n            this.state.dataSource.dataSourceType.dataSourceTypeId = event.target.value\n        } else if (event.target.name === \"dataSource.active\") {\n            dataSource.active = event.target.id = \"dataSource.active2\" ? false : true\n        }\n\n\n        this.setState(\n            {\n                dataSource\n            }\n        )\n\n\n    }\n    updateForm() {\n\n        if (navigator.onLine) {\n            if ($(\"#updatyeDataSourceForm\").valid()) {\n                //console.log(this.state);\n                DataSourceService.editDataSource(this.state.dataSource).then(response => {\n                    this.props.history.push(`/dataSourceList/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        const { dataSourceTypeList } = this.state;\n        let dataSourceTypes = dataSourceTypeList.length > 0\n            && dataSourceTypeList.map((item, i) => {\n                return (\n                    <option key={i} value={item.dataSourceTypeId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n\n            <>\n\n                <h3>{myConst.UPDATE_DATASOURCE}</h3>\n                <form name=\"updatyeDataSourceForm\" id=\"updatyeDataSourceForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.engLabel\" value={this.state.dataSource.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.freLabel\" value={this.state.dataSource.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.spaLabel\" value={this.state.dataSource.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.porLabel\" value={this.state.dataSource.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"dataSource.active1\" name=\"dataSource.active\" value={true} checked={this.state.dataSource.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"dataSource.active2\" name=\"dataSource.active\" value={false} checked={this.state.dataSource.active === false} onChange={this.updateFieldData} /> Disabled\n                     </div>\n                    <br /><br />\n                    <div>\n                        {myConst.SELECT_DATA_SOURCE_TYPE} : <select id=\"dataSourceTypeId\" name=\"dataSource.dataSourceType.dataSourceTypeId\" value={this.state.dataSource.dataSourceType ? this.state.dataSource.dataSourceType.dataSourceTypeId : ''} onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {dataSourceTypes}\n                        </select>\n                    </div>\n                    <br /><br />\n                    <input type=\"hidden\" name=\"dataSource.dataSourceId\" value={this.state.dataSource.dataSourceId} />\n                    <input type=\"hidden\" name=\"dataSource.label.labelId\" value={this.state.dataSource.label.labelId} />\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n\n        );\n\n\n    }\n\n}","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass CurrencyService {\n\n    addCurrency(json) {\n        return axios.put(`${API_URL}/api/addCurrency/`, json, {}\n        );\n    }\n\n    getCurrencyList() {\n        return axios.get(`${API_URL}/api/getCurrencyList/`, {\n        });\n    }\n    \n    getCurrencyListActive() {\n        return axios.get(`${API_URL}/api/getCurrencyListActive/`, {\n        });\n    }\n    editCurrency(json) {\n        return axios.put(`${API_URL}/api/editCurrency/`, json, {}\n        );\n    }\n}\nexport default new CurrencyService();","import React, { Component } from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nexport default class AddCurrencyComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currencyCode: '',\n            currencySymbol: '',\n            label: {\n                engLabel: '',\n                freLabel: '',\n                spaLabel: '',\n                porLabel: ''\n            },\n            conversionRateToUsd: ''\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        $(\"#currencyForm\").validate({\n            ignore: [],\n            rules: {\n                'label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.freLabel': {\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.spaLabel': {\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.porLabel': {\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'currencyCode': {\n                    required: true,\n                    maxlength: 4\n                },\n                'currencySymbol': {\n                    required: true,\n                    maxlength: 3\n                },\n                'conversionRateToUsd': {\n                    required: true,\n                    integer:true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    updateFieldData(event) {\n        // switch (event.target.name) {\n        //     case \"currencyCode\": this.state.currencyCode = event.target.value;\n        //     case \"currencySymbol\": this.state.currencySymbol = event.target.value;\n        //     case \"label.engLabel\": this.state.label.engLabel = event.target.value;\n        //     case \"label.freLabel\": this.state.label.freLabel = event.target.value;\n        //     case \"label.spaLabel\": this.state.label.spaLabel = event.target.value;\n        //     case \"label.porLabel\": this.state.label.porLabel = event.target.value;\n        //     case \"conversionRateToUsd\": this.state.conversionRateToUsd = event.target.value;\n        //     default: break;\n        // }\n        if(event.target.name === \"currencyCode\"){\n            this.state.currencyCode = event.target.value;\n        }if(event.target.name === \"currencySymbol\"){\n            this.state.currencySymbol = event.target.value;\n        }if(event.target.name === \"label.engLabel\"){\n            this.state.label.engLabel = event.target.value;\n        }if(event.target.name === \"label.freLabel\"){\n            this.state.label.freLabel = event.target.value;\n        }if(event.target.name === \"label.spaLabel\"){\n            this.state.label.spaLabel = event.target.value;\n        }if(event.target.name === \"label.porLabel\"){\n            this.state.label.porLabel = event.target.value;\n        }else if(event.target.name === \"conversionRateToUsd\"){\n            this.state.conversionRateToUsd = event.target.value;\n        }\n        let { currency } = this.state\n        this.setState(\n            {\n                currency\n            }\n        )\n\n    }\n    submitForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#currencyForm\").valid()) {\n                CurrencyService.addCurrency(this.state).then(response => {\n                    this.props.history.push(`/currencyList/${response.data.message}`)\n                    console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        } else {\n\n            alert(\"To perform this action you must be online.\");\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <h3>{myConst.ADD_CURRENCY}</h3>\n                <form name=\"currencyForm\" id=\"currencyForm\">\n                    <div>\n                        <label>{myConst.CURRENCY_CODE}:-</label>\n                        <input type=\"text\" name=\"currencyCode\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_SYMBOL}:-</label>\n                        <input type=\"text\" name=\"currencySymbol\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CONVERSIONRATE_TO_USD}:-</label>\n                        <input type=\"text\" name=\"conversionRateToUsd\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n\n            </>\n        );\n    }\n}","import React, { Compoent, Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport * as myConst from '../../Labels.js';\n\n\nexport default class CurrencyListComponent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currencyList: []\n        }\n        this.editCurrency = this.editCurrency.bind(this);\n        this.addNewCurrency=this.addNewCurrency.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        CurrencyService.getCurrencyList().then(response => {\n            this.setState({\n                currencyList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n    }\n\n    editCurrency(currency) {\n        this.props.history.push({\n            pathname: \"/editCurrency\",\n            state: { currency: currency }\n        });\n\n    }\n\n    addNewCurrency(){\n\n        if (navigator.onLine) {\n            this.props.history.push(`/addCurrency`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    render() {\n\n        return (\n            <>\n                 <p>{this.props.match.params.message}</p>\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewCurrency}>{myConst.ADD_NEW_CURRENCY}</button><br /><br />\n                </div>\n\n                <div className=\"currencyList\">\n\n                    <h1>{myConst.CURRENCY_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.CURRENCY_CODE}</th>\n                                <th>{myConst.CURRENCY_SYMBOL}</th>\n                                <th>{myConst.CURRENCY_NAME_EN}</th>\n                                <th>{myConst.CURRENCY_NAME_FR}</th>\n                                <th>{myConst.CURRENCY_NAME_SP}</th>\n                                <th>{myConst.CURRENCY_NAME_PO}</th>\n                                <th>{myConst.CONVERSIONRATE_TO_USD}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.currencyList.map(currency =>\n                                    <tr key={currency.currencyId} onClick={() => this.editCurrency(currency)}>\n                                        <td>{currency.currencyCode}</td>\n                                        <td>{currency.currencySymbol}</td>\n                                        <td>{currency.label.engLabel}</td>\n                                        <td>{currency.label.freLabel}</td>\n                                        <td>{currency.label.spaLabel}</td>\n                                        <td>{currency.label.porLabel}</td>\n                                        <td>{currency.conversionRateToUsd}</td>\n\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </>\n        );\n    }\n\n\n}","import React,{Component} from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport CurrencyService from '../../api/CurrencyService.js';\n\nexport default class UpdateCurrencyComponent extends Component{\n\nconstructor(props){\n    super(props);\n    this.state = {\n        currency: {\n        currencyCode:'',\n        currencySymbol:'',\n        label: {\n            engLabel: '',\n            freLabel: '',\n            spaLabel: '',\n            porLabel: ''\n        },\n        conversionRateToUsd: ''\n    }\n    }\n    this.updateFieldData=this.updateFieldData.bind(this);\n    this.updateForm=this.updateForm.bind(this);\n}\n\ncomponentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    this.setState({\n        currency:this.props.location.state.currency\n    });\n    $(\"#updateCurrencyForm\").validate({\n        ignore: [],\n        rules: {\n            'currency.label.engLabel': {\n                required: true,\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.label.freLabel': {\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.label.spaLabel': {\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.label.porLabel': {\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.currencyCode': {\n                required: true,\n                maxlength: 4\n            },\n            'currency.currencySymbol': {\n                required: true,\n                maxlength: 3\n            },\n            'currency.conversionRateToUsd': {\n                required: true,\n                integer:true\n            }\n        },\n        errorPlacement: function (error, element) {\n            error.insertAfter(element);\n        }\n    });\n}\n\nupdateFieldData(event) {\n    let { currency } = this.state\n\n    if (event.target.name === \"currency.currencyCode\") {\n        this.state.currency.currencyCode = event.target.value\n    }\n    if (event.target.name === \"currency.currencySymbol\") {\n        this.state.currency.currencySymbol = event.target.value;\n    }\n    if (event.target.name === \"currency.label.engLabel\") {\n        this.state.currency.label.engLabel = event.target.value\n    }\n    if (event.target.name === \"currency.label.freLabel\") {\n        this.state.currency.label.freLabel = event.target.value\n    }\n    if (event.target.name === \"currency.label.spaLabel\") {\n        this.state.currency.label.spaLabel = event.target.value\n    }\n    if (event.target.name === \"currency.label.porLabel\") {\n        this.state.currency.label.porLabel = event.target.value\n    }\n    else if (event.target.name === \"currency.conversionRateToUsd\") {\n        this.state.currency.conversionRateToUsd = event.target.value\n    }\n    // switch (event.target.name) {\n    //     case \"currency.currencyCode\": this.state.currency.currencyCode = event.target.value;\n    //     case \"currency.currencySymbol\": this.state.currency.currencySymbol = event.target.value;\n    //     case \"currency.label.engLabel\": this.state.currency.label.engLabel = event.target.value;\n    //     case \"currency.label.freLabel\": this.state.currency.label.freLabel = event.target.value;\n    //     case \"currency.label.spaLabel\": this.state.currency.label.spaLabel = event.target.value;\n    //     case \"currency.label.porLabel\": this.state.currency.label.porLabel = event.target.value;\n    //     case \"currency.conversionRateToUsd\": this.state.currency.conversionRateToUsd = event.target.value;\n    //     default: break;\n    // }\n    this.setState(\n        {\n            currency\n        }\n    )\n\n}\n\nupdateForm(){\n\n    if(navigator.onLine){\n\n        if ($(\"#updateCurrencyForm\").valid()) {\n\n            CurrencyService.editCurrency(this.state.currency).then(response => {\n                this.props.history.push(`/currencyList/${response.data.message}`)\n                console.log(\"success\");\n            }\n            )\n                .catch(\n                    error => {\n                        switch (error.message) {\n                            case \"Network Error\":\n                                this.setState({\n                                    message: error.message\n                                })\n                                break\n                            default:\n                                this.setState({\n                                    message: error.message\n                                })\n                                break\n                        }\n                    }\n                )\n        }\n\n\n        }\n\n    else{\n        alert(\"To perform this action you must be online.\");     \n    }\n\n}\n   \nrender(){\n\nreturn( \n    <>\n     <h3>{myConst.UPDATE_CURRENCY}</h3>\n                <form name=\"updateCurrencyForm\" id=\"updateCurrencyForm\">\n                <div>\n                        <label>{myConst.CURRENCY_CODE}:-</label>\n                        <input type=\"text\" name=\"currency.currencyCode\" value={this.state.currency.currencyCode} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_SYMBOL}:-</label>\n                        <input type=\"text\" name=\"currency.currencySymbol\" value={this.state.currency.currencySymbol} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"currency.label.engLabel\" value={this.state.currency.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"currency.label.freLabel\" value={this.state.currency.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"currency.label.spaLabel\" value={this.state.currency.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"currency.label.porLabel\" value={this.state.currency.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CONVERSIONRATE_TO_USD}:-</label>\n                        <input type=\"text\" name=\"currency.conversionRateToUsd\" value={this.state.currency.conversionRateToUsd} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n    </>\n);\n\n}\n\n\n}","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass CountryService {\n\n    addCountry(json) {\n        return axios.put(`${API_URL}/api/addCountry/`, json, {}\n        );\n    }\n\n    getCountryListAll(){\n        return axios.get(`${API_URL}/api/getCountryListAll/`, {\n        });\n    }\n    getCountryListActive(){\n        return axios.get(`${API_URL}/api/getCountryListActive/`, {\n        });\n    }\n\n    editCountry(json) {\n        return axios.put(`${API_URL}/api/editCountry/`,json,{}\n            );\n        }\n    \n}\nexport default new CountryService();","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport LanguageService from '../../api/LanguageService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport CountryService from '../../api/CountryService.js'\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class AddCountryComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: {\n\n            },\n            currency: {\n                currencyId: ''\n            },\n            language: {\n                languageId: ''\n            },\n            languageList: [],\n            currencyList: [],\n\n        }\n\n        this.submitForm = this.submitForm.bind(this);\n        this.updateFieldData = this.updateFieldData.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        LanguageService.getLanguageListActive().then(response => {\n            this.setState({\n                languageList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n        CurrencyService.getCurrencyListActive().then(response => {\n            this.setState({\n                currencyList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n\n        $(\"#countryForm\").validate({\n            ignore: [],\n            rules: {\n                'label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'currency.currencyId': {\n                    required: true\n                },\n                'language.languageId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    updateFieldData(event) {\n        if (event.target.name === \"label.engLabel\") {\n            this.state.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"label.freLabel\") {\n            this.state.label.freLabel = event.target.value\n        } if (event.target.name === \"label.spaLabel\") {\n            this.state.label.spaLabel = event.target.value\n        } if (event.target.name === \"label.porLabel\") {\n            this.state.label.porLabel = event.target.value\n        }\n        if (event.target.name === \"currency.currencyId\") {\n            this.state.currency.currencyId = event.target.value\n        } else if (event.target.name === \"language.languageId\") {\n            this.state.language.languageId = event.target.value\n        }\n        let { currency } = this.state\n        this.setState(\n            {\n                currency\n            }\n        )\n    }\n    submitForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#countryForm\").valid()) {\n                CountryService.addCountry(this.state).then(response => {\n                    this.props.history.push(`/countryList/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        } else {\n\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        const { languageList } = this.state;\n        let languageItems = languageList.length > 0\n            && languageList.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>{item.languageName}</option>\n                )\n            }, this);\n\n        const { currencyList } = this.state;\n        let currencyItems = currencyList.length > 0\n            && currencyList.map((itemOne, i) => {\n                return (\n                    <option key={i} value={itemOne.currencyId}>{itemOne.label.engLabel}</option>\n                )\n            }, this);\n        return (\n\n            <>\n                <h3>{myConst.ADD_COUNTRY}</h3>\n                <form name=\"countryForm\" id=\"countryForm\">\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n\n                    <div>\n                        {myConst.SELECT_LANGUAGE} : <select id=\"langaugeId\" name=\"language.languageId\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {languageItems}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        {myConst.SELECT_CURRENCY} : <select id=\"currencyId\" name=\"currency.currencyId\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {currencyItems}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n\n            </>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CountryService from '../../api/CountryService.js';\nimport * as myConst from '../../Labels.js';\n\nexport default class CountryListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            countryList: []\n        }\n        this.addNewCountry = this.addNewCountry.bind(this);\n        this.editCountry = this.editCountry.bind(this);\n    }\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        CountryService.getCountryListAll().then(response => {\n            this.setState({\n                countryList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    addNewCountry() {\n        if (navigator.onLine) {\n            this.props.history.push(`/addCountry`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    editCountry(country) {\n        console.log(country);\n        this.props.history.push({\n            pathname: \"/editCountry\",\n            state: { country: country }\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            <>\n                <p>{this.props.match.params.message}</p>\n\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewCountry}>{myConst.ADD_NEW_COUNTRY}</button><br /><br />\n                </div>\n\n                <div className=\"countryList\">\n\n                    <h1>{myConst.COUNTRY_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.COUNTRY_NAME_EN}</th>\n                                <th>{myConst.COUNTRY_NAME_FR}</th>\n                                <th>{myConst.COUNTRY_NAME_SP}</th>\n                                <th>{myConst.COUNTRY_NAME_PO}</th>\n                                <th>{myConst.COUNTRY_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.countryList.map(country =>\n\n                                    <tr key={country.countryId} onClick={() => this.editCountry(country)}>\n                                        <td>{country.label.engLabel}</td>\n                                        <td>{country.label.freLabel}</td>\n                                        <td>{country.label.spaLabel}</td>\n                                        <td>{country.label.porLabel}</td>\n                                        <td>\n                                        {country.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}\n                                        </td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n\n\n\n            </>);\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CountryService from '../../api/CountryService.js';\nimport LanguageService from '../../api/LanguageService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class UpdateCountryComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            country: {\n                countryId:'',\n                label: {\n                    engLabel: '',\n                    spaLabel: '',\n                    freLabel: '',\n                    porLabel: '', \n                    labelId:''\n                },\n                currency: {\n                    curencyId: ''\n                },\n                language: {\n                    languageId: ''\n                },\n                active: ''\n\n            },\n            languageList:[],\n            currencyList:[]\n        }\n\n        this.updateFieldData=this.updateFieldData.bind(this);\n        this.updateForm=this.updateForm.bind(this);\n\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            country: this.props.location.state.country\n        });\n\n        LanguageService.getLanguageListActive().then(response => {\n            this.setState({\n                languageList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n        CurrencyService.getCurrencyListActive().then(response => {\n            this.setState({\n                currencyList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n                $(\"#updateCountryForm\").validate({\n                    ignore: [],\n                    rules: {\n                        'country.label.engLabel': {\n                            required: true,\n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.label.freLabel': {\n        \n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.label.spaLabel': {\n        \n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.label.porLabel': {\n        \n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.currency.currencyId': {\n                            required: true\n                        }, \n                        'country.language.languageId': {\n                            required: true\n                        }\n                    },\n                    errorPlacement: function (error, element) {\n                        error.insertAfter(element);\n                    }\n                });\n\n    }\n    updateFieldData(event){\n        let { country } = this.state\n        if (event.target.name === \"country.label.engLabel\") {\n           this.state.country.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"country.label.freLabel\") {\n            this.state.country.label.freLabel = event.target.value\n        } if (event.target.name === \"country.label.spaLabel\") {\n            this.state.country.label.spaLabel = event.target.value\n        } if (event.target.name === \"country.label.porLabel\") {\n            this.state.country.label.porLabel = event.target.value\n        }\n        if (event.target.name === \"country.currency.currencyId\") {\n            this.state.country.currency.currencyId = event.target.value\n        }if (event.target.name === \"country.language.languageId\") {\n            this.state.country.language.languageId = event.target.value\n        }else if(event.target.name === \"country.active\") {\n            this.state.country.active = event.target.id = \"country.active2\" ? false : true\n        }\n        \n        this.setState(\n            {\n                country\n            }\n        )\n\n\n    }\n\n    updateForm(){\n        if(navigator.onLine){\n\n            if($(\"#updateCountryForm\").valid()){\n        CountryService.editCountry(this.state.country).then(response => {\n            this.props.history.push(`/countryList/${response.data.message}`)\n            //console.log(\"success\");\n        }\n        )\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            )\n        }\n        }else{\n\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        const { languageList } = this.state;\n        let languageItems = languageList.length > 0\n            && languageList.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>{item.languageName}</option>\n                )\n            }, this);\n\n        const { currencyList } = this.state;\n        let currencyItems = currencyList.length > 0\n            && currencyList.map((itemOne, i) => {\n                return (\n                    <option key={i} value={itemOne.currencyId}>{itemOne.label.engLabel}</option>\n                )\n            }, this);\n\n        return (\n            <>\n\n                <h3>{myConst.UPDATE_COUNTRY}</h3>\n                <form name=\"updateCountryForm\" id=\"updateCountryForm\">\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"country.label.engLabel\" value={this.state.country.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"country.label.freLabel\" value={this.state.country.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"country.label.spaLabel\" value={this.state.country.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"country.label.porLabel\" value={this.state.country.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n        <input type=\"radio\" id=\"country.active1\" name=\"country.active\" value={true} checked={this.state.country.active === true} onChange={this.updateFieldData} /> Active\n        <input type=\"radio\" id=\"country.active2\" name=\"country.active\" value={false} checked={this.state.country.active === false} onChange={this.updateFieldData} /> Disabled\n         </div>\n                    <br /><br />\n                    <div>\n                        {myConst.SELECT_LANGUAGE} : <select id=\"langaugeId\" name=\"country.language.languageId\" value={this.state.country.language ? this.state.country.language.languageId : ''} onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {languageItems}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        {myConst.SELECT_CURRENCY} : <select id=\"currencyId\" name=\"country.currency.currencyId\" value={this.state.country.currency ? this.state.country.currency.currencyId : ''} onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {currencyItems}\n                        </select>\n                    </div>\n                    <br /><br />\n                    {/* <input type=\"hidden\" name=\"dataSource.dataSourceId\" value={this.state.dataSource.dataSourceId} /> */}\n                    {/* <input type=\"hidden\" name=\"dataSource.label.labelId\" value={this.state.dataSource.label.labelId} /> */}\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n\n            </>\n\n        );\n\n\n\n    }\n\n\n}","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass ShipmentStatusService{\n\n    addShipmentStatus(json) {\n        return axios.put(`${API_URL}/api/addShipmentStatus/`, json, {}\n        );\n    }\n\n    getShipmentStatusListAll(){\n        return axios.get(`${API_URL}/api/getShipmentStatusListAll/`, {\n        });\n    }\n    getShipmentStatusListActive(){\n        return axios.get(`${API_URL}/api/getShipmentStatusListActive/`, {\n        });\n    }\n    editShipmentStatus(json) {\n        return axios.put(`${API_URL}/api/editShipmentStatus/`, json, {\n        });\n    }\n\n}\nexport default new ShipmentStatusService();","import React, { Component } from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport ShipmentStatusService from '../../api/ShipmentStatusService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class AddShipmentStatusComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipmentStatus: {\n                label: {\n                    engLabel: '',\n                    freLabel: '',\n                    spaLabel: '',\n                    porLabel: ''\n                },\n                nextShipmentStatusAllowed: []\n            },\n            shipmentStatusList: []\n        }\n\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ShipmentStatusService.getShipmentStatusListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                shipmentStatusList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n        $(\"#shipmentStatusForm\").validate({\n            ignore: [],\n            rules: {\n                'shipmentStatus.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n    updateFieldData(event) {\n        if (event.target.name === \"shipmentStatus.label.engLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"shipmentStatus.label.freLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.freLabel = event.target.value\n        } if (event.target.name === \"shipmentStatus.label.spaLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.spaLabel = event.target.value\n        }if (event.target.name === \"shipmentStatus.label.porLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.porLabel = event.target.value\n        }else if (event.target.name === \"shipmentStatus.nextShipmentStatusAllowed\") {\n            this.state.shipmentStatus.nextShipmentStatusAllowed = Array.from(event.target.selectedOptions, (item) => item.value)\n        }\n\n\n        let { shipmentStatus } = this.state\n        this.setState(\n            {\n                shipmentStatus\n            }\n        )\n    }\n\n    submitForm() {\n        if (navigator.onLine) {\n            if ($(\"#shipmentStatusForm\").valid()) {\n                console.log(this.state);\n                ShipmentStatusService.addShipmentStatus(this.state.shipmentStatus).then(response => {\n                    this.props.history.push(`/shipmentStatusListAll/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n\n            }\n\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n\n    }\n\n    render() {\n\n        const { shipmentStatusList } = this.state;\n        let shipmentStatusItems = shipmentStatusList.length > 0\n            && shipmentStatusList.map((item, i) => {\n                return (\n                    <option key={i} value={item.shipmentStatusId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <>\n                <h3>{myConst.ADD_SHIPMENT_STATUS}</h3>\n                <form name=\"shipmentStatusForm\" id=\"shipmentStatusForm\">\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                 \n                    <div>\n                       \n                        <label>  {myConst.SELECT_NEXT_SHIPMENT_STATUS} :- </label><select id=\"shipmentStatusId\" name=\"shipmentStatus.nextShipmentStatusAllowed\" multiple=\"true\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {shipmentStatusItems}\n                        </select>\n                        \n                    </div>\n                    \n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n        );\n\n    }\n\n}","\nimport React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport ShipmentStatusService from '../../api/ShipmentStatusService.js';\nimport * as myConst from '../../Labels.js';\nexport default class ShipmentStatusListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipmentStatusList: []\n        }\n        this.editShipmentStatus=this.editShipmentStatus.bind(this);\n        this.addNewShipmentStatus=this.addNewShipmentStatus.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ShipmentStatusService.getShipmentStatusListAll().then(response => {\n            //console.log(response.data)\n            this.setState({\n                shipmentStatusList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    addNewShipmentStatus(){\n        if (navigator.onLine) {\n            this.props.history.push(`/addShipmentStatus`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n\n    editShipmentStatus(shipmentStatus){\n        this.props.history.push({\n            pathname: \"/editShipmentStatus\",\n            state: { shipmentStatus: shipmentStatus }\n        });\n\n    }\n\n    render() {\n        return (\n            <>\n                 <p>{this.props.match.params.message}</p>\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewShipmentStatus}>{myConst.ADD_NEW_SHIPMENT_STATUS}</button><br /><br />\n                </div>\n\n                <div className=\"shipmentStatusList\">\n\n                    <h1>{myConst.SHIPMENT_STATUS_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_EN}</th>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_FR}</th>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_SP}</th>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_PO}</th>\n                                <th>{myConst.DATA_SOURCE_TYPE_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.shipmentStatusList.map(shipmentStatus =>\n\n                                    <tr key={shipmentStatus.shipmentStatusId} onClick={() => this.editShipmentStatus(shipmentStatus)}>\n                                        <td>{shipmentStatus.label.engLabel}</td>\n                                        <td>{shipmentStatus.label.freLabel}</td>\n                                        <td>{shipmentStatus.label.spaLabel}</td>\n                                        <td>{shipmentStatus.label.porLabel}</td>\n                                        <td>{shipmentStatus.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n\n            </>\n\n        );\n\n\n    }\n\n}","import React, { Component } from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport ShipmentStatusService from '../../api/ShipmentStatusService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nexport default class UpdateShipmentStatusComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipmentStatus: {\n                //nextShipmentStatusAllowed: [],\n                shipmentStatusId: '',\n                label: {\n                    engLabel: '',\n                    freLabel: '',\n                    spaLabel: '',\n                    porLabel: ''\n                },\n                active: ''\n \n            },\n            shipmentStatusList: []\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        //console.log(this.props.location.state.shipmentStatus);\n        //AuthenticationService.setupAxiosInterceptors();\n        ShipmentStatusService.getShipmentStatusListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                shipmentStatusList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n        this.setState({\n            shipmentStatus: this.props.location.state.shipmentStatus\n        });\n        $(\"#updateShipmentStatusForm\").validate({\n            ignore: [],\n            rules: {\n                'shipmentStatus.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n    updateForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#updateShipmentStatusForm\").valid()) {\n                //console.log(this.state.shipmentStatus);\n                ShipmentStatusService.editShipmentStatus(this.state.shipmentStatus).then(response => {\n                    //this.props.history.push(`/languageList/${response.data.message}`)\n                    this.props.history.push(`/shipmentStatusListAll/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        }\n\n    }\n    updateFieldData(event) {\n        let { shipmentStatus } = this.state\n        if (event.target.name === \"shipmentStatus.label.engLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"shipmentStatus.label.freLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.freLabel = event.target.value\n        } if (event.target.name === \"shipmentStatus.label.spaLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.spaLabel = event.target.value\n        } if (event.target.name === \"shipmentStatus.label.porLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.porLabel = event.target.value\n        }if (event.target.name === \"shipmentStatus.nextShipmentStatusAllowed\") {\n            this.state.shipmentStatus.nextShipmentStatusAllowed = Array.from(event.target.selectedOptions, (item) => item.value)\n        } else if (event.target.name === \"shipmentStatus.active\") {\n            this.state.shipmentStatus.active = event.target.id === \"shipmentStatus.active2\" ? false : true\n        }\n        this.setState(\n            {\n                shipmentStatus\n            }\n        )\n    }\n\n    render() {\n        const { shipmentStatusList } = this.state;\n        let shipmentStatusItems = shipmentStatusList.length > 0\n            && shipmentStatusList.map((item, i) => {\n                return (\n                    <option key={i} value={item.shipmentStatusId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <>\n                <h3>{myConst.UPDATE_SHIPMENT_STATUS}</h3>\n                <form name=\"updateShipmentStatusForm\" id=\"updateShipmentStatusForm\">\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.engLabel\" value={this.state.shipmentStatus.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.freLabel\" value={this.state.shipmentStatus.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.spaLabel\" value={this.state.shipmentStatus.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.porLabel\" value={this.state.shipmentStatus.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"shipmentStatus.active1\" name=\"shipmentStatus.active\" value={true} checked={this.state.shipmentStatus.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"shipmentStatus.active2\" name=\"shipmentStatus.active\" value={false} checked={this.state.shipmentStatus.active === false} onChange={this.updateFieldData} /> Disabled\n                     </div>\n                    <br/><br />\n                        <div>\n                            <label>  {myConst.SELECT_NEXT_SHIPMENT_STATUS} :- </label><select id=\"shipmentStatusId\" name=\"shipmentStatus.nextShipmentStatusAllowed\" multiple=\"true\" value={this.state.shipmentStatus.nextShipmentStatusAllowed} onChange={this.updateFieldData}>\n                                <option value=\"\">-Nothing Selected-</option>\n                                {shipmentStatusItems}\n                            </select>\n                        </div>\n                        <br/><br/>\n                        {/* <input type=\"hidden\" name=\"dataSourceType.labelId\" value={this.state.dataSourceType.labelId} /> */}\n                        <div>\n                            <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                        </div>\n                </form>\n\n\n\n            </>\n                );\n            }\n        \n}","import axios from \"axios\"\nimport { API_URL } from '../Constants.js'\n\nclass ProgramService {\n    getProgramData(programId) {\n        console.log(programId)\n        return axios.get(`${API_URL}/api/getProgramData?programId=${programId}`, {\n        });\n    }\n\n    getProgramList() {\n        return axios.get(`${API_URL}/api/getProgramList`, {\n        });\n    }\n}\nexport default new ProgramService()","import React, { Component } from 'react';\nimport { BTN_DOWNLOAD, DOWNLOAD_TITLE, DATA_DOWNLOAD_SUCCESS, PROGRAM } from '../../Labels.js';\nimport ProgramService from '../../api/ProgramService.js';\nimport CryptoJS from 'crypto-js';\nimport { SECRET_KEY } from '../../Constants.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport $ from 'jquery';\nimport 'jquery-validation';\n\nexport default class DownloadProgramDataComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programData: {},\n            programList: [],\n            message: \"\"\n        }\n        this.downloadClicked = this.downloadClicked.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ProgramService.getProgramList().then(response => {\n            console.log(response.data)\n            this.setState({\n                programList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#downloadForm\").validate({\n            ignore: [],\n            rules: {\n                'programId': {\n                    required: true\n                },\n            }\n        })\n    }\n\n    render() {\n        const { programList } = this.state;\n        let programItems = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.programId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <div>\n                <h4>{this.state.message}</h4>\n                <h4>{DOWNLOAD_TITLE}</h4><br></br>\n                <form name=\"downloadForm\" id=\"downloadForm\">\n                    {PROGRAM} : <select id=\"programId\" name=\"programId\" multiple={true}>\n                        {programItems}\n                    </select><br></br><br></br>\n                    <button type=\"button\" onClick={this.downloadClicked}>{BTN_DOWNLOAD}</button>\n                </form>\n            </div>\n        )\n    }\n\n    downloadClicked() {\n        if (navigator.onLine) {\n            if ($(\"#downloadForm\").valid()) {\n                var programArr = $(\"#programId\").val();\n                for (var j = 0; j < programArr.length; j++) {\n                    AuthenticationService.setupAxiosInterceptors();\n                    ProgramService.getProgramData(programArr[j])\n                        .then(response => {\n                            var json = response.data;\n                            var db1;\n                            var storeOS;\n                            var openRequest = indexedDB.open('fasp', 1);\n                            openRequest.onupgradeneeded = function (e) {\n                                var db1 = e.target.result;\n                                if (!db1.objectStoreNames.contains('programData')) {\n                                    storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n                                }\n                            };\n                            openRequest.onsuccess = function (e) {\n                                db1 = e.target.result;\n                                var transaction = db1.transaction(['programData'], 'readwrite');\n                                var program = transaction.objectStore('programData');\n                                for (var i = 0; i < json.length; i++) {\n                                    var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(json[i]), SECRET_KEY);\n                                    var item = {\n                                        id: json[i].programId,\n                                        programData: encryptedText.toString()\n                                    };\n\n                                    var getRequest = program.put(item);\n\n                                    getRequest.onerror = function (event) {\n                                        // Handle errors!\n                                    };\n                                    getRequest.onsuccess = function (event) {\n                                        this.setState({\n                                            message: `${DATA_DOWNLOAD_SUCCESS}`\n                                        })\n                                    }.bind(this);\n                                }\n                            }.bind(this)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            }\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport { IMPORT_TITLE, BTN_IMPORT, DATA_IMPORT_SUCCESS, IMPORT_PROGRAM, BTN_SUBMIT } from '../../Labels.js';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport CryptoJS from 'crypto-js';\nimport $ from 'jquery';\nimport 'jquery-validation';\n\nexport default class ImportProgramDataComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programData: {},\n            message: \"\",\n            programList: []\n        }\n        this.importClicked = this.importClicked.bind(this);\n        this.programSubmitClicked = this.programSubmitClicked.bind(this);\n    }\n\n    componentDidMount() {\n        $(\"#programDiv\").hide();\n        $(\"#importDiv\").show();\n        $(\"#importForm\").validate({\n            ignore: [],\n            rules: {\n                'programId': {\n                    required: true\n                },\n            }\n        })\n    }\n\n    render() {\n        const { programList } = this.state;\n        let programItems = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.id}>{item.name}</option>\n                )\n            }, this);\n        return (\n            <div>\n                <h4>{this.state.message}</h4>\n                <h4>{IMPORT_TITLE}</h4><br></br>\n                <form id=\"importForm\" name=\"importForm\">\n                    <div id=\"importDiv\">\n                        <input type=\"file\" /><br></br><br></br>\n                        <button type=\"button\" onClick={this.importClicked}>{BTN_IMPORT}</button>\n                    </div>\n                    <div id=\"programDiv\">\n                        {IMPORT_PROGRAM} : <select id=\"programId\" name=\"programId\" multiple={true}>\n                            {programItems}\n                        </select><br></br><br></br>\n                        <button type=\"button\" onClick={this.programSubmitClicked}>{BTN_SUBMIT}</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n    importClicked() {\n        var importObjectDataFromFile = {};\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            if (document.querySelector('input[type=file]').files[0] == undefined) {\n                alert(\"Please select a file\");\n            } else {\n                var file = document.querySelector('input[type=file]').files[0];\n                JSZip.loadAsync(file).then(function (zip) {\n                    var i = 0;\n                    var fileName = []\n                    var size = 0;\n                    Object.keys(zip.files).forEach(function (filename) {\n                        size++;\n                    })\n                    Object.keys(zip.files).forEach(function (filename) {\n                        zip.files[filename].async('string').then(function (fileData) {\n                            i++;\n                            var programDataJson = JSON.parse(fileData);\n                            var bytes = CryptoJS.AES.decrypt(programDataJson.programData, SECRET_KEY);\n                            var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                            var programDataJsonDecrypted = JSON.parse(plaintext);\n                            fileName[i] = {\n                                id: filename,\n                                name: programDataJsonDecrypted.label.labelEn\n                            }\n                            if (i === size) {\n                                this.setState({\n                                    programList: fileName\n                                })\n\n                                $(\"#programDiv\").show();\n                                $(\"#importDiv\").hide();\n                            }\n                        }.bind(this))\n\n                    }.bind(this))\n\n                }.bind(this))\n            }\n\n        }\n\n    }\n\n    programSubmitClicked() {\n        if ($(\"#importForm\").valid()) {\n            var importObjectDataFromFile = {};\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\n                if (document.querySelector('input[type=file]').files[0] == undefined) {\n                    alert(\"Please select a file\");\n                } else {\n                    var file = document.querySelector('input[type=file]').files[0];\n                    var db1;\n                    var storeOS;\n                    var openRequest = indexedDB.open('fasp', 1);\n                    var selectedPrgArr = $(\"#programId\").val();\n                    openRequest.onupgradeneeded = function (e) {\n                        var db1 = e.target.result;\n                        if (!db1.objectStoreNames.contains('programData')) {\n                            storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n                        }\n                    };\n                    openRequest.onsuccess = function (e) {\n                        db1 = e.target.result;\n                        var transaction = db1.transaction(['programData'], 'readwrite');\n                        var program = transaction.objectStore('programData');\n                        JSZip.loadAsync(file).then(function (zip) {\n                            Object.keys(zip.files).forEach(function (filename) {\n\n                                zip.files[filename].async('string').then(function (fileData) {\n                                    for (var j = 0; j < selectedPrgArr.length; j++) {\n                                        if (selectedPrgArr[j] == filename) {\n                                            db1 = e.target.result;\n                                            var transaction2 = db1.transaction(['programData'], 'readwrite');\n                                            var program2 = transaction2.objectStore('programData');\n                                            var addProgramDataRequest = program2.put(JSON.parse(fileData));\n                                            addProgramDataRequest.onerror = function (event) {\n                                            };\n                                            addProgramDataRequest.onsuccess = function (event) {\n                                            };\n                                        }\n\n                                    }\n                                })\n                            })\n                        })\n                        this.setState({\n                            message: `${DATA_IMPORT_SUCCESS}`\n                        })\n                        $(\"#programDiv\").hide();\n                        $(\"#importDiv\").show();\n                    }.bind(this)\n                }\n            }\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport { BTN_EXPORT, EXPORT_TITLE, PROGRAM, DATA_EXPORT_SUCCESS } from '../../Labels.js';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport CryptoJS from 'crypto-js';\nimport $ from 'jquery';\nimport 'jquery-validation';\n\nexport default class ExportProgramDataComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programData: {},\n            programList: [],\n            message: \"\"\n        }\n        this.exportClicked = this.exportClicked.bind(this);\n    }\n\n    componentDidMount() {\n        var db1;\n        var storeOS;\n        var openRequest = indexedDB.open('fasp', 1);\n        openRequest.onupgradeneeded = function (e) {\n            var db1 = e.target.result;\n            if (!db1.objectStoreNames.contains('programData')) {\n                storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n            }\n        };\n        openRequest.onsuccess = function (e) {\n            db1 = e.target.result;\n            var transaction = db1.transaction(['programData'], 'readwrite');\n            var program = transaction.objectStore('programData');\n            var getRequest = program.getAll();\n            var proList = []\n            getRequest.onerror = function (event) {\n                // Handle errors!\n            };\n            getRequest.onsuccess = function (event) {\n                var myResult = [];\n                myResult = getRequest.result;\n                for (var i = 0; i < myResult.length; i++) {\n                    var bytes = CryptoJS.AES.decrypt(myResult[i].programData, SECRET_KEY);\n                    var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                    var json = JSON.parse(plaintext);\n                    var programJson = {\n                        name: json.label.labelEn,\n                        id: json.programId\n                    }\n                    proList[i] = programJson\n                }\n                this.setState({\n                    programList: proList\n                })\n            }.bind(this);\n        }.bind(this)\n        $(\"#exportForm\").validate({\n            ignore: [],\n            rules: {\n                'programId': {\n                    required: true\n                },\n            }\n        })\n\n    }\n\n    render() {\n        const { programList } = this.state;\n        let programItems = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.id}>{item.name}</option>\n                )\n            }, this);\n        return (\n            <div>\n                <h4>{this.state.message}</h4>\n                <h4>{EXPORT_TITLE}</h4><br></br>\n                <form name=\"exportForm\" id=\"exportForm\">\n                    {PROGRAM} : <select id=\"programId\" name=\"programId\" multiple={true}>\n                        {programItems}\n                    </select><br></br><br></br>\n                    <button type=\"button\" onClick={this.exportClicked}>{BTN_EXPORT}</button>\n                </form>\n            </div>\n        )\n    }\n\n    exportClicked() {\n        if ($(\"#exportForm\").valid()) {\n        var zip = new JSZip();\n        var selectedPrgArr = $(\"#programId\").val();\n        var selectedPrgArrText = $('#programId option:selected').toArray().map(item => item.text);\n        var db1;\n        var storeOS;\n        var openRequest = indexedDB.open('fasp', 1);\n        openRequest.onupgradeneeded = function (e) {\n            var db1 = e.target.result;\n            if (!db1.objectStoreNames.contains('programData')) {\n                storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n            }\n        };\n        openRequest.onsuccess = function (e) {\n            db1 = e.target.result;\n            var transaction = db1.transaction(['programData'], 'readwrite');\n            var program = transaction.objectStore('programData');\n            var getRequest = program.getAll();\n            getRequest.onerror = function (event) {\n                // Handle errors!\n            };\n            getRequest.onsuccess = function (event) {\n                var myResult = [];\n                myResult = getRequest.result;\n                for (var i = 0; i < myResult.length; i++) {\n                    for (var j = 0; j < selectedPrgArr.length; j++) {\n                        if (myResult[i].id == selectedPrgArr[j]) {\n                            var txt = JSON.stringify(myResult[i]);\n                            console.log(selectedPrgArrText[i]);\n                            zip.file(selectedPrgArrText[i] + \"_\" + parseInt(i + 1) + \".txt\", txt);\n\n                        }\n                    }\n                    if (i == myResult.length - 1) {\n                        zip.generateAsync({\n                            type: \"blob\"\n                        }).then(function (content) {\n                            FileSaver.saveAs(content, \"download.zip\");\n                        });\n                        this.setState({\n                            message: `${DATA_EXPORT_SUCCESS}`\n                        })\n                    }\n                }\n\n\n            }.bind(this);\n        }.bind(this)\n\n    }\n\n    }\n\n}\n\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport IdleTimer from 'react-idle-timer';\nimport WelcomeComponent from \"../home/WelcomeComponent\";\n// import { IdleTimeOutModal } from './IdleModal.js';\nimport PropTypes from 'prop-types';\nimport '../../css/bootstrap/bootstrap.min.css';\nimport '../../css/theme-default.css';\nimport '../../css/custom.css';\nimport '../../css/mcustomscrollbar/jquery.mCustomScrollbar.css';\n//import  action from '../../Js/actions.js'\nimport '../../App.css'\nimport AddUserComponent from \"../user/AddUserComponent.jsx\";\nimport UserListComponent from \"../user/UserListComponent.jsx\";\nimport EditUserComponent from \"../user/EditUserComponent.jsx\";\nimport UpdateExpiredPasswordComponent from \"../home/UpdateExpiredPasswordComponent.jsx\";\nimport ChangePasswordComponent from \"../home/ChangePasswordComponent.jsx\";\nimport ForgotPasswordComponent from \"../home/ForgotPasswordComponent.jsx\";\nimport LoginComponent from \"../home/LoginComponent.jsx\";\nimport RoleListComponent from \"../user/RoleListComponent.jsx\";\nimport AddRoleComponent from \"../user/AddRoleComponent.jsx\";\nimport EditRoleComponent from \"../user/EditRoleComponent.jsx\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport AddLanguageComponent from '../language/AddLanguageComponent'\nimport LanguageListComponent from \"../language/LanguageListComponent.jsx\"\nimport EditLanguageComponent from \"../language/EditLanguageComponent.jsx\"\nimport AddDataSourceTypeComponent from \"../datasourceType/AddDataSourceTypeComponent.jsx\"\nimport DataSourceTypeListComponent from \"../datasourceType/DataSourceTypeListComponent.jsx\"\nimport UpdateDataSourceTypeComponent from \"../datasourceType/UpdateDataSourceTypeComponent.jsx\"\nimport AddDataSource from \"../dataSource/AddDataSource.jsx\"\nimport DataSourceListComponent from \"../dataSource/DataSourceListComponent.jsx\"\nimport UpdateDataSourceComponent from \"../dataSource/UpdateDataSourceComponent.jsx\"\nimport AddCurrencyComponent from \"../currency/AddCurrencyComponent.jsx\"\nimport CurrencyListComponent from \"../currency/CurrencyListComponent.jsx\"\nimport UpdateCurrencyComponent from \"../currency/UpdateCurrencyComponent.jsx\"\nimport AddCountryComponent from \"../country/AddCountryComponent.jsx\"\nimport CountryListComponent from \"../country/CountryListComponent.jsx\"\nimport UpdateCountryComponent from \"../country/UpdateCountryComponent.jsx\"\nimport AddShipmentStatusComponent from \"../shipmentStatus/AddShipmentStatusComponent.jsx\"\nimport ShipmentStatusListComponent from \"../shipmentStatus/ShipmentStatusListComponent.jsx\"\nimport UpdateShipmentStatusComponent from \"../shipmentStatus/UpdateShipmentStatusComponent.jsx\"\nimport DownloadProgramDataComponent from '../program/DownloadProgramDataComponent';\nimport ImportProgramDataComponent from '../program/ImportProgramDataComponent';\nimport ExportProgramDataComponent from '../program/ExportProgramDataComponent';\n\n\nclass Layout extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            timeout: AuthenticationService.checkSessionTimeOut(),\n            showModal: false,\n            userLoggedIn: false,\n            isTimedOut: false\n        }\n\n        this.idleTimer = null\n        this.onAction = this._onAction.bind(this)\n        this.onActive = this._onActive.bind(this)\n        this.onIdle = this._onIdle.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleLogout = this.handleLogout.bind(this)\n    }\n\n    _onAction(e) {\n      console.log('user did something', e)\n      this.setState({isTimedOut: false})\n    }\n   \n    _onActive(e) {\n      console.log('user is active', e)\n      this.setState({isTimedOut: false})\n    }\n   \n    _onIdle(e) {\n      console.log('user is idle', e)\n      const isTimedOut = this.state.isTimedOut\n      if (isTimedOut) {\n          this.props.history.push('/')\n      } else {\n        this.setState({showModal: true})\n        this.idleTimer.reset();\n        this.setState({isTimedOut: true})\n      }\n      \n    }\n\n    handleClose() {\n      this.setState({showModal: false})\n    }\n\n    handleLogout() {\n      this.setState({showModal: false})\n      this.props.history.push('/')\n    }\n\n    render(){\n      const { match } = this.props\n      return(\n        <>\n          <IdleTimer\n            ref={ref => { this.idleTimer = ref }}\n            element={document}\n            onActive={this.onActive}\n            onIdle={this.onIdle}\n            onAction={this.onAction}\n            debounce={250}\n            timeout={this.state.timeout} />\n\n            <div className=\"\">\n               \n            {/* {AuthenticationService.setupAxiosInterceptors()} */}\n                <Switch>\n\n                {/* <Route path=\"/\" exact component={LoginComponent} /> */}\n                <Route path=\"/login/:message\" exact component={LoginComponent} />\n                    <Route \n                        exact path={`${match.path}welcome`}\n                        render={(props) => <WelcomeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}welcome/:message`}\n                        render={(props) => <WelcomeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}addUser`}\n                        render={(props) => <AddUserComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}userList`}\n                        render={(props) => <UserListComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}userList/:message`}\n                        render={(props) => <UserListComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}editUser`}\n                        render={(props) => <EditUserComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}updateExpiredPassword`}\n                        render={(props) => <UpdateExpiredPasswordComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}changePassword`}\n                        render={(props) => <ChangePasswordComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}forgotPassword`}\n                        render={(props) => <ForgotPasswordComponent {...props} /> }/>\n                    />\n                    \n                    <Route \n                        exact path={`${match.path}addRole`}\n                        render={(props) => <AddRoleComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}roleList`}\n                        render={(props) => <RoleListComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}roleList/:message`}\n                        render={(props) => <RoleListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editRole`}\n                        render={(props) => <EditRoleComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}addLanguage`}\n                        render={(props) => <AddLanguageComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editLanguage`}\n                        render={(props) => <EditLanguageComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}languageList/:message`}\n                        render={(props) => <LanguageListComponent {...props} /> }/>\n                    />\n                    \n                    <Route \n                        exact path={`${match.path}addDataSourceType`}\n                        render={(props) => <AddDataSourceTypeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editDataSourceType`}\n                        render={(props) => <UpdateDataSourceTypeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}dataSourceTypeList/:message`}\n                        render={(props) => <DataSourceTypeListComponent {...props} /> }/>\n                    />\n\n\n                    <Route \n                        exact path={`${match.path}addDataSource`}\n                        render={(props) => <AddDataSource {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editDataSource`}\n                        render={(props) => <UpdateDataSourceComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}dataSourceList/:message`}\n                        render={(props) => <DataSourceListComponent {...props} /> }/>\n                    />\n\n\n                    <Route \n                        exact path={`${match.path}addCurrency`}\n                        render={(props) => <AddCurrencyComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editCurrency`}\n                        render={(props) => <UpdateCurrencyComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}currencyList/:message`}\n                        render={(props) => <CurrencyListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}downloadProgramData/`}\n                        render={(props) => <DownloadProgramDataComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}importProgramData/`}\n                        render={(props) => <ImportProgramDataComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}exportProgramData/`}\n                        render={(props) => <ExportProgramDataComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}addCountry`}\n                        render={(props) => <AddCountryComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}countryList/:message`}\n                        render={(props) => <CountryListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editCountry`}\n                        render={(props) => <UpdateCountryComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}addShipmentStatus`}\n                        render={(props) => <AddShipmentStatusComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}shipmentStatusListAll/:message`}\n                        render={(props) => <ShipmentStatusListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editShipmentStatus`}\n                        render={(props) => <UpdateShipmentStatusComponent {...props} /> }/>\n                    />\n                </Switch>\n                \n              {/*  <IdleTimeOutModal \n                    showModal={this.state.showModal} \n                    handleClose={this.handleClose}\n                    handleLogout={this.handleLogout}\n                />*/}\n            </div>\n        </>\n      )\n   }\n\n }\n\n Layout.propTypes = {\n     match: PropTypes.any.isRequired,\n     history: PropTypes.func.isRequired\n }\n\nexport default Layout","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport '../../Js/actions';\nimport ErrorComponent from \"../common/ErrorComponent\";\nimport LoginComponent from \"../home/LoginComponent.jsx\";\nimport Layout from './Layout.js';\n\nclass Sidebar extends Component {\n\n    \n    render() {\n        return (\n            <div className=\"Sidebar\">\n\n\n{/* MESSAGE BOX*/}\n<div className=\"message-box animated fadeIn\" data-sound=\"alert\" id=\"mb-signout\">\n <div className=\"mb-container\">\n     <div className=\"mb-middle\">\n         <div className=\"mb-title\"><span className=\"fa fa-sign-out\"></span> Log <strong>Out</strong> ?</div>\n         <div className=\"mb-content\">\n             <p>Are you sure you want to log out?</p>\n             <p>Press No if youwant to continue work. Press Yes to logout current user.</p>\n         </div>\n         <div className=\"mb-footer\">\n             <div className=\"pull-right\">\n                 <a href=\"/\" className=\"btn btn-success btn-lg\">Yes</a>\n                 <button className=\"btn btn-default btn-lg mb-control-close\">No</button>\n             </div>\n         </div>\n     </div>\n </div>\n</div>\n  {/* <Router> */}\n\n                <Router basename=\"/palashSprint1\">\n                \n\n                    <>\n                        <Switch>\n                            <Route path=\"/\" exact component={LoginComponent} />\n   {/* START PAGE CONTAINER */}\n    <div className=\"page-container page-navigation-toggled page-container-wide\">\n\n{/* START PAGE SIDEBAR */}\n <div className=\"page-sidebar\">\n    {/* START X-NAVIGATION */}\n     <ul className=\"x-navigation x-navigation-minimized\">\n         <li className=\"xn-logo\">\n             <a href=\"index.html\">FASP</a>\n             <a href=\"#\" className=\"x-navigation-control\"></a>\n\n         </li>\n     \n      \n\n         \n\n         <li className=\"active\">\n            { <a href=\"welcome\"><span className=\"fa fa-list-alt\"></span> <span className=\"xn-text\">Home</span></a>}\n            {/* <ul>\n\n                 <li className=\"\">\n                     <a href=\"consumption.html\"><span className=\"\"></span> Consumption</a>\n\n                 </li>\n\n                 <li><a href=\"pages-messages.html\"><span className=\"\"></span> Shipments</a></li>\n                 <li><a href=\"pages-calendar.html\"><span className=\"\"></span> Stocks</a></li>\n\n             </ul> */}\n         </li>\n\n       {/*  <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-table\"></span> <span className=\"xn-text\">Commodities Data</span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"#\"><span className=\"\"></span> Consumption</a>\n\n                 </li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Shipments</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Stocks</a></li>\n\n             </ul>\n            </li>*/}\n             <li className=\"xn-openable\">\n             <a href=\"\"><span className=\"fa fa-table\"></span> <span className=\"xn-text\">Program data</span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"downloadProgramData\"><span className=\"\"></span> Download</a>\n\n                 </li>\n\n                 <li><a href=\"exportProgramData\"><span className=\"\"></span> Export</a></li>\n                 <li><a href=\"importProgramData\"><span className=\"\"></span> Import</a></li>\n\n             </ul>\n            </li>\n\n            <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-file\"></span> <span className=\"xn-text\">Admin</span></a>\n             <ul className=\"sidebarUl\">\n\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> User</a>\n                     <ul>\n                         <li><a href=\"addUser\"><span className=\"\"></span> Add User</a></li>\n                         <li><a href=\"listUser\"><span className=\"\"></span>User List</a></li>\n                     </ul>\n                 </li>\n\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Role</a>\n                     <ul>\n                         <li><a href=\"addRole\"><span className=\"\"></span> Add Role</a></li>\n                         <li><a href=\"listRole\"><span className=\"\"></span>Role List</a></li>\n                     </ul>\n                 </li>\n\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Language</a>\n                     <ul>\n                         <li><a href=\"addLanguage\"><span className=\"\"></span> Add Language</a></li>\n                         <li><a href=\"listLanguage\"><span className=\"\"></span>Language List</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Country</a>\n                     <ul>\n                         <li><a href=\"addCountry\"><span className=\"\"></span> Add Country</a></li>\n                         <li><a href=\"listCountry\"><span className=\"\"></span>Country List</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Currency</a>\n                     <ul>\n                         <li><a href=\"addCurrency\"><span className=\"\"></span> Add Currency</a></li>\n                         <li><a href=\"listCurrency\"><span className=\"\"></span>Currency List</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> DataSource</a>\n                     <ul>\n                         <li><a href=\"addDataSource\"><span className=\"\"></span> Add DataSource</a></li>\n                         <li><a href=\"listDataSource\"><span className=\"\"></span>DataSource List</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> DataSource Type</a>\n                     <ul>\n                         <li><a href=\"addDataSourceType\"><span className=\"\"></span> Add DataSource Type</a></li>\n                         <li><a href=\"listDataSourceType\"><span className=\"\"></span>DataSource Type List</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Shipment Status</a>\n                     <ul>\n                         <li><a href=\"addShipmentStatus\"><span className=\"\"></span> Add Shipment Status</a></li>\n                         <li><a href=\"listShipmentStatus\"><span className=\"\"></span>Shipment Status List</a></li>\n                     </ul>\n                 </li>\n                \n             </ul>\n         </li>\n\n      {/*   <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-file\"></span> <span className=\"xn-text\">Background Data</span></a>\n             <ul>\n\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Products</a>\n                     <ul>\n                         <li><a href=\"\"><span className=\"\"></span> Case Sizes</a></li>\n                         <li><a href=\"\"><span className=\"\"></span>Costs</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Categories</a>\n                     <ul>\n                         <li><a href=\"\"><span className=\"\"></span> View Categories</a></li>\n\n                     </ul>\n                 </li>\n\n                 <li><a href=\"\"><span className=\"\"></span> Suppliers</a></li>\n                 <li><a href=\"\"><span className=\"\"></span> Data Sources</a></li>\n                 <li><a href=\"\"><span className=\"\"></span> Funding Sources</a></li>\n             </ul>\n         </li>\n\n         <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-bar-chart-o\"></span> <span className=\"xn-text\">Graphs    </span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"#\"><span className=\"\"></span> Stock Status</a>\n\n                 </li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Consumption</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Trend Analysis</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Couple Year Protection(CYP)</a></li>\n             </ul>\n         </li>\n\n         <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-files-o\"></span> <span className=\"xn-text\">Reports    </span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"#\"><span className=\"\"></span> Stock Status</a>\n\n                 </li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Stock Status Matrix</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Shipment Summary</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Supply Plans</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Shipment Orders</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Annual Shipment Costs</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Pipeline Action</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Pipeline Problem</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Procurement</a></li>\n             </ul>\n         </li>*/}\n     </ul>\n    {/* END X-NAVIGATION */}\n </div>\n{/* END PAGE SIDEBAR */}\n\n{/* PAGE CONTENT */}\n\n <div className=\"page-content\">\n    {/* START X-NAVIGATION VERTICAL */}\n     <ul className=\"x-navigation x-navigation-horizontal x-navigation-panel\">\n        {/* TOGGLE NAVIGATION */}\n         <li className=\"xn-icon-button\">\n             <a href=\"#\" className=\"x-navigation-minimize\"><span className=\"fa fa-dedent\"></span></a>\n         </li>\n        {/* END TOGGLE NAVIGATION */}\n        {/* SEARCH */}\n        {/* <li className=\"xn-search\">\n                 <form role=\"form\">\n                     <input type=\"text\" name=\"search\" placeholder=\"Search...\"/>\n                 </form>\n             </li> */}\n        {/* END SEARCH */}\n        {/* SIGN OUT */}\n         <li className=\"xn-icon-button pull-right\">\n             <a href=\"#\" className=\"mb-control\" data-box=\"#mb-signout\"><span className=\"fa fa-sign-out\"></span></a>\n         </li>\n        {/* END SIGN OUT */}\n        {/* MESSAGES */}\n         <li className=\"xn-icon-button pull-right\">\n                 <a href=\"#\"><span className=\"fa fa-user\"></span>\n\n                 </a>\n      \n                 <div className=\"panel panel-primary animated zoomIn xn-drop-left xn-panel-dragging user-panel\" >\n                     <div className=\"panel-heading\">\n                         <div className=\"profile\">\n                     <div className=\"profile-image\">\n                         <img className=\"profile-img\" src=\"../../img/no-image.jpeg\" alt=\"John Doe\" >\n                     </img></div>\n                     <div className=\"profile-data\">\n                         <div className=\"profile-data-name\">XYZ</div>\n                         <div className=\"profile-data-title\">Admin User</div>\n                         <div className=\"profile-data-title\"><span>Online</span></div>\n                           <div className=\"profile-data-title\"><span>  <span className=\"online\"></span></span>\n                           </div>\n\n\n                 \n                       \n                     </div>\n                \n                 </div>\n                     </div>\n                                  \n                 </div>                      \n             </li>\n\n             <li className=\"xn-icon-button pull-right\">\n                 <a href=\"#\" className=\"lang-align\" ><span className=\"\"> Languages</span> <span className=\"fa fa-caret-down lang-caret\"\n                  ></span></a>\n             {/*    <div className=\"informer informer-warning\">3</div> */}\n                 <div className=\"panel panel-primary animated zoomIn xn-drop-left xn-panel-dragging lang-width\">\n                   {/*  <div className=\"panel-heading\">\n                         <h3 className=\"panel-title\"><span className=\"fa fa-tasks\"></span> Program Name</h3>                                \n                         <div className=\"pull-right\">\n                             <span className=\"label label-warning\">3 active</span>\n                         </div>\n                     </div> */}\n                     <div className=\"panel-body list-group scroll lang-box\">                                \n                         <a className=\"list-group-item\" href=\"#\">\n                             <strong>Français | FRA</strong>\n                        {/*     <div className=\"progress progress-small progress-striped active\">\n                                 <div className=\"progress-bar progress-bar-danger\" role=\"progressbar\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 50%;\">50%</div>\n                             </div>\n                             <small className=\"text-muted\">John Doe, 25 Sep 2014 / 50%</small> */}\n                         </a>\n                         <a className=\"list-group-item\" href=\"#\">\n                             <strong>Português | PRT</strong>\n                       {/*      <div className=\"progress progress-small progress-striped active\">\n                                 <div className=\"progress-bar progress-bar-warning\" role=\"progressbar\" aria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 80%;\">80%</div>\n                             </div>\n                             <small className=\"text-muted\">Dmitry Ivaniuk, 24 Sep 2014 / 80%</small> */}\n                         </a>\n                         <a className=\"list-group-item\" href=\"#\">\n                             <strong>Español | ESP</strong>\n\n                         </a>\n                         <a className=\"list-group-item\" href=\"#\">\n                             <strong>STiếng Việt | VIE</strong>\n                \n                         </a>                                \n                     </div>     \n                                               \n                 </div>                        \n             </li>\n\n\n        {/* END TASKS */}\n     </ul>\n    {/* END X-NAVIGATION VERTICAL */}\n\n    {/* START BREADCRUMB */}\n\n    {/* END BREADCRUMB */}\n\n    {/* PAGE CONTENT WRAPPER */}\n  \n\n                            <Route path='/' render={(props) => <Layout {...props} />} />\n                            {/* <Route path=\"/login/:message\" component={LoginComponent} /> */}\n                            {/* <Route path=\"/addUser\" component={AddUserComponent} /> */}\n                            {/* <Route path=\"/userList\" exact component={UserListComponent} /> */}\n                            {/* <Route path=\"/userList/:message\" component={UserListComponent} /> */}\n                            {/* <Route path=\"/editUser\" component={EditUserComponent} /> */}\n                            {/* <Route path=\"/addRole\" component={AddRoleComponent} /> */}\n                            {/* <Route path=\"/roleList\" component={RoleListComponent} /> */}\n                            {/* <Route path=\"/roleList/:message\" component={RoleListComponent} /> */}\n                            {/* <Route path=\"/editRole\" component={RoleListComponent} /> */}\n                            {/* <AuthenticatedRoute path=\"/updateExpiredPassword\" component={UpdateExpiredPasswordComponent} /> */}\n                            {/* <AuthenticatedRoute path=\"/welcome\" component={WelcomeComponent} /> */}\n                            {/* <AuthenticatedRoute path=\"/registration\" component={RegistrationComponent} /> */}\n                            {/* <AuthenticatedRoute path=\"/listUserApproval/:message\" component={UserApprovalComponent} /> */}\n                            {/* <AuthenticatedRoute path=\"/listUserApproval\" component={UserApprovalComponent} /> */}\n                            {/* <AuthenticatedRoute path=\"/editUserApproval/:registrationId/:emailId\" component={EditUserApprovalComponent} /> */}\n                            <Route component={ErrorComponent} />\n\n                       \n    {/* END PAGE CONTENT WRAPPER */}\n </div>\n{/* END PAGE CONTENT */}\n</div>\n{/* END PAGE CONTAINER */}\n\n</Switch>\n                    </>\n                </Router> \n            </div>\n        );\n    }\n\n}\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/common/Sidebar';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Sidebar></Sidebar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// AuthenticationService.setupAxiosInterceptors();\nserviceWorker.register();"],"sourceRoot":""}