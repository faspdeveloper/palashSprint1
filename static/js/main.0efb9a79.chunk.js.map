{"version":3,"sources":["Js/actions.js","components/common/ErrorComponent.jsx","Js/validation.js","Constants.js","api/LoginService.js","components/common/AuthenticationService.js","components/home/LoginComponent.jsx","components/home/WelcomeComponent.jsx","api/UserService.js","components/user/AddUserComponent.jsx","Labels.js","components/user/UserListComponent.jsx","components/user/EditUserComponent.jsx","components/home/ChangePasswordComponent.jsx","components/user/RoleListComponent.jsx","components/user/AddRoleComponent.jsx","components/user/EditRoleComponent.jsx","api/LanguageService.js","components/language/AddLanguageComponent.jsx","components/language/LanguageListComponent.jsx","components/language/EditLanguageComponent.jsx","api/DataSourceTypeService.js","components/datasourceType/AddDataSourceTypeComponent.jsx","components/datasourceType/DataSourceTypeListComponent.jsx","components/datasourceType/UpdateDataSourceTypeComponent.jsx","api/DataSourceService.js","components/dataSource/AddDataSource.jsx","components/dataSource/DataSourceListComponent.jsx","components/dataSource/UpdateDataSourceComponent.jsx","api/CurrencyService.js","components/currency/AddCurrencyComponent.jsx","components/currency/CurrencyListComponent.jsx","components/currency/UpdateCurrencyComponent.jsx","api/CountryService.js","components/country/AddCountryComponent.jsx","components/country/CountryListComponent.jsx","components/country/UpdateCountryComponent.jsx","api/ShipmentStatusService.js","components/shipmentStatus/AddShipmentStatusComponent.jsx","components/shipmentStatus/ShipmentStatusListComponent.jsx","components/shipmentStatus/UpdateShipmentStatusComponent.jsx","api/ProgramService.js","components/program/DownloadProgramDataComponent.jsx","components/program/ImportProgramDataComponent.jsx","components/program/ExportProgramDataComponent.jsx","components/common/Layout.js","components/home/UpdateExpiredPasswordComponent.jsx","components/home/ForgotPasswordComponent.jsx","components/common/Sidebar.jsx","App.js","serviceWorker.js","index.js"],"names":["onload","x_navigation_onresize","page_content_onresize","$","css","content_minus","length","content","sidebar","height","document","window","width","hasClass","doc_height","show","removeClass","data","addClass","panel_refresh","panel","action","callback","find","remove","append","innerWidth","each","this","x_navigation_minimize","onresize","timeout","setTimeout","ready","on","e","stopPropagation","parents","fadeOut","parent","wr","prop","box","toggleClass","is","hide","prev","unwrap","resize","head","body","footer","hplus","wrap","panel_fullscreen","animate","panel_remove","blockOpen","attr","accordion","noCollapse","slideUp","slideDown","not","elm","index","setInterval","click","li","event","children","focus","x_navigation","Object","size","obj","key","hasOwnProperty","ErrorComponent","validator","addMethod","value","element","optional","test","API_URL","SECRET_KEY","username","password","console","log","axios","post","localStorage","getItem","token","jwt_decode","userId","sub","user","language","languageId","typeOfSession","navigator","onLine","newUsername","usernameStored","originalText","CryptoJS","AES","decrypt","toString","enc","Utf8","confirm","decoded","Date","exp","curDate","sessionExpiresOn","setupAxiosInterceptors","get","then","response","catch","error","basicAuthHeader","interceptors","request","use","config","headers","authorization","LoginComponent","props","state","message","loginClicked","bind","forgotPassword","validate","ignore","rules","emailId","required","errorPlacement","insertAfter","className","name","id","match","params","type","onClick","val","valid","AuthenticationService","isUserLoggedIn","LoginService","authenticate","status","checkIfDifferentUserIsLoggedIn","setItem","encrypt","history","push","setState","pathname","decryptedUsername","decryptedPassword","bcrypt","compare","err","res","alert","Component","WelcomeComponent","json","put","oldPassword","newPassword","AddUserComponent","getLanguageId","realms","languages","roles","submitClicked","cancelClicked","checkTypeOfSession","UserService","getRealmList","getLanguageList","getRoleList","email","phoneNumber","number","roleId","realmList","map","item","i","realmId","label","porLabel","engLabel","freLabel","spaLabel","languagesList","languageName","roleList","style","margin","border","background","maxLength","minLength","realm","role","countryIds","addNewUser","UserListComponent","userList","editUser","unlockAccount","getUserList","marginLeft","align","lastLoginDate","faildAttempts","active","location","reload","EditUserComponent","_isMounted","updateClicked","dataChange","target","onChange","checked","ChangePasswordComponent","checkOldPassword","confirmNewPassword","checkPassword","changePassword","getLoggedInUsername","statusText","text","RoleListComponent","editRole","addNewRole","AddRoleComponent","businessFunctions","getBusinessFunctionList","maxlength","businessFunctionsList","businessFunctionId","class","href","data-live-search","data-actions-box","multiple","canCreateRole","Array","from","selectedOptions","readOnly","placeholder","AddLanguageComponent","updateFieldData","submitForm","lettersonly","LanguageService","addLanguage","LanguageListComponent","langaugeList","editLanguage","addNewLanguage","EditLanguageComponent","updateForm","AddDataSourceTypeComponent","DataSourceTypeService","addDataSourceType","DataSourceListComponent","dataSourceList","editDataSourceType","addNewDataSourceType","getDataSourceTypeList","dataSourceType","dataSourceTypeId","UpdateDataSourceTypeComponent","labelId","AddDataSource","dataSourceTypeList","getDataSourceTypeListActive","dataSource","DataSourceService","addDataSource","dataSourceTypes","editDataSource","addNewDataSource","getDataSourceList","dataSourceId","UpdateDataSourceComponent","AddCurrencyComponent","currencyCode","currencySymbol","conversionRateToUsd","integer","currency","CurrencyService","addCurrency","CurrencyListComponent","currencyList","editCurrency","addNewCurrency","getCurrencyList","currencyId","UpdateCurrencyComponent","AddCountryComponent","languageList","getLanguageListActive","getCurrencyListActive","CountryService","addCountry","languageItems","currencyItems","itemOne","CountryListComponent","countryList","addNewCountry","editCountry","getCountryListAll","country","countryId","UpdateCountryComponent","curencyId","AddShipmentStatusComponent","shipmentStatus","nextShipmentStatusAllowed","shipmentStatusList","ShipmentStatusService","getShipmentStatusListActive","addShipmentStatus","shipmentStatusItems","shipmentStatusId","ShipmentStatusListComponent","editShipmentStatus","addNewShipmentStatus","getShipmentStatusListAll","UpdateShipmentStatusComponent","programId","DownloadProgramDataComponent","programList","downloadClicked","ProgramService","getProgramList","programItems","programArr","j","getProgramData","openRequest","indexedDB","open","onupgradeneeded","db1","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onsuccess","program","transaction","objectStore","encryptedText","JSON","stringify","programVersion","version","programName","labelEn","programData","putRequest","onerror","ImportProgramDataComponent","importClicked","programSubmitClicked","File","FileReader","FileList","Blob","undefined","querySelector","files","file","split","JSZip","loadAsync","zip","fileName","keys","forEach","filename","async","fileData","programDataJson","parse","plaintext","programDataJsonDecrypted","selectedPrgArr","addProgramDataRequest","ExportProgramDataComponent","exportClicked","getRequest","getAll","proList","myResult","programJson","selectedPrgArrText","toArray","txt","parseInt","generateAsync","FileSaver","saveAs","Layout","checkSessionTimeOut","showModal","userLoggedIn","isTimedOut","idleTimer","onAction","_onAction","onActive","_onActive","onIdle","_onIdle","handleClose","handleLogout","reset","ref","debounce","path","exact","component","render","React","UpdateExpiredPasswordComponent","logoutClicked","updateExpiredPassword","ForgotPasswordComponent","Sidebar","data-sound","data-box","src","alt","title","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","unregister","checkValidServiceWorker"],"mappings":"2aA8QA,SAASA,IACLC,IACAC,IAGJ,SAASA,IACLC,IAAE,8EAA8EC,IAAI,QAAQ,IAAIA,IAAI,SAAS,IAE7G,IAAIC,EAAgB,EACpBA,EAAiBF,IAAE,yBAAyBG,OAAS,EAAK,GAAKD,EAC/DA,GAAkBF,IAAE,8BAA8BG,OAAS,EAAK,GAAK,EAErE,IAAIC,EAAUJ,IAAE,iBACZK,EAAUL,IAAE,iBAUhB,GARGI,EAAQE,SAAWN,IAAEO,UAAUD,SAAWJ,GACzCE,EAAQE,OAAON,IAAEO,UAAUD,SAAWJ,GAGvCG,EAAQC,SAAWF,EAAQE,UAC1BF,EAAQE,OAAOD,EAAQC,UAGxBN,IAAEQ,QAAQC,QAAU,KAAK,CAExB,GAAGT,IAAE,iBAAiBU,SAAS,UAAU,CACrC,GAAGV,IAAE,QAAQU,SAAS,wBAClB,IAAIC,EAAaX,IAAEO,UAAUD,SAAW,QAEpCK,EAAaX,IAAEQ,QAAQF,SAEhCN,IAAE,iBAAiBM,OAAOK,GAI1BX,IAAE,uBAAuBM,SAAWN,IAAEO,UAAUD,SAAS,IACxDN,IAAE,gEAAgEM,OAAON,IAAEO,UAAUD,SAAS,KAE9FN,IAAE,4CAA4CM,OAAON,IAAE,uBAAuBM,UAGlFN,IAAE,uBAAuBY,OACzBZ,IAAE,wBAAwBY,YAE1BZ,IAAE,uBAAuBM,OAAON,IAAE,kBAAkBM,SAAS,IAE1DN,IAAE,iBAAiBU,SAAS,WAC5BV,IAAE,iBAAiBC,IAAI,SAAS,IAGpCD,IAAEQ,QAAQC,QAAU,KAChBT,IAAE,QAAQU,SAAS,yBAClBV,IAAE,QAAQa,YAAY,wBAAwBC,KAAK,QAAQ,KAGhC,MAA5Bd,IAAE,QAAQc,KAAK,UACdd,IAAE,QAAQe,SAAS,wBAAwBD,KAAK,QAAQ,IAgEpE,SAASE,EAAcC,EAAMC,EAAOC,GAC5BF,EAAMP,SAAS,qBAQfO,EAAMG,KAAK,wBAAwBC,SACnCJ,EAAMJ,YAAY,oBAEfK,GAAqB,WAAXA,GAA2C,oBAAbC,GACvCA,MAXJF,EAAMK,OAAO,+EACbL,EAAMG,KAAK,wBAAwBX,MAAMQ,EAAMR,SAASH,OAAOW,EAAMX,UACrEW,EAAMF,SAAS,oBAEZG,GAAqB,UAAXA,GAA0C,oBAAbC,GACtCA,KAQRtB,IAmBJ,SAASC,KAEYU,OAAOe,YAAcvB,IAAEO,UAAUE,SAElC,MACZT,IAAE,+BAA+Ba,YAAY,0BAC7Cb,IAAE,mBAAmBa,YAAY,uBACjCb,IAAE,yCAAyCa,YAAY,UAGvDb,IAAE,4BAA4BwB,MAAK,WAC3BxB,IAAEyB,MAAMf,SAAS,uBACjBV,IAAE,4BAA4Be,SAAS,yBAAyBF,YAAY,gCAMjFb,IAAE,4BAA4BG,OAAS,GACtCuB,EAAsB,SAG1B1B,IAAE,0BAA0Be,SAAS,2BAA2BF,YAAY,0BAKpF,SAASa,EAAsBR,GAEd,QAAVA,IACClB,IAAE,mBAAmBa,YAAY,uBACjCb,IAAE,+BAA+Ba,YAAY,0BAC7Cb,IAAE,0BAA0BoB,KAAK,OAAOP,YAAY,aAAaE,SAAS,cAIjE,SAAVG,IACClB,IAAE,mBAAmBe,SAAS,uBAC9Bf,IAAE,+BAA+Be,SAAS,0BAC1Cf,IAAE,0BAA0BoB,KAAK,OAAOP,YAAY,aAAaE,SAAS,cAI9Ef,IAAE,2BAA2Ba,YAAY,UAyE7C,SAASc,EAASC,GACdA,EAAUA,GAAoB,IAE9BC,YAAW,WACP9B,MACF6B,GA/hBN5B,IAAEO,UAAUuB,OAAM,WAQd9B,IAAE,QAAQ+B,GAAG,SAAS,WAEd/B,IAAE,0DAA0Da,YAAY,aAGhFb,IAAE,mCAAmC+B,GAAG,SAAQ,SAASC,GACrDA,EAAEC,qBAINjC,IAAE,kBAAkB+B,GAAG,SAAQ,WAK3B,OAJA/B,IAAEyB,MAAMS,QAAQ,WAAWC,QAAQ,KAAI,WACnCnC,IAAEyB,MAAMJ,SACRrB,IAAE,mBAAmBqB,aAElB,KAKXrB,IAAE,gCAAgC+B,GAAG,SAAQ,WAChC/B,IAAEyB,MAAMW,OAAO,OAClB1B,SAAS,WACXV,IAAEyB,MAAMS,QAAQ,iBAAiBnB,SAAS,UAE1Cf,IAAEyB,MAAMS,QAAQ,iBAAiBrB,YAAY,aAGrDb,IAAE,wBAAwB+B,GAAG,SAAQ,WAIjC,OAHA/B,IAAEyB,MAAMS,QAAQ,iBAAiBC,QAAQ,KAAI,WACzCnC,IAAEyB,MAAMJ,aAEL,KAEXrB,IAAE,yBAAyB+B,GAAG,SAAQ,WAElC/B,IAAE,iBAAiBwB,MAAK,WAEpB,IAAIa,EAAKrC,IAAEyB,MAAML,KAAK,kBAAkBgB,OAAO,OAE5CC,EAAG3B,SAAS,YACXV,IAAEyB,MAAMZ,YAAY,UACpBwB,EAAGxB,YAAY,WACfwB,EAAGjB,KAAK,SAASkB,KAAK,WAAU,KAEhCtC,IAAEyB,MAAMV,SAAS,UACjBsB,EAAGtB,SAAS,WACZsB,EAAGjB,KAAK,SAASkB,KAAK,WAAU,UA4C5CtC,IAAE,oBAAoB+B,GAAG,SAAQ,WAC7BJ,OAKJ3B,IAAE,eAAe+B,GAAG,SAAQ,WACxB,IAAIQ,EAAMvC,IAAEA,IAAEyB,MAAMX,KAAK,QACzB,GAAGyB,EAAIpC,OAAS,EAAE,CACdoC,EAAIC,YAAY,QAEJD,EAAIzB,KAAK,SASzB,OAAO,KAEXd,IAAE,qBAAqB+B,GAAG,SAAQ,WAE/B,OADA/B,IAAEyB,MAAMS,QAAQ,gBAAgBrB,YAAY,SACrC,KAKVb,IAAE,8BAA8B+B,GAAG,SAAQ,WACvC/B,IAAE,uBAAuByC,GAAG,YAC1BzC,IAAE,uBAAuB0C,OACzB1C,IAAE,uBAAuBY,OAC3Bb,OAEJC,IAAE,+BAA+B+B,GAAG,SAAQ,WACxC/B,IAAE,wBAAwByC,GAAG,YAC3BzC,IAAE,wBAAwB0C,OAC1B1C,IAAE,wBAAwBY,OAC5Bb,OAKJC,IAAE,oBAAoB+B,GAAG,SAAQ,WAC7B/B,IAAEyB,MAAMe,YAAY,cAGxBxC,IAAE,iCAAiC+B,GAAG,SAAQ,WAE1C,IAAIO,EAAOtC,IAAEyB,MAAMkB,KAAK,SAASL,KAAK,WAEtCtC,IAAE,oBAAoBwB,MAAK,WACdxB,IAAEyB,MAAML,KAAK,wBACnBoB,YAAY,UAAUF,GAAMlB,KAAK,SAASkB,KAAK,UAAUA,SAQpEtC,IAAE,qBAAqB+B,GAAG,SAAQ,WAE9B,OAuKR,SAA0Bd,GAEtB,GAAGA,EAAMP,SAAS,sBACdO,EAAMJ,YAAY,sBAAsB+B,SACxC3B,EAAMG,KAAK,6BAA6BnB,IAAI,SAAS,IACrDgB,EAAMG,KAAK,yBAAyBP,YAAY,eAAeE,SAAS,aAExEf,IAAEQ,QAAQqC,aACT,CACD,IAAIC,EAAU7B,EAAMG,KAAK,kBACrB2B,EAAU9B,EAAMG,KAAK,eACrB4B,EAAU/B,EAAMG,KAAK,iBACrB6B,EAAU,IAEXF,EAAKrC,SAAS,qBAAuBqC,EAAKrC,SAAS,gBAClDuC,EAAQ,GAETH,EAAK3C,OAAS,IACb8C,GAASH,EAAKxC,SAAS,IAExB0C,EAAO7C,OAAS,IACf8C,GAASD,EAAO1C,SAAS,IAG7BW,EAAMG,KAAK,6BAA6Bd,OAAON,IAAEQ,QAAQF,SAAW2C,GAGpEhC,EAAMF,SAAS,sBAAsBmC,KAAK,6CAC1CjC,EAAMG,KAAK,yBAAyBP,YAAY,aAAaE,SAAS,eAEtEf,IAAEQ,QAAQqC,UAtMVM,CAAiBnD,IAAEyB,MAAMS,QAAQ,YAC1B,KAGXlC,IAAE,mBAAmB+B,GAAG,SAAQ,WAsMpC,IAAwBd,EAAMC,EAAOC,EAnM7B,OAmMgBF,EArMDjB,IAAEyB,MAAMS,QAAQ,WAuM1BxB,SAAS,kBACdO,EAAMJ,YAAY,iBAElBI,EAAMG,KAAK,gCAAgCP,YAAY,eAAeE,SAAS,iBAE5EG,GAAqB,UAAXA,GAA0C,oBAAbC,GACtCA,IAEJtB,MAGAoB,EAAMF,SAAS,iBAEfE,EAAMG,KAAK,kCAAkCP,YAAY,iBAAiBE,SAAS,eAEhFG,GAAqB,WAAXA,GAA2C,oBAAbC,GACvCA,IAEJtB,KAxNAG,IAAEyB,MAAMS,QAAQ,aAAarB,YAAY,SAClC,KAEXb,IAAE,iBAAiB+B,GAAG,SAAQ,WAG1B,OAuOR,SAAsBd,EAAMC,EAAOC,GAC5BD,GAAqB,WAAXA,GAA2C,oBAAbC,GACvCA,IAEJF,EAAMmC,QAAQ,CAAC,QAAU,GAAG,KAAI,WAC5BnC,EAAMmB,OAAO,0BAA0Bf,SACvCrB,IAAEyB,MAAMJ,SACLH,GAAqB,UAAXA,GAA0C,oBAAbC,GACtCA,IAGJtB,OApPAwD,CAAarD,IAAEyB,MAAMS,QAAQ,WAC7BlC,IAAEyB,MAAMS,QAAQ,aAAarB,YAAY,SAClC,KAEXb,IAAE,kBAAkB+B,GAAG,SAAQ,WAC3B,IAAId,EAAQjB,IAAEyB,MAAMS,QAAQ,UAQ5B,OAPAlB,EAAcC,GAEdY,YAAW,WACPb,EAAcC,KAChB,KAEFjB,IAAEyB,MAAMS,QAAQ,aAAarB,YAAY,SAClC,KAKXb,IAAE,6BAA6B+B,GAAG,SAAQ,WAEtC,IAAIuB,EAAYtD,IAAEyB,MAAM8B,KAAK,QACzBC,EAAYxD,IAAEyB,MAAMS,QAAQ,cAC5BuB,EAAaD,EAAU9C,SAAS,gBAGpC,GAAGV,IAAEsD,GAAWnD,OAAS,EAkBrB,OAhBGH,IAAEsD,GAAW5C,SAAS,mBACrBV,IAAEsD,GAAWI,QAAQ,KAAI,WACrB1D,IAAEyB,MAAMZ,YAAY,sBAGxBb,IAAEsD,GAAWK,UAAU,KAAI,WACvB3D,IAAEyB,MAAMV,SAAS,sBAIrB0C,GACAD,EAAUpC,KAAK,oBAAoBwC,IAAIN,GAAWI,QAAQ,KAAI,WAC1D1D,IAAEyB,MAAMZ,YAAY,uBAIrB,KAOfb,IAAE,6BAA6B+B,GAAG,UAAS,WACvCJ,OAKJ3B,IAAE,WAAW+B,GAAG,SAAQ,WACpB,IAAI8B,EAAM7D,IAAE,IAAIA,IAAEyB,MAAMX,KAAK,WAM7B,OALG+C,EAAIpB,GAAG,YACNoB,EAAI9C,SAAS,UAAUF,YAAY,QAEnCgD,EAAI9C,SAAS,QAAQF,YAAY,WAE9B,KAKXb,IAAE,mBAAmBwB,MAAK,SAASsC,GAC/B,IAAID,EAAM7D,IAAEyB,MACZsC,aAAY,WACRF,EAAI9C,SAAS,kBACT,IAAN+C,MAiOV,WAEI9D,IAAE,yBAAyBgE,OAAM,WAK7B,OAJAhE,IAAEyB,MAAMS,QAAQ,iBAAiBM,YAAY,qBAE7Cb,KAEO,KAGR3B,IAAE,4BAA4BG,OAAS,GACtCuB,EAAsB,SAG1B1B,IAAE,0BAA0BgE,OAAM,WAY9B,OAVGhE,IAAE,+BAA+BU,SAAS,2BACzCV,IAAE,mBAAmBa,YAAY,2BACjCa,EAAsB,UAEtB1B,IAAE,mBAAmBe,SAAS,2BAC9BW,EAAsB,UAG1BC,KAEO,KAGX3B,IAAE,yBAAyBgE,OAAM,WAE7B,IAAIC,EAAKjE,IAAEyB,MAAMW,OAAO,MACf6B,EAAG7B,OAAO,MAEhBhB,KAAK,SAASwC,IAAIK,GAAIpD,YAAY,aAIzCb,IAAE,oBAAoBgE,OAAM,SAASE,GACjCA,EAAMjC,kBAEN,IAAIgC,EAAKjE,IAAEyB,MAEP,GAAGwC,EAAGE,SAAS,MAAMhE,OAAS,GAAK8D,EAAGE,SAAS,UAAUhE,OAAS,GAAKH,IAAEyB,MAAMf,SAAS,cAAgB,EASpG,OARGuD,EAAGvD,SAAS,WACXuD,EAAGpD,YAAY,UACfoD,EAAG7C,KAAK,aAAaP,YAAY,WAEjCoD,EAAGlD,SAAS,UAEhBY,IAEG3B,IAAEyB,MAAMf,SAAS,cAAgB,KAQhDV,IAAE,cAAc+B,GAAG,SAAQ,WACvB/B,IAAEyB,MAAML,KAAK,SAASgD,WA1R1BC,MAGJrE,KAAE,WACEH,OAWJG,IAAEQ,QAAQqC,QAAO,WACb/C,IACAC,OAqSJuE,OAAOC,KAAO,SAASC,GACnB,IAAcC,EAAVF,EAAO,EACX,IAAKE,KAAOD,EACJA,EAAIE,eAAeD,IAAMF,IAEjC,OAAOA,GC7iBII,I,aCHf3E,IAAE4E,UAAUC,UAAU,WAAW,SAAUC,EAAOC,GAE9C,OAAOtD,KAAKuD,SAASD,IAAY,sBAAsBE,KAAKH,KAE3D,oEAEH9E,IAAE4E,UAAUC,UAAW,eAAe,SAAUC,EAAOC,GACrD,OAAOtD,KAAKuD,SAAUD,IAAa,YAAYE,KAAMH,KACpD,uBAEH9E,IAAE4E,UAAUC,UAAW,WAAW,SAAUC,EAAOC,GACjD,OAAOtD,KAAKuD,SAAUD,IAAa,UAAUE,KAAMH,KAClD,oD,oBCdQI,EAAQ,8BAERC,EAAa,kDCWX,M,qGATEC,EAAUC,GAGnB,OAFAC,QAAQC,IAAI,cAAcH,GAC1BE,QAAQC,IAAI,cAAcF,GACnBG,IAAMC,KAAN,UAAcP,EAAd,iBAAqC,CAACE,WAAUC,YAAU,Q,gDCmH1D,M,yGAlHP,OAAa,OADFK,aAAaC,QAAQ,Y,0CAKhC,IAAIC,EAAQF,aAAaC,QAAQ,SAEjC,OADcE,IAAWD,GACVE,S,4CAIf,IAAIF,EAAQF,aAAaC,QAAQ,SAEjC,OADcE,IAAWD,GACVG,M,sCAIf,IAAIH,EAAQF,aAAaC,QAAQ,SAEjC,OADcE,IAAWD,GACVI,KAAKC,SAASC,a,2CAI7B,IAAIC,EAAgBT,aAAaC,QAAQ,iBAGzC,OAFAL,QAAQC,IAAI,mBAAqBY,GACjCb,QAAQC,IAAI,cAAgBa,UAAUC,QACf,WAAlBF,GAA8BC,UAAUC,QAA8B,YAAlBF,IAAgCC,UAAUC,QAC/Ff,QAAQC,IAAI,SACL,IAEPD,QAAQC,IAAI,UACL,K,qDAOgBe,GAC3BhB,QAAQC,IAAI,oBAAsBe,GAClC,IAAIC,EAAiBb,aAAaC,QAAQ,YAE1C,GADAL,QAAQC,IAAI,oBAAoBgB,GACT,OAAnBA,GAA8C,KAAnBA,EAAuB,CAClD,IACIC,EADoBC,IAASC,IAAIC,QAAQJ,EAArB,UAAwCpB,IAC3ByB,SAASH,IAASI,IAAIC,MAE3D,OADAxB,QAAQC,IAAI,uBAAyBiB,GACjCA,IAAiBF,KACb9F,OAAOuG,QAAQ,wEAQvB,OAAO,I,4CAKX,IAAInB,EAAQF,aAAaC,QAAQ,SAC7BqB,EAAUnB,IAAWD,GACzBN,QAAQC,IAAIyB,GACU,IAAIC,KAAmB,IAAdD,EAAQE,KAAvC,IACIC,EAAU,IAAIF,KAIlB,OAHA3B,QAAQC,IAAI,IAAI0B,KAAmB,IAAdD,EAAQE,MAC7B5B,QAAQC,IAAI,cAAgB4B,GAExB,IAAIF,KAAmB,IAAdD,EAAQE,KAAc,IAAID,MACnC3B,QAAQC,IAAI,sBACL,IAEPD,QAAQC,IAAI,kBACL,K,4CAKX,IAAIK,EAAQF,aAAaC,QAAQ,SAC7BqB,EAAUnB,IAAWD,GAGzB,OAFAN,QAAQC,IAAI,aAAcyB,GAC1B1B,QAAQC,IAAI,wBAA0ByB,EAAQhB,KAAKoB,kBAC5CJ,EAAQhB,KAAKoB,mB,qCAIpB,IAAIxB,EAAQF,aAAaC,QAAQ,SAGjC,OAFAL,QAAQC,IAAI,WAAaK,GACzBnE,KAAK4F,yBACE7B,IAAM8B,IAAN,UAAapC,EAAb,YAAgC,IAAIqC,MAAK,SAAAC,GAC5ClC,QAAQC,IAAI,2BAA4BiC,MACzCC,OACC,SAAAC,GACIpC,QAAQC,IAAI,kBAAmBmC,Q,+CAMvC,IACIC,EAAkB,UADVjC,aAAaC,QAAQ,SAEjCL,QAAQC,IAAI,WAAaoC,GACzBnC,IAAMoC,aAAaC,QAAQC,KAEvB,SAACC,GAEG,OADAA,EAAOC,QAAQC,cAAgBN,EACxBI,S,wBCvGFG,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,IAEb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBANP,E,iFAUfvI,IAAE,UAAUyI,SAAS,CACjBC,OAAQ,GACRC,MAAO,CACHC,QAAS,CACLC,UAAU,GAEdxD,SAAU,CACNwD,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,+BAO1B,OACI,yBAAKiE,UAAU,SACX,0BAAMC,KAAK,QAAQC,GAAG,SAClB,qCACA,2BAAIzH,KAAK0G,MAAMgB,MAAMC,OAAOf,SAFhC,cAGe,2BAAOgB,KAAK,OAAOH,GAAG,UAAUD,KAAK,YAAY,6BAAS,6BAHzE,cAIe,2BAAOI,KAAK,WAAWH,GAAG,WAAWD,KAAK,aAAa,6BAAS,6BAC3E,4BAAQD,UAAU,kBAAkBK,KAAK,SAASC,QAAS7H,KAAK6G,cAAhE,SAA4F,6BAAS,6BACrG,kBAAC,SAAD,KAAQ,4BAAQU,UAAU,iBAAiBK,KAAK,SAASC,QAAS7H,KAAK+G,gBAA/D,mBAAuG,6BAAS,8BACxH,6BAAK,4BAAK/G,KAAK2G,MAAMC,c,qCAMrB,IAAD,OACPjD,EAAWpF,IAAE,YAAYuJ,MACzBlE,EAAWrF,IAAE,aAAauJ,MAC9B,GAAIvJ,IAAE,UAAUwJ,QAGZ,GAFAlE,QAAQC,IAAI,6BAA+BkE,EAAsBC,kBAE7DtD,UAAUC,OAEVsD,EAAaC,aAAaxE,EAAUC,GAC/BkC,MAAK,SAAAC,GACFlC,QAAQC,IAAI,eACZ,IAAIyB,EAAUnB,IAAW2B,EAAS1G,KAAK8E,OACvCN,QAAQC,IAAI,gBAAkBiC,EAAS1G,KAAK+I,QAI5CvE,QAAQC,IAAI,cAAeyB,GACtByC,EAAsBK,+BAA+B9C,EAAQjB,KAc9DL,aAAaqE,QAAQ,QAASvC,EAAS1G,KAAK8E,OAC5CF,aAAaqE,QAAQ,gBAAiB,UACtCrE,aAAaqE,QAAQ,SAAUtD,IAASC,IAAIsD,QAAShD,EAAQlB,OAAQc,WAAtC,UAAqDzB,KACpFO,aAAaqE,QAAQ,WAAYtD,IAASC,IAAIsD,QAAShD,EAAQjB,IAAKa,WAAnC,UAAkDzB,KACnFO,aAAaqE,QAAQ,WAAYtD,IAASC,IAAIsD,QAAShD,EAAQhB,KAAKX,SAAUuB,WAA7C,UAA4DzB,KAC7FO,aAAaqE,QAAQ,aAActD,IAASC,IAAIsD,QAAShD,EAAQhB,KAAKC,SAASC,WAAYU,WAAxD,UAAuEzB,KAI1GsE,EAAsBpC,yBAEtB,EAAKc,MAAM8B,QAAQC,KAAnB,eAGPzC,OACG,SAAAC,GAEI,GAAsB,MAAlBA,EAAMF,UAA8C,MAA1BE,EAAMF,SAASqC,OACzC,OAAQnC,EAAMF,SAAS1G,MACnB,IAAK,mBACD,EAAKqJ,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,OAE5B,EAAKqH,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,yBACVhC,MAAO,CAAEhD,SAAUA,KAEvB,MACJ,QACI,EAAK+E,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,YAKpC,OAAQ4G,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,mBAS3C,GAAIoB,EAAsBC,iBAAkB,CACxC,IACIW,EADgB5D,IAASC,IAAIC,QAAQjB,aAAaC,QAAQ,YAAYiB,WAAtD,UAAqEzB,IACnDyB,SAASH,IAASI,IAAIC,MAGxDwD,EADgB7D,IAASC,IAAIC,QAAQjB,aAAaC,QAAQ,YAAYiB,WAAtD,UAAqEzB,IACnDyB,SAASH,IAASI,IAAIC,MAExD1B,IAAaiF,EACbE,IAAOC,QAAQnF,EAAUiF,EAAmB,SAAUG,EAAKC,GACnDD,GACAnF,QAAQC,IAAI,WAAakF,GAEzBC,GACAhF,aAAaqE,QAAQ,gBAAiB,WACtCzE,QAAQC,IAAI,0BACZ9D,KAAK0G,MAAM8B,QAAQC,KAAnB,cAEAzI,KAAK0I,SAAS,CAAE9B,QAAS,oBACzB/C,QAAQC,IAAI,2BAElBgD,KAAK9G,QAEPA,KAAK0I,SAAS,CAAE9B,QAAS,4BACzB/C,QAAQC,IAAI,+BAgBhBoF,MAAM,gD,uCAOlBlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,uB,GA9KoCU,a,SCU7BC,E,YAnBX,WAAY1C,GAAO,2BACf,0CAAMA,I,sEAKN,OACI,oCACI,yCACA,2BAAI1G,KAAK0G,MAAMgB,MAAMC,OAAOf,c,GAXbuC,aCwEhB,G,2BAAA,I,0GApEP,OAAOpF,IAAM8B,IAAN,UAAapC,EAAb,wBAA4C,M,oCAInD,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,oBAAwC,M,gDAI/C,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,gCAAoD,M,qCAI3D,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,qBAAyC,M,iCAGzC4F,GAIP,OAHAxF,QAAQC,IAAIuF,GAGLtF,IAAMuF,IAAN,UAAa7F,EAAb,oBAAwC4F,EAAM,M,iCAG9CA,GAIP,OAHAxF,QAAQC,IAAIuF,GAGLtF,IAAMuF,IAAN,UAAa7F,EAAb,oBAAwC4F,EAAM,M,oCAKrD,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,oBAAwC,M,sCAGnCY,GACZ,OAAON,IAAM8B,IAAN,UAAapC,EAAb,gCAA4CY,GAAU,M,+BAGxDgF,GACL,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,kBAAsC4F,EAAM,M,+BAI9CA,GAIL,OAHAxF,QAAQC,IAAIuF,GAGLtF,IAAMuF,IAAN,UAAa7F,EAAb,kBAAsC4F,EAAM,M,oCAGzChF,EAAQ8C,GAClB,OAAOpD,IAAMuF,IAAN,UAAa7F,EAAb,8BAA0CY,EAA1C,YAAoD8C,GAAW,M,4CAGpDxD,EAAU4F,EAAaC,GAEzC,OADA3F,QAAQC,IAAI,kBAAkBH,GACvBI,IAAMC,KAAN,UAAcP,EAAd,+BAAoD,CAAEE,WAAU4F,cAAaC,eAAe,M,qCAGxF7F,EAAU4F,EAAaC,GAElC,OADA3F,QAAQC,IAAI,kBAAkBH,GACvBI,IAAMC,KAAN,UAAcP,EAAd,wBAA6C,CAAEE,WAAU4F,cAAaC,eAAe,M,qCAEjF7F,GACX,OAAOI,IAAM8B,IAAN,UAAapC,EAAb,+BAA2CE,GAAY,Q,OC7DjD8F,E,YAEjB,WAAY/C,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTlC,WAAYuD,EAAsB0B,gBAClCC,OAAQ,GACRC,UAAW,GACXC,MAAO,IAEX,EAAKC,cAAgB,EAAKA,cAAchD,KAAnB,gBACrB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBATN,E,iFAYE,IAAD,OAChBjD,QAAQC,IAAI,WAAWkE,EAAsBgC,sBACxChC,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBACtBqE,EAAYC,eACPpE,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACViB,OAAQ5D,EAAS1G,UAEtB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAMrDqD,EAAYE,kBACPrE,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACVkB,UAAW7D,EAAS1G,UAEzB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAMrDqD,EAAYG,cACPtE,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACVmB,MAAO9D,EAAS1G,UAErB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAOrDrI,IAAE,aAAayI,SAAS,CACpBC,OAAQ,GACRC,MAAO,CACHC,QAAS,CACLC,UAAU,EACViD,OAAO,GAEXC,YAAa,CACTlD,UAAU,EACVmD,QAAQ,GAEZ9F,WAAY,CACR2C,UAAU,GAEdoD,OAAQ,CACJpD,UAAU,GAEdzD,SAAU,CACNyD,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,+BAMpB,IAAD,OACGqG,EAAW3J,KAAK2G,MAAhBgD,OACAC,EAAc5J,KAAK2G,MAAnBiD,UACAC,EAAU7J,KAAK2G,MAAfkD,MAEJY,EAAYd,EAAOjL,OAAS,GACzBiL,EAAOe,KAAI,SAACC,EAAMC,GACjB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKE,SACtB,WACE,OAAQ,EAAKlE,MAAMlC,YACf,KAAK,EAAG,OAAgC,OAAxBkG,EAAKG,MAAMC,UAA6C,KAAxBJ,EAAKG,MAAMC,SAAkBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMG,UAA6C,KAAxBN,EAAKG,MAAMG,SAAkBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMI,UAA6C,KAAxBP,EAAKG,MAAMI,SAAkBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC9G,QAAS,OAAOL,EAAKG,MAAME,UALjC,MAUXhL,MACHmL,EAAgBvB,EAAUlL,OAAS,GAChCkL,EAAUc,KAAI,SAACC,EAAMC,GACpB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKlG,YACvBkG,EAAKS,gBAGfpL,MACHqL,EAAWxB,EAAMnL,OAAS,GACvBmL,EAAMa,KAAI,SAACC,EAAMC,GAChB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKH,QACtB,WACE,OAAQ,EAAK7D,MAAMlC,YACf,KAAK,EAAG,OAAgC,OAAxBkG,EAAKG,MAAMC,UAA6C,KAAxBJ,EAAKG,MAAMC,SAAkBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMG,UAA6C,KAAxBN,EAAKG,MAAMG,SAAkBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMI,UAA6C,KAAxBP,EAAKG,MAAMI,SAAkBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC9G,QAAS,OAAOL,EAAKG,MAAME,UALjC,MAUXhL,MACP,OACI,yBAAKuH,UAAU,WACH,yBAAKA,UAAU,qBAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BAA2B+D,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,oBAC3E,6BAAK,4BAAKxL,KAAK2G,MAAMC,UACjB,0BAAMY,KAAK,WAAWC,GAAG,YACrB,yBAAKF,UAAU,sBAAsB+D,MAAO,CAAEG,WAAY,cACtD,yBAAKlE,UAAU,iBAAf,IAAgC,4BC9K9C,mBD8Kc,KACA,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,wCAAjB,ICtK/B,SDuK+B,yBAAKA,UAAU,sBACX,4BAAQA,UAAU,sBAAsBE,GAAG,UAAUD,KAAK,WACtD,4BAAQnE,MAAM,IAAd,sBACCoH,KAGP,6BACN,yBAAKlD,UAAU,cACX,2BAAOA,UAAU,wCCpL7C,WDoL4B,KACA,yBAAKA,UAAU,sBAAf,IAAqC,2BAAOA,UAAU,eAAeK,KAAK,OAAOH,GAAG,WAAWD,KAAK,eAElG,6BACN,yBAAKD,UAAU,cACX,2BAAOA,UAAU,wCCxL7C,WDwL4B,KACA,yBAAKA,UAAU,sBACX,2BAAOA,UAAU,eAAeK,KAAK,OAAOH,GAAG,UAAUD,KAAK,cAEhE,6BACN,yBAAKD,UAAU,cACX,2BAAOA,UAAU,wCC7L7C,YD8L4B,yBAAKA,UAAU,sBACX,2BAAOA,UAAU,eAAeK,KAAK,OAAOH,GAAG,cAAcD,KAAK,cAAckE,UAAU,KAAKC,UAAU,QAE3G,6BACN,yBAAKpE,UAAU,cACX,2BAAOA,UAAU,wCC7LjD,OD6LgC,KAAuE,yBAAKA,UAAU,sBAAf,IAAqC,4BAAQA,UAAU,sBAAsBE,GAAG,SAASD,KAAK,UACjK,4BAAQnE,MAAM,IAAd,sBACCgI,KAEH,6BAON,yBAAK9D,UAAU,cACX,2BAAOA,UAAU,wCCrMnC,qBDqMkB,KADJ,IAC0F,yBAAKA,UAAU,sBAAqB,4BAAQA,UAAU,sBAAsBE,GAAG,aAAaD,KAAK,cACnL,4BAAQnE,MAAM,IAAd,sBACC8H,KAEH,6BACN,yBAAK5D,UAAU,cACX,yBAAKA,UAAU,sBAAqB,4BAAQA,UAAU,kBAAkBK,KAAK,SAASC,QAAS7H,KAAK8J,eC1M9H,UD2M8B,4BAAQvC,UAAU,kBAAkBK,KAAK,SAASC,QAAS7H,KAAK+J,eC1M9F,qB,sCDmNL,IAAD,OAEZ,GADAlG,QAAQC,IAAIvF,IAAE,eAAeuJ,OACzBnD,UAAUC,OAEV,GADAf,QAAQC,IAAI,WAAWkE,EAAsBgC,sBACzChC,EAAsBgC,qBAAsB,CAC5C,IAAIX,EAAO,CACP1F,SAAUpF,IAAE,aAAauJ,MACzBX,QAAS5I,IAAE,YAAYuJ,MACvBwC,YAAa/L,IAAE,gBAAgBuJ,MAC/B8D,MAAO,CACHf,QAAStM,IAAE,YAAYuJ,OAE3B+D,KAAM,CACFrB,OAAQjM,IAAE,WAAWuJ,OAEzBtD,SAAU,CACNC,WAAYlG,IAAE,eAAeuJ,OAEjCgE,WAAYvN,IAAE,eAAeuJ,OAE7BvJ,IAAE,aAAawJ,SACfkC,EAAY8B,WAAW1C,GAClBvD,MAAK,SAAAC,GACF,EAAKW,MAAM8B,QAAQC,KAAnB,oBAAqC1C,EAAS1G,KAAKuH,aAEtDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,mBAQzDsC,MAAM,4EAGVA,MAAM,yB,sCAIVlJ,KAAK0G,MAAM8B,QAAQC,KAAK,iC,GAhRcU,aEFzB6C,E,YAEjB,WAAYtF,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTsF,SAAU,IAEd,EAAKC,SAAW,EAAKA,SAASpF,KAAd,gBAChB,EAAKqF,cAAgB,EAAKA,cAAcrF,KAAnB,gBACrB,EAAKiF,WAAa,EAAKA,WAAWjF,KAAhB,gBAPH,E,iFAUE,IAAD,OACXkB,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBACtBqE,EAAYmC,cACPtG,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACVuD,SAAUlG,EAAS1G,UAG1B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,gB,+BAO/C,IAAD,OACL,OACI,yBAAKW,UAAU,YACX,2BAAIvH,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC5B,4BDnDe,aCoDf,yBAAKW,UAAU,aACX,4BAAQA,UAAU,cAAcK,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAK+L,YDtDnF,mBCsDwH,6BAAM,6BACxI,yBAAKxE,UAAU,OACX,yBAAKA,UAAU,yBACf,2BAAOA,UAAU,yBAAyBiE,OAAO,IAAIc,MAAM,UACvD,+BACI,4BACI,4BDjDf,SCkDe,4BDvDZ,YCwDY,4BDvDZ,YCwDY,4BDvDZ,YCwDY,4BDlDhB,QCmDgB,4BD/CF,sBCgDE,4BDlDL,mBCmDK,4BDlDL,mBCmDK,4BDrDd,UCsDc,4BD/CZ,UCgDY,4BD/CD,oBCkDP,+BAEQtM,KAAK2G,MAAMsF,SAASvB,KAChB,SAAAnG,GAAI,OAEA,wBAAIvB,IAAKuB,EAAKF,OAAQwD,QAAS,kBAAM,EAAKqE,SAAS3H,KAC/C,4BACKA,EAAKqH,MAAMd,MAAME,UAEtB,4BAAKzG,EAAKZ,UACV,4BAAKY,EAAK4C,SACV,4BAAK5C,EAAK+F,aACV,4BAAK/F,EAAKsH,KAAKf,MAAME,UACrB,4BAAKzG,EAAKC,SAAS4G,cACnB,4BAAK7G,EAAKgI,eACV,4BAAKhI,EAAKiI,eACV,4BAAgC,SAA3BjI,EAAKkI,OAAOtH,WAAwB,SAAW,YAEpD,4BAAI,4BAAQyC,KAAK,SAASC,QAAS,kBAAM,EAAKqE,SAAS3H,KDrE/E,WCsEwB,4BAAI,4BAAQqD,KAAK,SAASC,QAAS,SAACtH,GAAQA,EAAEC,kBAAmB,EAAK2L,cAAc5H,EAAKF,OAAQE,EAAK4C,WDrEnH,8B,+BCgFtB5C,GACLvE,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,YACVhC,MAAO,CAAEpC,KAAMA,O,oCAGTF,EAAQ8C,GAAU,IAAD,OACvBxC,UAAUC,OACVqF,EAAYkC,cAAc9H,EAAQ8C,GAC7BrB,MAAK,SAAAC,GACF,EAAKW,MAAM8B,QAAQC,KAAnB,oBAAqC1C,EAAS1G,KAAKuH,UACnD7H,OAAO2N,SAASC,YAEnB3G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAOrDsC,MAAM,yB,mCAINvE,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,YAEAS,MAAM,2B,GArI6BC,aCE1ByD,E,YAGjB,WAAYlG,GAAQ,IAAD,8BACf,4CAAMA,KAHVmG,YAAa,EAIT,EAAKlG,MAAQ,CACTlC,WAAYuD,EAAsB0B,gBAClCC,OAAQ,GACRC,UAAW,GACXC,MAAO,GACPtF,KAAM,GACN,eAAe,GAEnB,EAAKuI,cAAgB,EAAKA,cAAchG,KAAnB,gBACrB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBACrB,EAAKiG,WAAa,EAAKA,WAAWjG,KAAhB,gBAZH,E,iFAgBE,IAAD,OACXkB,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBACtB5F,KAAK0I,SAAS,CACVnE,KAAMvE,KAAK0G,MAAMgG,SAAS/F,MAAMpC,OAEpC0F,EAAYC,eACPpE,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACViB,OAAQ5D,EAAS1G,UAEtB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAMrDqD,EAAYE,kBACPrE,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACVkB,UAAW7D,EAAS1G,UAEzB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAMrDqD,EAAYG,cACPtE,MAAK,SAAAC,GACF,EAAK2C,SAAS,CACVmB,MAAO9D,EAAS1G,UAErB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAOrDrI,IAAE,aAAayI,SAAS,CACpBC,OAAQ,GACRC,MAAO,CACH,eAAgB,CACZE,UAAU,EACViD,OAAO,GAEX,mBAAoB,CAChBjD,UAAU,EACVmD,QAAQ,GAEZ,SAAY,CACRnD,UAAU,GAEd,2BAA4B,CACxBA,UAAU,GAEd,mBAAoB,CAChBA,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,iCAKnBb,GAAQ,IACT8B,EAASvE,KAAK2G,MAAdpC,KACoB,uBAAtB9B,EAAMuK,OAAOxF,KACbjD,EAAKqH,MAAMf,QAAUpI,EAAMuK,OAAO3J,MAEP,uBAAtBZ,EAAMuK,OAAOxF,KAClBjD,EAAKqH,MAAMf,QAAUpI,EAAMuK,OAAO3J,MAEP,qBAAtBZ,EAAMuK,OAAOxF,KAClBjD,EAAKsH,KAAKrB,OAAS/H,EAAMuK,OAAO3J,MAEL,6BAAtBZ,EAAMuK,OAAOxF,KAClBjD,EAAKC,SAASC,WAAahC,EAAMuK,OAAO3J,MAEb,iBAAtBZ,EAAMuK,OAAOxF,KAClBjD,EAAK4C,QAAU1E,EAAMuK,OAAO3J,MAED,kBAAtBZ,EAAMuK,OAAOxF,KAClBjD,EAAKZ,SAAWlB,EAAMuK,OAAO3J,MAEF,qBAAtBZ,EAAMuK,OAAOxF,KAClBjD,EAAK+F,YAAc7H,EAAMuK,OAAO3J,MAEL,gBAAtBZ,EAAMuK,OAAOxF,OAClBjD,EAAKkI,OAA6B,iBAApBhK,EAAMuK,OAAOvF,IAG/BzH,KAAK0I,SAAS,CACVnE,SACD,iB,+BAMG,IAAD,OACGoF,EAAW3J,KAAK2G,MAAhBgD,OACAC,EAAc5J,KAAK2G,MAAnBiD,UACAC,EAAU7J,KAAK2G,MAAfkD,MAGJY,GAFazK,KAAK2G,MAAdpC,KAEQoF,EAAOjL,OAAS,GACzBiL,EAAOe,KAAI,SAACC,EAAMC,GACjB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKE,SACtB,WACE,OAAQ,EAAKlE,MAAMlC,YACf,KAAK,EAAG,OAAgC,OAAxBkG,EAAKG,MAAMC,UAA6C,KAAxBJ,EAAKG,MAAMC,SAAkBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMG,UAA6C,KAAxBN,EAAKG,MAAMG,SAAkBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMI,UAA6C,KAAxBP,EAAKG,MAAMI,SAAkBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC9G,QAAS,OAAOL,EAAKG,MAAME,UALjC,MAUXhL,OACHmL,EAAgBvB,EAAUlL,OAAS,GAChCkL,EAAUc,KAAI,SAACC,EAAMC,GACpB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKlG,YACvBkG,EAAKS,gBAGfpL,MACHqL,EAAWxB,EAAMnL,OAAS,GACvBmL,EAAMa,KAAI,SAACC,EAAMC,GAChB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKH,QACtB,WACE,OAAQ,EAAK7D,MAAMlC,YACf,KAAK,EAAG,OAAgC,OAAxBkG,EAAKG,MAAMC,UAA6C,KAAxBJ,EAAKG,MAAMC,SAAkBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMG,UAA6C,KAAxBN,EAAKG,MAAMG,SAAkBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC9G,KAAK,EAAG,OAAgC,OAAxBL,EAAKG,MAAMI,UAA6C,KAAxBP,EAAKG,MAAMI,SAAkBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC9G,QAAS,OAAOL,EAAKG,MAAME,UALjC,MAUXhL,MACP,OACI,yBAAKuH,UAAU,WACX,0BAAMC,KAAK,WAAWC,GAAG,YACrB,4BFhNW,iBEgNWzH,KAAK2G,MAAMpC,KAAKF,QFvMrC,QEsML,MAEc,4BAAQoD,GAAG,qBAAqBD,KAAK,qBAAqBnE,MAAOrD,KAAK2G,MAAMpC,KAAKqH,MAAQ5L,KAAK2G,MAAMpC,KAAKqH,MAAMf,QAAU,GAAIoC,SAAUjN,KAAK+M,YAClJ,4BAAQ1J,MAAM,IAAd,sBACCoH,GACI,6BAAS,6BFhNd,WE2MR,MAMiB,2BAAO7C,KAAK,OAAOH,GAAG,gBAAgBD,KAAK,gBAAgBnE,MAAOrD,KAAK2G,MAAMpC,KAAKZ,SAAUsJ,SAAUjN,KAAK+M,aAAc,6BAAS,6BFhN3I,WE0MR,MAOiB,2BAAOnF,KAAK,OAAOH,GAAG,eAAeD,KAAK,eAAenE,MAAOrD,KAAK2G,MAAMpC,KAAK4C,QAAS8F,SAAUjN,KAAK+M,aAAc,6BAAS,6BFhNxI,WEyMR,MAQiB,2BAAOnF,KAAK,OAAOH,GAAG,mBAAmBD,KAAK,mBAAmBnE,MAAOrD,KAAK2G,MAAMpC,KAAK+F,YAAa2C,SAAUjN,KAAK+M,WAAYrB,UAAU,KAAKC,UAAU,MAAM,6BAAS,6BF3MrL,OEmMJ,MASa,4BAAQlE,GAAG,mBAAmBD,KAAK,mBAAmBnE,MAAOrD,KAAK2G,MAAMpC,KAAKsH,KAAO7L,KAAK2G,MAAMpC,KAAKsH,KAAKrB,OAAS,GAAIyC,SAAUjN,KAAK+M,YAC1I,4BAAQ1J,MAAM,IAAd,sBACCgI,GACI,6BAAS,6BF3MJ,qBE+LlB,MAa2B,4BAAQ5D,GAAG,2BAA2BD,KAAK,2BAA2BnE,MAAOrD,KAAK2G,MAAMpC,KAAKC,SAAWxE,KAAK2G,MAAMpC,KAAKC,SAASC,WAAa,GAAIwI,SAAUjN,KAAK+M,YACpL,4BAAQ1J,MAAM,IAAd,sBACC8H,GACI,6BAAS,6BFlNhB,SEkMN,IAkBI,2BAAOvD,KAAK,QAAQH,GAAG,eAAeD,KAAK,cAAcnE,OAAO,EAAM6J,SAAoC,IAA3BlN,KAAK2G,MAAMpC,KAAKkI,OAAiBQ,SAAUjN,KAAK+M,aAlBnI,UAmBI,2BAAOnF,KAAK,QAAQH,GAAG,eAAeD,KAAK,cAAcnE,OAAO,EAAO6J,SAAoC,IAA3BlN,KAAK2G,MAAMpC,KAAKkI,OAAkBQ,SAAUjN,KAAK+M,aAnBrI,YAoBI,6BAAS,6BAET,4BAAQnF,KAAK,SAASC,QAAS7H,KAAK8M,eFlN9B,UEmNN,4BAAQlF,KAAK,SAASC,QAAS7H,KAAK+J,eFpN9B,UEoNkE,6BAAS,6BACjF,6BAAK,4BAAK/J,KAAK2G,MAAMC,c,sCAKpB,IAAD,OACZ,GAAIjC,UAAUC,OACV,GAAIoD,EAAsBgC,qBAAsB,CAC5C,IAAIX,EAAOrJ,KAAK2G,MAAMpC,KAClBhG,IAAE,aAAawJ,SACfkC,EAAYiC,SAAS7C,GAChBvD,MAAK,SAAAC,GACF,EAAKW,MAAM8B,QAAQC,KAAnB,oBAAqC1C,EAAS1G,KAAKuH,aAEtDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,mBAQzDsC,MAAM,4EAGVA,MAAM,yB,sCAIVlJ,KAAK0G,MAAM8B,QAAQC,KAAK,iC,GAvQeU,aCE1BgE,E,YAEjB,WAAYzG,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,IAEb,EAAKkD,cAAgB,EAAKA,cAAchD,KAAnB,gBACrB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBANN,E,iFAUVkB,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBACtBrH,IAAE4E,UAAUC,UAAU,iBAAiB,WACnC,OAAI7E,IAAE,gBAAgBuJ,QAAUvJ,IAAE,uBAAuBuJ,QAK1D,oCAEHvJ,IAAE4E,UAAUC,UAAU,oBAAoB,WACtC,OAAI7E,IAAE,gBAAgBuJ,QAAUvJ,IAAE,gBAAgBuJ,OAC9CjE,QAAQC,IAAI,SACL,IAEPD,QAAQC,IAAI,cACL,KAEZ,mDAkBHvF,IAAE,UAAUyI,SAAS,CACjBC,OAAQ,GACRC,MAAO,CACHqC,YAAa,CACTnC,UAAU,GAEdoC,YAAa,CACTpC,UAAU,EACVgG,kBAAiB,GAErBC,mBAAoB,CAChBjG,UAAU,EACVkG,eAAe,IAGvBjG,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,+BAO1B,OACI,yBAAKiE,UAAU,SACX,0BAAMC,KAAK,QAAQC,GAAG,SAClB,+CADJ,kBAEmB,2BAAOG,KAAK,WAAWH,GAAG,cAAcD,KAAK,gBAAgB,6BAAS,6BAFzF,kBAGmB,2BAAOI,KAAK,WAAWH,GAAG,cAAcD,KAAK,gBAAgB,6BAAS,6BAHzF,0BAI2B,2BAAOI,KAAK,WAAWH,GAAG,qBAAqBD,KAAK,uBAAuB,6BAAS,6BAC3G,kBAAC,SAAD,KAAQ,4BAAQI,KAAK,SAASC,QAAS7H,KAAK8J,eAApC,WACR,kBAAC,SAAD,KAAQ,4BAAQlC,KAAK,SAASC,QAAS7H,KAAK+J,eAApC,UAAkE,6BAAS,8BACnF,6BAAK,4BAAK/J,KAAK2G,MAAMC,c,sCAMpB,IAAD,OACRrI,IAAE,UAAUwJ,UACRpD,UAAUC,OACVqF,EAAYsD,eAAevF,EAAsBwF,sBAAsBjP,IAAE,gBAAgBuJ,MAAMvJ,IAAE,gBAAgBuJ,OAC5GhC,MAAK,SAAAC,GACFlC,QAAQC,IAAIiC,EAAS0H,YACrBxJ,aAAaqE,QAAQ,WAAYtD,IAASC,IAAIsD,QAASxC,EAAS1G,KAAKA,KAAM8F,WAA1C,UAAyDzB,KAC1F,EAAKgD,MAAM8B,QAAQC,KAAnB,mBAAoC1C,EAAS1G,KAAKuH,aAErDZ,OACG,SAAAC,GAGI,OAFApC,QAAQC,IAAImC,EAAMW,SAClB/C,QAAQC,IAAImC,EAAMyH,MACVzH,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAOrDsC,MAAM,iD,sCAMdlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,iC,GA3H6CU,aCLhCwE,E,YAEjB,WAAYjH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTkD,MAAO,GACPjD,QAAS,IAEb,EAAKgH,SAAW,EAAKA,SAAS9G,KAAd,gBAChB,EAAK+G,WAAa,EAAKA,WAAW/G,KAAhB,gBAPH,E,iFAUE,IAAD,OACXkB,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBACtBqE,EAAYG,cACPtE,MAAK,SAAAC,GACFlC,QAAQC,IAAI,cAAgBiC,EAAS1G,MACrC,EAAKqJ,SAAS,CACVmB,MAAO9D,EAAS1G,UAErB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,+BAQjC,IAAD,OACL,OACI,yBAAKW,UAAU,YACX,2BAAIvH,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC5B,4BAAK5G,KAAK2G,MAAMC,SAChB,6BJjDe,aIkDf,4BAAQW,UAAU,cAAcK,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAK6N,YJnD/E,gBImD2H,6BAAM,6BAC/I,2BAAOrC,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4BJzBL,WI0BK,4BJ9BC,sBI+BD,4BJ5BC,yBI6BD,4BJ9BC,qBI+BD,4BJhCC,wBImCT,+BAEQtM,KAAK2G,MAAMkD,MAAMa,KAAI,SAAAmB,GAAI,OACrB,wBAAI7I,IAAK6I,EAAKrB,OAAQ3C,QAAS,kBAAM,EAAK+F,SAAS/B,KAC/C,4BAAKA,EAAKrB,QACV,4BAAKqB,EAAKf,MAAME,UAChB,4BAAKa,EAAKf,MAAMC,UAChB,4BAAKc,EAAKf,MAAMG,UAChB,4BAAKY,EAAKf,MAAMI,gBAKpC,gC,+BAIHW,GACL7L,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,YACVhC,MAAO,CAAEkF,KAAMA,O,mCAIflH,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,YAEAS,MAAM,2B,GAtF6BC,aCK1B2E,E,YAEjB,WAAYpH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToH,kBAAmB,GACnBlE,MAAO,GACPjD,QAAS,GACTnC,WAAYuD,EAAsB0B,iBAEtC,EAAKI,cAAgB,EAAKA,cAAchD,KAAnB,gBACrB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBATN,E,iFAkDE,IAAD,OACXkB,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBACtBqE,EAAY+D,0BACPlI,MAAK,SAAAC,GACFlC,QAAQC,IAAI,wBAAyBiC,EAAS1G,MAC9C,EAAKqJ,SAAS,CACVqF,kBAAmBhI,EAAS1G,UAEjC2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAMrDqD,EAAYG,cACPtE,MAAK,SAAAC,GACFlC,QAAQC,IAAI,eAAgBiC,EAAS1G,MACrC,EAAKqJ,SAAS,CACVmB,MAAO9D,EAAS1G,UAErB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cASrDrI,IAAE,aAAayI,SAAS,CACpBC,OAAQ,GACRC,MAAO,CACH,sBAAuB,CACnBE,UAAU,EAEV6G,UAAW,KAGf,sBAAuB,CAEnBA,UAAW,KAEf,sBAAuB,CAEnBA,UAAW,KAEf,sBAAuB,CAEnBA,UAAW,KAEf,yBAA0B,CACtB7G,UAAU,GAEd,qBAAsB,CAClBA,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,+BAMpB,IAAD,OACGyK,EAAsB/N,KAAK2G,MAA3BoH,kBACAlE,EAAU7J,KAAK2G,MAAfkD,MAEJqE,EAAwBH,EAAkBrP,OAAS,GAChDqP,EAAkBrD,KAAI,SAACC,EAAMC,GAC5B,OACI,oCACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKwD,oBACtB,WACE,OAAQ,EAAKxH,MAAMlC,YACf,KAAK,EAAG,OAA+B,MAAvBkG,EAAKG,MAAMC,UAA2C,IAAvBJ,EAAKG,MAAMC,SAAiBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMG,UAA2C,IAAvBN,EAAKG,MAAMG,SAAiBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMI,UAA2C,IAAvBP,EAAKG,MAAMI,SAAiBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC5G,QAAS,OAAOL,EAAKG,MAAME,UALjC,OAWfhL,MACHqL,EAAWxB,EAAMnL,OAAS,GACvBmL,EAAMa,KAAI,SAACC,EAAMC,GAChB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKH,QACtB,WACE,OAAQ,EAAK7D,MAAMlC,YACf,KAAK,EAAG,OAA+B,MAAvBkG,EAAKG,MAAMC,UAA2C,IAAvBJ,EAAKG,MAAMC,SAAiBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMG,UAA2C,IAAvBN,EAAKG,MAAMG,SAAiBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMI,UAA2C,IAAvBP,EAAKG,MAAMI,SAAiBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC5G,QAAS,OAAOL,EAAKG,MAAME,UALjC,MAUXhL,MACP,OACI,yBAAKoO,MAAM,8DACP,yBAAKA,MAAM,gBACP,wBAAIA,MAAM,cACN,4BAAI,uBAAGC,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,KAAR,UACJ,4BAAI,uBAAGA,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,KAAR,cAER,yBAAKD,MAAM,qBACP,6BAAK,4BAAKpO,KAAK2G,MAAMC,UACrB,yBAAKwH,MAAM,OACP,yBAAKA,MAAM,aAEP,0BAAM5G,KAAK,WAAWC,GAAG,WAAW2G,MAAM,mBACtC,yBAAKA,MAAM,uBACP,yBAAKA,MAAM,iBACP,wBAAIA,MAAM,eLzMxB,iBK2MU,yBAAKA,MAAM,cACP,yBAAKA,MAAM,cACP,2BAAOA,MAAM,wCLnLhC,sBKoLmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsB2G,MAAM,eAAe5G,KAAK,0BAI9E,yBAAK4G,MAAM,cACP,2BAAOA,MAAM,wCLvLhC,yBKwLmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsBD,KAAK,sBAAsB4G,MAAM,mBAIrF,yBAAKA,MAAM,cACP,2BAAOA,MAAM,wCL/LhC,qBKgMmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsBD,KAAK,sBAAsB4G,MAAM,mBAIrF,yBAAKA,MAAM,cACP,2BAAOA,MAAM,wCLvMhC,sBKwMmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsBD,KAAK,sBAAsB4G,MAAM,mBAKrF,yBAAKA,MAAM,cACP,2BAAOA,MAAM,wCL3M5B,qBK4Me,yBAAKA,MAAM,sBACP,4BAAQ3G,GAAG,yBAAyB2G,MAAM,sBAAsBE,mBAAiB,OAAOC,mBAAiB,OAAO/G,KAAK,yBAAyBgH,UAAU,GACpJ,4BAAQnL,MAAM,IAAd,sBACC6K,KAMb,yBAAKE,MAAM,cACP,2BAAOA,MAAM,wCLrN9B,mBKsNiB,yBAAKA,MAAM,sBACP,4BAAQ3G,GAAG,qBAAqBF,UAAU,sBAAsB+G,mBAAiB,OAAOC,mBAAiB,OAAO/G,KAAK,qBAAqBgH,UAAU,EAAMvB,SAAUjN,KAAK+M,YACrK,4BAAQ1J,MAAM,IAAd,sBACCgI,KAKb,4BAAQzD,KAAK,SAASL,UAAU,kBAAkBM,QAAS7H,KAAK8J,eL9OlF,UK+OkB,4BAAQlC,KAAK,SAASL,UAAU,iBAAiBM,QAAS7H,KAAK+J,eL9OjF,UK8O4H,6BAAS,8BAGvH,yBAAKqE,MAAM,gBACP,yBAAKA,MAAM,yB,sCAalC,IAAD,OAEZ,GADAvK,QAAQC,IAAIvF,IAAE,6BAA6BuJ,OACvCnD,UAAUC,OACV,GAAIoD,EAAsBgC,sBACtB,GAAIzL,IAAE,aAAawJ,QAAS,CACxB,IAAIsB,EAAO,CACPyB,MAAO,CACHE,SAAUzM,IAAE,4BAA4BuJ,MACxCiD,SAAUxM,IAAE,4BAA4BuJ,MACxCmD,SAAU1M,IAAE,4BAA4BuJ,MACxCoD,SAAU3M,IAAE,4BAA4BuJ,OAE5CiG,kBAAmBxP,IAAE,6BAA6BuJ,MAClD2G,cAAelQ,IAAE,yBAAyBuJ,OAE9CmC,EAAY4D,WAAWxE,GAClBvD,MAAK,SAAAC,GACF,EAAKW,MAAM8B,QAAQC,KAAnB,oBAAqC1C,EAAS1G,KAAKuH,aAEtDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,oBAQzDsC,MAAM,4EAGVA,MAAM,yB,sCAIVlJ,KAAK0G,MAAM8B,QAAQC,KAAK,iC,GApTcU,aCAzB2E,E,YAEjB,WAAYpH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToH,kBAAmB,GACnBlE,MAAO,GACPjD,QAAS,GACTnC,WAAYuD,EAAsB0B,gBAClCmC,KAAM,EAAKnF,MAAMgG,SAAS/F,MAAMkF,MAEpC,EAAK/B,cAAgB,EAAKA,cAAchD,KAAnB,gBACrB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBACrB,EAAKiG,WAAa,EAAKA,WAAWjG,KAAhB,gBAXH,E,iFAeE,IAAD,OACXkB,EAAsBgC,uBACvBd,MAAM,uEACNlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,MAEJT,EAAsBpC,yBAItBqE,EAAY+D,0BACPlI,MAAK,SAAAC,GACFlC,QAAQC,IAAI,wBAAyBiC,EAAS1G,MAC9C,EAAKqJ,SAAS,CACVqF,kBAAmBhI,EAAS1G,UAEjC2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAMrDqD,EAAYG,cACPtE,MAAK,SAAAC,GACFlC,QAAQC,IAAI,eAAgBiC,EAAS1G,MACrC,EAAKqJ,SAAS,CACVmB,MAAO9D,EAAS1G,UAErB2G,OACC,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cASrDrI,IAAE,aAAayI,SAAS,CACpBC,OAAQ,GACRC,MAAO,CACH,sBAAuB,CACnBE,UAAU,EAEV6G,UAAW,KAGf,sBAAuB,CAEnBA,UAAW,KAEf,sBAAuB,CAEnBA,UAAW,KAEf,sBAAuB,CAEnBA,UAAW,KAEf,yBAA0B,CACtB7G,UAAU,GAEd,qBAAsB,CAClBA,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,iCAKnBb,GAAQ,IAAD,OACRoJ,EAAS7L,KAAK2G,MAAdkF,KACNhI,QAAQC,IAAI,sBAAwBrB,EAAMuK,OAAOxF,MACvB,wBAAtB/E,EAAMuK,OAAOxF,KACbqE,EAAKf,MAAME,SAAWvI,EAAMuK,OAAO3J,MACN,wBAAtBZ,EAAMuK,OAAOxF,KACpBqE,EAAKf,MAAMC,SAAWtI,EAAMuK,OAAO3J,MAER,wBAAtBZ,EAAMuK,OAAOxF,KAClBqE,EAAKf,MAAMG,SAAWxI,EAAMuK,OAAO3J,MAER,wBAAtBZ,EAAMuK,OAAOxF,KAClBqE,EAAKf,MAAMI,SAAWzI,EAAMuK,OAAO3J,MAER,2BAAtBZ,EAAMuK,OAAOxF,KAClBqE,EAAKkC,kBAAoBW,MAAMC,KAAKlM,EAAMuK,OAAO4B,iBAAiB,SAACjE,GAAD,OAAUA,EAAKtH,SAGtD,uBAAtBZ,EAAMuK,OAAOxF,OAClBqE,EAAK4C,cAAgBC,MAAMC,KAAKlM,EAAMuK,OAAO4B,iBAAiB,SAACjE,GAAD,OAAUA,EAAKtH,UAYjFrD,KAAK0I,SAAS,CACVmD,SACD,WAEChI,QAAQC,IAAI,wBAAyB,EAAK6C,MAAMkF,W,+BAK9C,IAAD,OACGkC,EAAsB/N,KAAK2G,MAA3BoH,kBACAlE,EAAU7J,KAAK2G,MAAfkD,MAEJqE,EAAwBH,EAAkBrP,OAAS,GAChDqP,EAAkBrD,KAAI,SAACC,EAAMC,GAC5B,OACI,oCACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKwD,oBACtB,WACE,OAAQ,EAAKxH,MAAMlC,YACf,KAAK,EAAG,OAA+B,MAAvBkG,EAAKG,MAAMC,UAA2C,IAAvBJ,EAAKG,MAAMC,SAAiBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMG,UAA2C,IAAvBN,EAAKG,MAAMG,SAAiBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMI,UAA2C,IAAvBP,EAAKG,MAAMI,SAAiBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC5G,QAAS,OAAOL,EAAKG,MAAME,UALjC,OAWfhL,MACHqL,EAAWxB,EAAMnL,OAAS,GACvBmL,EAAMa,KAAI,SAACC,EAAMC,GAChB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKH,QACtB,WACE,OAAQ,EAAK7D,MAAMlC,YACf,KAAK,EAAG,OAA+B,MAAvBkG,EAAKG,MAAMC,UAA2C,IAAvBJ,EAAKG,MAAMC,SAAiBJ,EAAKG,MAAMC,SAAWJ,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMG,UAA2C,IAAvBN,EAAKG,MAAMG,SAAiBN,EAAKG,MAAMG,SAAWN,EAAKG,MAAME,SAC5G,KAAK,EAAG,OAA+B,MAAvBL,EAAKG,MAAMI,UAA2C,IAAvBP,EAAKG,MAAMI,SAAiBP,EAAKG,MAAMI,SAAWP,EAAKG,MAAME,SAC5G,QAAS,OAAOL,EAAKG,MAAME,UALjC,MAUXhL,MACP,OACI,yBAAKoO,MAAM,8DACP,yBAAKA,MAAM,gBACP,wBAAIA,MAAM,cACN,4BAAI,uBAAGC,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,KAAR,UACJ,4BAAI,uBAAGA,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,KAAR,eAER,yBAAKD,MAAM,qBACP,6BAAK,4BAAKpO,KAAK2G,MAAMC,UACrB,yBAAKwH,MAAM,OACP,yBAAKA,MAAM,aAEP,0BAAM5G,KAAK,WAAWC,GAAG,WAAW2G,MAAM,mBACtC,yBAAKA,MAAM,uBACP,yBAAKA,MAAM,iBACP,wBAAIA,MAAM,eN9MvB,gBMgNS,yBAAKA,MAAM,cACP,yBAAKA,MAAM,cACP,2BAAOA,MAAM,wCN1LhC,sBM2LmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsB2G,MAAM,eAAe5G,KAAK,sBAAsBnE,MAAOrD,KAAK2G,MAAMkF,KAAKf,MAAME,SAAUiC,SAAUjN,KAAK+M,WAAY8B,UAAU,MAIhL,yBAAKT,MAAM,cACP,2BAAOA,MAAM,wCN9LhC,yBM+LmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsBD,KAAK,sBAAsB4G,MAAM,eAAe/K,MAAOrD,KAAK2G,MAAMkF,KAAKf,MAAMC,SAAUkC,SAAUjN,KAAK+M,WAAY8B,UAAU,MAIhL,yBAAKT,MAAM,cACP,2BAAOA,MAAM,wCNtMhC,qBMuMmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsBD,KAAK,sBAAsB4G,MAAM,eAAe/K,MAAOrD,KAAK2G,MAAMkF,KAAKf,MAAMG,SAAUgC,SAAUjN,KAAK+M,WAAY8B,UAAU,MAIhL,yBAAKT,MAAM,cACP,2BAAOA,MAAM,wCN9MhC,sBM+MmB,yBAAKA,MAAM,sBACP,2BAAOxG,KAAK,OAAOH,GAAG,sBAAsBD,KAAK,sBAAsB4G,MAAM,eAAe/K,MAAOrD,KAAK2G,MAAMkF,KAAKf,MAAMI,SAAU+B,SAAUjN,KAAK+M,WAAY8B,UAAU,MAKhL,yBAAKT,MAAM,cACP,2BAAOA,MAAM,wCNlN5B,qBMmNe,yBAAKA,MAAM,sBACP,4BAAQ3G,GAAG,yBAAyB2G,MAAM,sBAAsBE,mBAAiB,OAAOC,mBAAiB,OAAO/G,KAAK,yBAAyBgH,UAAU,EAAMnL,MAAOrD,KAAK2G,MAAMkF,KAAKkC,kBAAmBd,SAAUjN,KAAK+M,WAAY+B,YAAY,mCAC3O,4BAAQzL,MAAM,IAAd,sBACC6K,KAMb,yBAAKE,MAAM,cACP,2BAAOA,MAAM,wCN5N9B,mBM6NiB,yBAAKA,MAAM,sBACP,4BAAQ3G,GAAG,qBAAqBF,UAAU,sBAAsB+G,mBAAiB,OAAOC,mBAAiB,OAAO/G,KAAK,qBAAqBgH,UAAU,EAAMnL,MAAOrD,KAAK2G,MAAMkF,KAAK4C,cAAexB,SAAUjN,KAAK+M,YAC3M,4BAAQ1J,MAAM,IAAd,sBACCgI,KAKb,4BAAQzD,KAAK,SAASL,UAAU,kBAAkBM,QAAS7H,KAAK8J,eNnPlF,UMoPkB,4BAAQlC,KAAK,SAASL,UAAU,iBAAiBM,QAAS7H,KAAK+J,eNrPjF,UMqP4H,6BAAS,8BAGvH,yBAAKqE,MAAM,gBACP,yBAAKA,MAAM,yB,sCAalC,IAAD,OACZvK,QAAQC,IAAIvF,IAAE,6BAA6BuJ,OACvCnD,UAAUC,OACNoD,EAAsBgC,qBAClBzL,IAAE,aAAawJ,SAEfkC,EAAY2D,SAAS5N,KAAK2G,MAAMkF,MAC3B/F,MAAK,SAAAC,GACF,EAAKW,MAAM8B,QAAQC,KAAnB,oBAAqC1C,EAAS1G,KAAKuH,aAEtDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAQzDsC,MAAM,uEAGVA,MAAM,yB,sCAIVlJ,KAAK0G,MAAM8B,QAAQC,KAAK,iC,GAlTcU,a,QCa/B,M,oGApBHE,GACR,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,qBAAyC4F,EAAM,M,wCAKtD,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,4BAAgD,M,8CAIvD,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,yBAA6C,M,mCAG3C4F,GACT,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,sBAA0C4F,EAAM,Q,MC0E5C0F,E,YAlFX,WAAYrI,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyE,aAAc,IAElB,EAAK4D,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAKmI,WAAa,EAAKA,WAAWnI,KAAhB,gBANH,E,6EAQHrE,GACZzC,KAAK0I,SAAL,eAESjG,EAAMuK,OAAOxF,KAAO/E,EAAMuK,OAAO3J,U,0CAM1C2E,EAAsBpC,yBACtBrH,IAAE,iBAAiByI,SAAS,CACxBC,OAAQ,GACRC,MAAO,CACHkE,aAAc,CACVhE,UAAU,EACV8H,aAAa,EACbjB,UAAW,MAGnB5G,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,iCAMnBb,GAAQ,IAAD,OACVkC,UAAUC,QACVf,QAAQC,IAAI,uBACRvF,IAAE,iBAAiBwJ,SACnBoH,EAAgBC,YAAYpP,KAAK2G,OAAOb,MAAK,SAAAC,GACzC,EAAKW,MAAM8B,QAAQC,KAAnB,wBAAyC1C,EAAS1G,KAAKuH,aAGtDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,eAQzDsC,MAAM,gD,+BAKV,OACI,oCACI,4BR5BY,gBQ6BZ,0BAAM1B,KAAK,eAAeC,GAAG,gBACzB,6BACI,+BRxDK,gBQwDL,MACA,2BAAOG,KAAK,OAAOJ,KAAK,eAAenE,MAAOrD,KAAK2G,MAAMyE,aAAc6B,SAAUjN,KAAKgP,mBAE1F,6BAAM,6BACN,6BACI,4BAAQpH,KAAK,SAASC,QAAS7H,KAAKiP,YRlC/B,iB,GQ1CM9F,aCFdkG,E,YAEjB,WAAY3I,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT2I,aAAc,IAElB,EAAKC,aAAe,EAAKA,aAAazI,KAAlB,gBACpB,EAAK0I,eAAiB,EAAKA,eAAe1I,KAApB,gBANP,E,iFASE,IAAD,OAChBkB,EAAsBpC,yBACtBuJ,EAAgBhF,kBACXrE,MAAK,SAAAC,GACFlC,QAAQC,IAAIiC,EAAS1G,MACrB,EAAKqJ,SAAS,CACV4G,aAAcvJ,EAAS1G,UAG9B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,mCAS9BpC,GACTxE,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,gBACVhC,MAAO,CAAEnC,SAAUA,O,uCAKnBG,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,gBAEAS,MAAM,yB,+BAKJ,IAAD,OACL,OACI,oCACA,2BAAIlJ,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC5B,6BACC,4BAAQgB,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAKwP,gBTd5C,oBScqG,6BAAM,8BAEnI,yBAAKjI,UAAU,gBAET,2BAAOiE,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4BTlDH,iBSmDG,4BT3BP,YS+BD,+BAEQtM,KAAK2G,MAAM2I,aAAa5E,KAAI,SAAAlG,GAAQ,OAEhC,wBAAIxB,IAAKwB,EAASC,WAAYoD,QAAS,kBAAM,EAAK0H,aAAa/K,KAC3D,4BAAKA,EAAS4G,cACd,4BAAmC,QAA9B5G,EAASiI,OAAOtH,WAAuB,SAAW,wB,GA9E5CgE,aCE9BsG,E,YAEjB,WAAY/I,GAAQ,IAAD,8BAEf,4CAAMA,KACDC,MAAQ,CAAEnC,SAAU,IAEzB,EAAKwK,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAK4I,WAAa,EAAKA,WAAW5I,KAAhB,gBANH,E,iFAShBkB,EAAsBpC,yBACrB5F,KAAK0I,SAAS,CACVlE,SAAUxE,KAAK0G,MAAMgG,SAAS/F,MAAMnC,WAExCX,QAAQC,IAAI9D,KAAK2G,OACjBpI,IAAE,uBAAuByI,SAAS,CAC9BC,OAAQ,GACRC,MAAO,CACH,wBAAyB,CACrBE,UAAU,EACV8H,aAAa,EACbjB,UAAW,MAGnB5G,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAKdb,GAAQ,IAEd+B,EAAaxE,KAAK2G,MAAlBnC,SAEoB,0BAAtB/B,EAAMuK,OAAOxF,MACb3D,QAAQC,IAAI,aACZU,EAAS4G,aAAe3I,EAAMuK,OAAO3J,OACR,oBAAtBZ,EAAMuK,OAAOxF,OACpBhD,EAASiI,OAA6B,qBAApBhK,EAAMuK,OAAOvF,IAGnCzH,KAAK0I,SACD,CACIlE,e,mCAKE,IAAD,OACLG,UAAUC,OACNrG,IAAE,uBAAuBwJ,SAEzBoH,EAAgBI,aAAavP,KAAK2G,MAAMnC,UAAUsB,MAAK,SAAAC,GACnD,EAAKW,MAAM8B,QAAQC,KAAnB,wBAAyC1C,EAAS1G,KAAKuH,aAGtDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAQtCsC,MAAM,gD,+BAKf,OACI,oCACI,4BVzCe,mBU0Cf,0BAAM1B,KAAK,sBAAsBC,GAAG,sBAChC,6BACI,+BVtEK,gBUsEL,MACA,2BAAOG,KAAK,OAAOJ,KAAK,wBAAwBnE,MAAOrD,KAAK2G,MAAMnC,SAAS4G,aAAc6B,SAAUjN,KAAKgP,mBAE5G,6BAAM,6BACN,6BACI,6BVpFF,SUoFE,IAEJ,2BAAOpH,KAAK,QAAQH,GAAG,mBAAmBD,KAAK,kBAAkBnE,OAAO,EAAM6J,SAAwC,IAA/BlN,KAAK2G,MAAMnC,SAASiI,OAAiBQ,SAAUjN,KAAKgP,kBAFvI,UAGJ,2BAAOpH,KAAK,QAAQH,GAAG,mBAAmBD,KAAK,kBAAkBnE,OAAO,EAAO6J,SAAwC,IAA/BlN,KAAK2G,MAAMnC,SAASiI,OAAkBQ,SAAUjN,KAAKgP,kBAHzI,aAKA,4BAAQpH,KAAK,SAASC,QAAS7H,KAAK0P,YVpD/B,iB,GU3CsBvG,aCgBpC,M,0GApBGE,GAClB,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,2BAA8C4F,EAAK,M,8CAKtD,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,+BAAmD,M,oDAK1D,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,qCAAyD,M,yCAIjD4F,GACf,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,4BAAgD4F,EAAM,Q,MCb5CsG,E,YAEjB,WAAYjJ,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAIV,EAAKqI,gBAAgB,EAAKA,gBAAgBlI,KAArB,gBACrB,EAAKmI,WAAW,EAAKA,WAAWnI,KAAhB,gBAPH,E,iFAYdkB,EAAsBpC,yBACtBrH,IAAE,uBAAuByI,SAAS,CAC9BC,OAAQ,GACRC,MAAO,CACH,SAAY,CACRE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,SAAY,CAERiB,aAAa,EACbjB,UAAW,KAEf,SAAY,CAERiB,aAAa,EACbjB,UAAW,KAEf,SAAY,CAERiB,aAAa,EACbjB,UAAW,MAGnB5G,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAOdb,GAEZzC,KAAK0I,SAAL,eAESjG,EAAMuK,OAAOxF,KAAO/E,EAAMuK,OAAO3J,U,mCAMjC,IAAD,OACJsB,UAAUC,OACNrG,IAAE,uBAAuBwJ,UACzBlE,QAAQC,IAAI9D,KAAK2G,OACjBiJ,EAAsBC,kBAAkB7P,KAAK2G,OAAOb,MAAK,SAAAC,GACrD,EAAKW,MAAM8B,QAAQC,KAAnB,8BAA+C1C,EAAS1G,KAAKuH,UAC7D/C,QAAQC,IAAI,cAGXkC,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,eAW3CsC,MAAM,gD,+BAKV,OACC,oCACD,4BZhD2B,wBYiDnB,0BAAM1B,KAAK,qBAAqBC,GAAG,sBAC/B,6BACI,+BZlDe,kCYkDf,MACA,2BAAOG,KAAK,OAAOJ,KAAK,WAAYyF,SAAUjN,KAAKgP,mBAEvD,6BAAK,6BACL,6BACI,+BZtDe,kCYsDf,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,WAAYyF,SAAUjN,KAAKgP,mBAEvD,6BAAK,6BACL,6BACI,+BZ1De,mCY0Df,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,WAAYyF,SAAUjN,KAAKgP,mBAEvD,6BAAK,6BACL,6BACI,+BZ9De,qCY8Df,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,WAAYyF,SAAUjN,KAAKgP,mBAEvD,6BAAK,6BACL,6BACI,4BAAQpH,KAAK,SAASC,QAAS7H,KAAKiP,YZ1E/B,iB,GY3C2B9F,aCHnC2G,G,YAEjB,WAAYpJ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToJ,eAAgB,IAIpB,EAAKC,mBAAqB,EAAKA,mBAAmBlJ,KAAxB,gBAC1B,EAAKmJ,qBAAuB,EAAKA,qBAAqBnJ,KAA1B,gBARb,E,iFAWE,IAAD,OAChBkB,EAAsBpC,yBACtBgK,EAAsBM,wBAAwBpK,MAAK,SAAAC,GAE/C,EAAK2C,SAAS,CACVqH,eAAgBhK,EAAS1G,UAG5B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,yCAQxBuJ,GACfnQ,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,sBACVhC,MAAO,CAAEwJ,eAAgBA,O,6CAOzBxL,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,sBAEAS,MAAM,yB,+BAKJ,IAAD,OACL,OACI,oCAEI,2BAAIlJ,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC5B,6BACI,4BAAQgB,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAKiQ,sBbNjD,4BaMkH,6BAAM,8BAGhJ,yBAAK1I,UAAU,sBAEX,4BbdiB,yBaejB,2BAAOiE,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4BbtBO,mCauBP,4BbtBO,mCauBP,4BbtBO,oCauBP,4BbtBO,sCauBP,4BbrBO,YayBf,+BAEQtM,KAAK2G,MAAMoJ,eAAerF,KAAI,SAAAyF,GAAc,OAExC,wBAAInN,IAAKmN,EAAeC,iBAAkBvI,QAAS,kBAAM,EAAKmI,mBAAmBG,KAC7E,4BAAKA,EAAerF,MAAME,UAC1B,4BAAKmF,EAAerF,MAAMG,UAC1B,4BAAKkF,EAAerF,MAAMI,UAC1B,4BAAKiF,EAAerF,MAAMC,UAC1B,4BAAyC,QAApCoF,EAAe1D,OAAOtH,WAAuB,SAAW,wB,GAzFhDgE,aCGhCkH,G,YAGjB,WAAY3J,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTwJ,eACA,CACI1D,OAAQ,GAER3B,MAAO,CACHE,SAAU,GACVE,SAAU,GACVD,SAAU,GACVF,SAAU,GACVuF,QAAS,MAKrB,EAAKtB,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAK4I,WAAa,EAAKA,WAAW5I,KAAhB,gBAlBH,E,iFAsBfkB,EAAsBpC,yBACtB/B,QAAQC,IAAI9D,KAAK0G,MAAMgG,SAAS/F,MAAMwJ,gBACtCnQ,KAAK0I,SAAS,CACVyH,eAAgBnQ,KAAK0G,MAAMgG,SAAS/F,MAAMwJ,iBAI9C5R,IAAE,8BAA8ByI,SAAS,CACrCC,OAAQ,GACRC,MAAO,CACH,gCAAiC,CAC7BE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,MAGnB5G,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAKdb,GAAQ,IACd0N,EAAmBnQ,KAAK2G,MAAxBwJ,eAEoB,kCAAtB1N,EAAMuK,OAAOxF,OACb3D,QAAQC,IAAI,aACZqM,EAAerF,MAAME,SAAWvI,EAAMuK,OAAO3J,OACrB,kCAAtBZ,EAAMuK,OAAOxF,OACf3D,QAAQC,IAAI,aACZqM,EAAerF,MAAMG,SAAWxI,EAAMuK,OAAO3J,OACrB,kCAAtBZ,EAAMuK,OAAOxF,OACf3D,QAAQC,IAAI,aACZqM,EAAerF,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACrB,kCAAtBZ,EAAMuK,OAAOxF,MACf3D,QAAQC,IAAI,aACZqM,EAAerF,MAAMC,SAAWtI,EAAMuK,OAAO3J,OAChB,0BAAtBZ,EAAMuK,OAAOxF,OACpB2I,EAAe1D,OAA6B,2BAApBhK,EAAMuK,OAAOvF,IAIzCzH,KAAK0I,SACD,CACIyH,qB,mCAKE,IAAD,OAELxL,UAAUC,OAENrG,IAAE,8BAA8BwJ,SAEhC6H,EAAsBI,mBAAmBhQ,KAAK2G,MAAMwJ,gBAAgBrK,MAAK,SAAAC,GAErE,EAAKW,MAAM8B,QAAQC,KAAnB,8BAA+C1C,EAAS1G,KAAKuH,aAG5DZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAU3CsC,MAAM,gD,+BAOV,OACI,oCAEI,4Bd7EuB,2Bc8EvB,0BAAM1B,KAAK,4BAA4BC,GAAG,6BACtC,6BACI,+BdtFe,kCcsFf,MACA,2BAAOG,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAMwJ,eAAerF,MAAME,SAAUiC,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BACI,+Bd1Fe,kCc0Ff,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAMwJ,eAAerF,MAAMG,SAAUgC,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BACI,+Bd9Fe,mCc8Ff,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAMwJ,eAAerF,MAAMI,SAAU+B,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BACI,+BdlGe,qCckGf,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAMwJ,eAAerF,MAAMC,SAAUkC,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BdjJE,SciJF,IAEA,2BAAOpH,KAAK,QAAQH,GAAG,yBAAyBD,KAAK,wBAAwBnE,OAAO,EAAM6J,SAA8C,IAArClN,KAAK2G,MAAMwJ,eAAe1D,OAAiBQ,SAAUjN,KAAKgP,kBAF7J,UAGA,2BAAOpH,KAAK,QAAQH,GAAG,yBAAyBD,KAAK,wBAAwBnE,OAAO,EAAO6J,SAA8C,IAArClN,KAAK2G,MAAMwJ,eAAe1D,OAAkBQ,SAAUjN,KAAKgP,kBAH/J,aAMA,6BACI,4BAAQpH,KAAK,SAASC,QAAS7H,KAAK0P,YdnH/B,iB,Gc5C8BvG,aCa5C,O,sGAhBGE,GACV,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,uBAA2C4F,EAAM,M,0CAKxD,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,2BAA+C,M,qCAI3C4F,GACX,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,wBAA2C4F,EAAK,Q,MCP1CkH,G,YAEjB,WAAY7J,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTmE,MAAO,CACHE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVH,SAAU,IAEdoF,eAAgB,CACZC,iBAAkB,IAEtBI,mBAAoB,IAExB,EAAKxB,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAKmI,WAAa,EAAKA,WAAWnI,KAAhB,gBAfH,E,iFAkBE,IAAD,OAChBkB,EAAsBpC,yBACtBgK,EAAsBa,8BAA8B3K,MAAK,SAAAC,GAErD,EAAK2C,SAAS,CACV8H,mBAAoBzK,EAAS1G,UAGhC2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAMvCrI,IAAE,mBAAmByI,SAAS,CAC1BC,OAAQ,GACRC,MAAO,CACH,iBAAkB,CACdE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CAEdiB,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CAEdiB,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CAEdiB,aAAa,EACbjB,UAAW,KAEf,kCAAmC,CAC/B7G,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAMdb,GACc,mBAAtBA,EAAMuK,OAAOxF,OAEbxH,KAAK2G,MAAMmE,MAAME,SAAWvI,EAAMuK,OAAO3J,OAEnB,mBAAtBZ,EAAMuK,OAAOxF,OAEbxH,KAAK2G,MAAMmE,MAAMG,SAAWxI,EAAMuK,OAAO3J,OACjB,mBAAtBZ,EAAMuK,OAAOxF,OAEfxH,KAAK2G,MAAMmE,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACjB,mBAAtBZ,EAAMuK,OAAOxF,KAEfxH,KAAK2G,MAAMmE,MAAMC,SAAWtI,EAAMuK,OAAO3J,MAEd,oCAAtBZ,EAAMuK,OAAOxF,OAClBxH,KAAK2G,MAAMwJ,eAAeC,iBAAmB3N,EAAMuK,OAAO3J,OAhB3C,IAmBbqN,EAAe1Q,KAAK2G,MAApB+J,WACN1Q,KAAK0I,SACD,CACIgI,iB,mCAOE,IAAD,OAEL/L,UAAUC,OACNrG,IAAE,mBAAmBwJ,UACrBlE,QAAQC,IAAI9D,KAAK2G,OAEjBgK,GAAkBC,cAAc5Q,KAAK2G,OAAOb,MAAK,SAAAC,GAC7C,EAAKW,MAAM8B,QAAQC,KAAnB,0BAA2C1C,EAAS1G,KAAKuH,aAIxDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,eAU3CsC,MAAM,gD,+BAOJ,IACEsH,EAAuBxQ,KAAK2G,MAA5B6J,mBACJK,EAAkBL,EAAmB9R,OAAS,GAC3C8R,EAAmB9F,KAAI,SAACC,EAAMC,GAC7B,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKyF,kBAAmBzF,EAAKG,MAAME,YAE/DhL,MACP,OACI,oCAEI,4BhBtGc,mBgBuGd,0BAAMwH,KAAK,iBAAiBC,GAAG,kBAC3B,6BACI,+BhBvGU,6BgBuGV,MACA,2BAAOG,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BhB3GU,4BgB2GV,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BhB/GU,6BgB+GV,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BhBnHU,gCgBmHV,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BAEN,6BhBrHiB,0BgBqHjB,MACwC,4BAAQvH,GAAG,mBAAmBD,KAAK,kCAAkCyF,SAAUjN,KAAKgP,iBACpH,4BAAQ3L,MAAM,IAAd,sBACCwN,IAGT,6BACA,6BACI,4BAAQjJ,KAAK,SAASC,QAAS7H,KAAKiP,YhBjJ/B,iB,GgB1Cc9F,aCHtB2G,G,YAErB,WAAYpJ,GAAO,IAAD,8BAClB,4CAAMA,KACDC,MAAM,CACXoJ,eAAe,IAGf,EAAKe,eAAe,EAAKA,eAAehK,KAApB,gBACpB,EAAKiK,iBAAiB,EAAKA,iBAAiBjK,KAAtB,gBAPJ,E,iFAUG,IAAD,OAChBkB,EAAsBpC,yBACtB+K,GAAkBK,oBAAoBlL,MAAK,SAAAC,GACvC,EAAK2C,SAAS,CACVqH,eAAgBhK,EAAS1G,UAG5B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,qCAQ5B8J,GACX1Q,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,kBACVhC,MAAO,CAAE+J,WAAYA,O,yCAOrB/L,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,kBAEAS,MAAM,yB,+BAKJ,IAAD,OACL,OACI,oCAEI,2BAAIlJ,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC5B,6BACI,4BAAQgB,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAK+Q,kBjBKlD,uBiBL0G,6BAAM,8BAGvI,yBAAKxJ,UAAU,kBAEX,4BjBFgB,qBiBGhB,2BAAOiE,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4BjBXM,8BiBYN,4BjBXM,6BiBYN,4BjBXM,8BiBYN,4BjBXM,iCiBYN,4BjBXK,YiBeb,+BAEQtM,KAAK2G,MAAMoJ,eAAerF,KAAI,SAAAgG,GAAU,OAEpC,wBAAI1N,IAAK0N,EAAWO,aAAcpJ,QAAS,kBAAM,EAAKiJ,eAAeJ,KACjE,4BAAKA,EAAW5F,MAAME,UACtB,4BAAK0F,EAAW5F,MAAMG,UACtB,4BAAKyF,EAAW5F,MAAMI,UACtB,4BAAKwF,EAAW5F,MAAMC,UACtB,4BAAqC,QAAhC2F,EAAWjE,OAAOtH,WAAuB,SAAW,wB,GAvFxCgE,aCGhC+H,G,YAEjB,WAAYxK,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAET+J,WAAY,CACRjE,OAAQ,GACRwE,aAAc,GACdnG,MAAO,CACHE,SAAU,GACVE,SAAU,GACVD,SAAU,GACVF,SAAU,GACVuF,QAAS,IAEbH,eAAgB,CACZC,iBAAkB,KAG1BI,mBAAoB,IAExB,EAAKxB,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAK4I,WAAa,EAAKA,WAAW5I,KAAhB,gBArBH,E,iFAyBE,IAAD,OAChBkB,EAAsBpC,yBACtB5F,KAAK0I,SAAS,CACVgI,WAAY1Q,KAAK0G,MAAMgG,SAAS/F,MAAM+J,aAG1Cd,EAAsBa,8BAA8B3K,MAAK,SAAAC,GAErD,EAAK2C,SAAS,CACV8H,mBAAoBzK,EAAS1G,UAGhC2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAOvCrI,IAAE,0BAA0ByI,SAAS,CACjCC,OAAQ,GACRC,MAAO,CACH,4BAA6B,CACzBE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,4BAA6B,CAEzBiB,aAAa,EACbjB,UAAW,KAEf,4BAA6B,CAEzBiB,aAAa,EACbjB,UAAW,KAEf,4BAA6B,CAEzBiB,aAAa,EACbjB,UAAW,KAEf,6CAA8C,CAC1C7G,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAKdb,GAAQ,IAEdiO,EAAe1Q,KAAK2G,MAApB+J,WAEoB,8BAAtBjO,EAAMuK,OAAOxF,OAEbkJ,EAAW5F,MAAME,SAAWvI,EAAMuK,OAAO3J,OACjB,8BAAtBZ,EAAMuK,OAAOxF,OAEfkJ,EAAW5F,MAAMG,SAAWxI,EAAMuK,OAAO3J,OACjB,8BAAtBZ,EAAMuK,OAAOxF,OAEfkJ,EAAW5F,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACjB,8BAAtBZ,EAAMuK,OAAOxF,OAEfkJ,EAAW5F,MAAMC,SAAWtI,EAAMuK,OAAO3J,OACjB,+CAAtBZ,EAAMuK,OAAOxF,KACfxH,KAAK2G,MAAM+J,WAAWP,eAAeC,iBAAmB3N,EAAMuK,OAAO3J,MACxC,sBAAtBZ,EAAMuK,OAAOxF,OACpBkJ,EAAWjE,OAAShK,EAAMuK,OAAOvF,IAA4B,GAIjEzH,KAAK0I,SACD,CACIgI,iB,mCAME,IAAD,OAEL/L,UAAUC,OACNrG,IAAE,0BAA0BwJ,SAE5B4I,GAAkBG,eAAe9Q,KAAK2G,MAAM+J,YAAY5K,MAAK,SAAAC,GACzD,EAAKW,MAAM8B,QAAQC,KAAnB,0BAA2C1C,EAAS1G,KAAKuH,aAIxDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAS3CsC,MAAM,gD,+BAIJ,IACEsH,EAAuBxQ,KAAK2G,MAA5B6J,mBACJK,EAAkBL,EAAmB9R,OAAS,GAC3C8R,EAAmB9F,KAAI,SAACC,EAAMC,GAC7B,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKyF,kBAAmBzF,EAAKG,MAAME,YAE/DhL,MACP,OAEI,oCAEI,4BlB9GiB,sBkB+GjB,0BAAMwH,KAAK,wBAAwBC,GAAG,yBAClC,6BACI,+BlB1He,kCkB0Hf,MACA,2BAAOG,KAAK,OAAOJ,KAAK,4BAA4BnE,MAAOrD,KAAK2G,MAAM+J,WAAW5F,MAAME,SAAUiC,SAAUjN,KAAKgP,mBAEpH,6BAAM,6BACN,6BACI,+BlB9He,kCkB8Hf,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,4BAA4BnE,MAAOrD,KAAK2G,MAAM+J,WAAW5F,MAAMG,SAAUgC,SAAUjN,KAAKgP,mBAEpH,6BAAM,6BACN,6BACI,+BlBlIe,mCkBkIf,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,4BAA4BnE,MAAOrD,KAAK2G,MAAM+J,WAAW5F,MAAMI,SAAU+B,SAAUjN,KAAKgP,mBAEpH,6BAAM,6BACN,6BACI,+BlBtIe,qCkBsIf,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,4BAA4BnE,MAAOrD,KAAK2G,MAAM+J,WAAW5F,MAAMC,SAAUkC,SAAUjN,KAAKgP,mBAEpH,6BAAM,6BACN,6BlBrLE,SkBqLF,IAEA,2BAAOpH,KAAK,QAAQH,GAAG,qBAAqBD,KAAK,oBAAoBnE,OAAO,EAAM6J,SAA0C,IAAjClN,KAAK2G,MAAM+J,WAAWjE,OAAiBQ,SAAUjN,KAAKgP,kBAFjJ,UAGA,2BAAOpH,KAAK,QAAQH,GAAG,qBAAqBD,KAAK,oBAAoBnE,OAAO,EAAO6J,SAA0C,IAAjClN,KAAK2G,MAAM+J,WAAWjE,OAAkBQ,SAAUjN,KAAKgP,kBAHnJ,aAKA,6BAAM,6BACN,6BlBnIiB,0BkBmIjB,MACwC,4BAAQvH,GAAG,mBAAmBD,KAAK,6CAA6CnE,MAAOrD,KAAK2G,MAAM+J,WAAWP,eAAiBnQ,KAAK2G,MAAM+J,WAAWP,eAAeC,iBAAmB,GAAInD,SAAUjN,KAAKgP,iBACzO,4BAAQ3L,MAAM,IAAd,sBACCwN,IAGT,6BAAM,6BACN,2BAAOjJ,KAAK,SAASJ,KAAK,0BAA0BnE,MAAOrD,KAAK2G,MAAM+J,WAAWO,eACjF,2BAAOrJ,KAAK,SAASJ,KAAK,2BAA2BnE,MAAOrD,KAAK2G,MAAM+J,WAAW5F,MAAMwF,UACxF,6BACI,4BAAQ1I,KAAK,SAASC,QAAS7H,KAAK0P,YlBhK/B,iB,GkB3C0BvG,aCexC,O,oGAnBCE,GACR,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,qBAAyC4F,EAAM,M,wCAKtD,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,yBAA6C,M,8CAKpD,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,+BAAmD,M,mCAGjD4F,GACT,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,sBAA0C4F,EAAM,Q,MCb1C8H,G,YAEjB,WAAYzK,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyK,aAAc,GACdC,eAAgB,GAChBvG,MAAO,CACHE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVH,SAAU,IAEduG,oBAAqB,IAEzB,EAAKtC,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAKmI,WAAa,EAAKA,WAAWnI,KAAhB,gBAdH,E,iFAkBfkB,EAAsBpC,yBACtBrH,IAAE,iBAAiByI,SAAS,CACxBC,OAAQ,GACRC,MAAO,CACH,iBAAkB,CACdE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CACdiB,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CACdiB,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CACdiB,aAAa,EACbjB,UAAW,KAEf,aAAgB,CACZ7G,UAAU,EACV6G,UAAW,GAEf,eAAkB,CACd7G,UAAU,EACV6G,UAAW,GAEf,oBAAuB,CACnB7G,UAAU,EACVmK,SAAQ,IAGhBlK,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAMdb,GAWa,iBAAtBA,EAAMuK,OAAOxF,OACZxH,KAAK2G,MAAMyK,aAAe3O,EAAMuK,OAAO3J,OACjB,mBAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAM0K,eAAiB5O,EAAMuK,OAAO3J,OACnB,mBAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMmE,MAAME,SAAWvI,EAAMuK,OAAO3J,OACnB,mBAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMmE,MAAMG,SAAWxI,EAAMuK,OAAO3J,OACnB,mBAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMmE,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACnB,mBAAtBZ,EAAMuK,OAAOxF,KACbxH,KAAK2G,MAAMmE,MAAMC,SAAWtI,EAAMuK,OAAO3J,MACd,wBAAtBZ,EAAMuK,OAAOxF,OAClBxH,KAAK2G,MAAM2K,oBAAsB7O,EAAMuK,OAAO3J,OAxB/B,IA0BbmO,EAAaxR,KAAK2G,MAAlB6K,SACNxR,KAAK0I,SACD,CACI8I,e,mCAKE,IAAD,OAEL7M,UAAUC,OAENrG,IAAE,iBAAiBwJ,SACnB0J,GAAgBC,YAAY1R,KAAK2G,OAAOb,MAAK,SAAAC,GACzC,EAAKW,MAAM8B,QAAQC,KAAnB,wBAAyC1C,EAAS1G,KAAKuH,UACvD/C,QAAQC,IAAI,cAGXkC,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAS3CsC,MAAM,gD,+BAMV,OACI,oCACI,4BpBjEY,gBoBkEZ,0BAAM1B,KAAK,eAAeC,GAAG,gBACzB,6BACI,+BpB9DK,gBoB8DL,MACA,2BAAOG,KAAK,OAAOJ,KAAK,eAAeyF,SAAUjN,KAAKgP,mBAE1D,6BAAM,6BACN,6BACI,+BpBlEO,kBoBkEP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BpB5EQ,0BoB4ER,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BpBhFQ,yBoBgFR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BpBpFQ,0BoBoFR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BpBxFQ,6BoBwFR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BpB1Fa,yBoB0Fb,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,sBAAsByF,SAAUjN,KAAKgP,mBAEjE,6BAAM,6BACN,6BACI,4BAAQpH,KAAK,SAASC,QAAS7H,KAAKiP,YpB9H/B,iB,GoB5CqB9F,aCD7BwI,G,YAGjB,WAAYjL,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiL,aAAc,IAElB,EAAKC,aAAe,EAAKA,aAAa/K,KAAlB,gBACpB,EAAKgL,eAAe,EAAKA,eAAehL,KAApB,gBANL,E,iFASE,IAAD,OAChBkB,EAAsBpC,yBACtB6L,GAAgBM,kBAAkBjM,MAAK,SAAAC,GACnC,EAAK2C,SAAS,CACVkJ,aAAc7L,EAAS1G,UAG1B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,mCAU9B4K,GACTxR,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,gBACVhC,MAAO,CAAE6K,SAAUA,O,uCAOnB7M,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,gBAEAS,MAAM,yB,+BAIJ,IAAD,OAEL,OACI,oCACK,2BAAIlJ,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC7B,6BACI,4BAAQgB,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAK8R,gBrBgB3D,oBqBhB8G,6BAAM,8BAGlI,yBAAKvK,UAAU,gBAEX,4BrBUO,iBqBTP,2BAAOiE,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4BrBGH,iBqBFG,4BrBGD,mBqBFC,4BrBHA,2BqBIA,4BrBHA,0BqBIA,4BrBHA,2BqBIA,4BrBHA,8BqBIA,4BrBDK,4BqBKb,+BAEQtM,KAAK2G,MAAMiL,aAAalH,KAAI,SAAA8G,GAAQ,OAChC,wBAAIxO,IAAKwO,EAASQ,WAAYnK,QAAS,kBAAM,EAAKgK,aAAaL,KAC3D,4BAAKA,EAASJ,cACd,4BAAKI,EAASH,gBACd,4BAAKG,EAAS1G,MAAME,UACpB,4BAAKwG,EAAS1G,MAAMG,UACpB,4BAAKuG,EAAS1G,MAAMI,UACpB,4BAAKsG,EAAS1G,MAAMC,UACpB,4BAAKyG,EAASF,iC,GA3FHnI,aCE9B8I,G,YAErB,WAAYvL,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACT6K,SAAU,CACVJ,aAAa,GACbC,eAAe,GACfvG,MAAO,CACHE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVH,SAAU,IAEduG,oBAAqB,KAGzB,EAAKtC,gBAAgB,EAAKA,gBAAgBlI,KAArB,gBACrB,EAAK4I,WAAW,EAAKA,WAAW5I,KAAhB,gBAhBF,E,iFAoBdkB,EAAsBpC,yBACtB5F,KAAK0I,SAAS,CACV8I,SAASxR,KAAK0G,MAAMgG,SAAS/F,MAAM6K,WAEvCjT,IAAE,uBAAuByI,SAAS,CAC9BC,OAAQ,GACRC,MAAO,CACH,0BAA2B,CACvBE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,0BAA2B,CACvBiB,aAAa,EACbjB,UAAW,KAEf,0BAA2B,CACvBiB,aAAa,EACbjB,UAAW,KAEf,0BAA2B,CACvBiB,aAAa,EACbjB,UAAW,KAEf,wBAAyB,CACrB7G,UAAU,EACV6G,UAAW,GAEf,0BAA2B,CACvB7G,UAAU,EACV6G,UAAW,GAEf,+BAAgC,CAC5B7G,UAAU,EACVmK,SAAQ,IAGhBlK,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAKdb,GAAQ,IACd+O,EAAaxR,KAAK2G,MAAlB6K,SAEoB,0BAAtB/O,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAM6K,SAASJ,aAAe3O,EAAMuK,OAAO3J,OAE1B,4BAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAM6K,SAASH,eAAiB5O,EAAMuK,OAAO3J,OAE5B,4BAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAM6K,SAAS1G,MAAME,SAAWvI,EAAMuK,OAAO3J,OAE5B,4BAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAM6K,SAAS1G,MAAMG,SAAWxI,EAAMuK,OAAO3J,OAE5B,4BAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAM6K,SAAS1G,MAAMI,SAAWzI,EAAMuK,OAAO3J,OAE5B,4BAAtBZ,EAAMuK,OAAOxF,KACbxH,KAAK2G,MAAM6K,SAAS1G,MAAMC,SAAWtI,EAAMuK,OAAO3J,MAEvB,iCAAtBZ,EAAMuK,OAAOxF,OAClBxH,KAAK2G,MAAM6K,SAASF,oBAAsB7O,EAAMuK,OAAO3J,OAY3DrD,KAAK0I,SACD,CACI8I,e,mCAMC,IAAD,OAEL7M,UAAUC,OAELrG,IAAE,uBAAuBwJ,SAEzB0J,GAAgBI,aAAa7R,KAAK2G,MAAM6K,UAAU1L,MAAK,SAAAC,GACnD,EAAKW,MAAM8B,QAAQC,KAAnB,wBAAyC1C,EAAS1G,KAAKuH,UACvD/C,QAAQC,IAAI,cAGXkC,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAY3CsC,MAAM,gD,+BAOd,OACI,oCACC,4BtBlF0B,mBsBmFf,0BAAM1B,KAAK,qBAAqBC,GAAG,sBACnC,6BACQ,+BtBhFK,gBsBgFL,MACA,2BAAOG,KAAK,OAAOJ,KAAK,wBAAwBnE,MAAOrD,KAAK2G,MAAM6K,SAASJ,aAAcnE,SAAUjN,KAAKgP,mBAE5G,6BAAM,6BACN,6BACI,+BtBpFO,kBsBoFP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,0BAA0BnE,MAAOrD,KAAK2G,MAAM6K,SAASH,eAAgBpE,SAAUjN,KAAKgP,mBAEhH,6BAAM,6BACN,6BACI,+BtB9FQ,0BsB8FR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,0BAA0BnE,MAAOrD,KAAK2G,MAAM6K,SAAS1G,MAAME,SAAUiC,SAAUjN,KAAKgP,mBAEhH,6BAAM,6BACN,6BACI,+BtBlGQ,yBsBkGR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,0BAA0BnE,MAAOrD,KAAK2G,MAAM6K,SAAS1G,MAAMG,SAAUgC,SAAUjN,KAAKgP,mBAEhH,6BAAM,6BACN,6BACI,+BtBtGQ,0BsBsGR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,0BAA0BnE,MAAOrD,KAAK2G,MAAM6K,SAAS1G,MAAMI,SAAU+B,SAAUjN,KAAKgP,mBAEhH,6BAAM,6BACN,6BACI,+BtB1GQ,6BsB0GR,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,0BAA0BnE,MAAOrD,KAAK2G,MAAM6K,SAAS1G,MAAMC,SAAUkC,SAAUjN,KAAKgP,mBAEhH,6BAAM,6BACN,6BACI,+BtB5Ga,yBsB4Gb,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,+BAA+BnE,MAAOrD,KAAK2G,MAAM6K,SAASF,oBAAqBrE,SAAUjN,KAAKgP,mBAE1H,6BAAM,6BACN,6BACI,4BAAQpH,KAAK,SAASC,QAAS7H,KAAK0P,YtB/I/B,iB,GsB5CwBvG,aCiBtC,O,mGApBAE,GACP,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,oBAAwC4F,EAAM,M,0CAKrD,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,2BAA+C,M,6CAItD,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,8BAAkD,M,kCAIjD4F,GACR,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,qBAAwC4F,EAAK,Q,MCVvC6I,G,YAEjB,WAAYxL,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTmE,MAAO,GAGP0G,SAAU,CACNQ,WAAY,IAEhBxN,SAAU,CACNC,WAAY,IAEhB0N,aAAc,GACdP,aAAc,IAIlB,EAAK3C,WAAa,EAAKA,WAAWnI,KAAhB,gBAClB,EAAKkI,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBAlBR,E,iFAqBE,IAAD,OAChBkB,EAAsBpC,yBACtBuJ,EAAgBiD,wBAAwBtM,MAAK,SAAAC,GACzC,EAAK2C,SAAS,CACVyJ,aAAcpM,EAAS1G,UAG1B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAMvC6K,GAAgBY,wBAAwBvM,MAAK,SAAAC,GACzC,EAAK2C,SAAS,CACVkJ,aAAc7L,EAAS1G,UAG1B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAOvCrI,IAAE,gBAAgByI,SAAS,CACvBC,OAAQ,GACRC,MAAO,CACH,iBAAkB,CACdE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CAEdiB,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CAEdiB,aAAa,EACbjB,UAAW,KAEf,iBAAkB,CAEdiB,aAAa,EACbjB,UAAW,KAEf,sBAAuB,CACnB7G,UAAU,GAEd,sBAAuB,CACnBA,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAKdb,GACc,mBAAtBA,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMmE,MAAME,SAAWvI,EAAMuK,OAAO3J,OAEnB,mBAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMmE,MAAMG,SAAWxI,EAAMuK,OAAO3J,OACjB,mBAAtBZ,EAAMuK,OAAOxF,OACfxH,KAAK2G,MAAMmE,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACjB,mBAAtBZ,EAAMuK,OAAOxF,OACfxH,KAAK2G,MAAMmE,MAAMC,SAAWtI,EAAMuK,OAAO3J,OAEnB,wBAAtBZ,EAAMuK,OAAOxF,KACbxH,KAAK2G,MAAM6K,SAASQ,WAAavP,EAAMuK,OAAO3J,MACjB,wBAAtBZ,EAAMuK,OAAOxF,OACpBxH,KAAK2G,MAAMnC,SAASC,WAAahC,EAAMuK,OAAO3J,OAd/B,IAgBbmO,EAAaxR,KAAK2G,MAAlB6K,SACNxR,KAAK0I,SACD,CACI8I,e,mCAIE,IAAD,OAEL7M,UAAUC,OAENrG,IAAE,gBAAgBwJ,SAClBuK,GAAeC,WAAWvS,KAAK2G,OAAOb,MAAK,SAAAC,GACvC,EAAKW,MAAM8B,QAAQC,KAAnB,uBAAwC1C,EAAS1G,KAAKuH,aAIrDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAS3CsC,MAAM,gD,+BAIJ,IACEiJ,EAAiBnS,KAAK2G,MAAtBwL,aACJK,EAAgBL,EAAazT,OAAS,GACnCyT,EAAazH,KAAI,SAACC,EAAMC,GACvB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKlG,YAAakG,EAAKS,gBAEnDpL,MAEC4R,EAAiB5R,KAAK2G,MAAtBiL,aACJa,EAAgBb,EAAalT,OAAS,GACnCkT,EAAalH,KAAI,SAACgI,EAAS9H,GAC1B,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOqP,EAAQV,YAAaU,EAAQ5H,MAAME,YAE/DhL,MACP,OAEI,oCACI,4BxBjGS,ewBkGT,0BAAMwH,KAAK,cAAcC,GAAG,eACxB,6BACI,+BxB1GO,yBwB0GP,MACA,2BAAOG,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BxB9GO,wBwB8GP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BxBlHO,yBwBkHP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BACN,6BACI,+BxBtHO,4BwBsHP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,iBAAiByF,SAAUjN,KAAKgP,mBAE5D,6BAAM,6BAEN,6BxB1HS,kBwB0HT,MACgC,4BAAQvH,GAAG,aAAaD,KAAK,sBAAsByF,SAAUjN,KAAKgP,iBAC1F,4BAAQ3L,MAAM,IAAd,sBACCmP,IAGT,6BACA,6BxBhIS,kBwBgIT,MACgC,4BAAQ/K,GAAG,aAAaD,KAAK,sBAAsByF,SAAUjN,KAAKgP,iBAC1F,4BAAQ3L,MAAM,IAAd,sBACCoP,IAGT,6BACA,6BACI,4BAAQ7K,KAAK,SAASC,QAAS7H,KAAKiP,YxBhL/B,iB,GwBzCoB9F,aCL5BwJ,G,YAEjB,WAAYjM,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiM,YAAa,IAEjB,EAAKC,cAAgB,EAAKA,cAAc/L,KAAnB,gBACrB,EAAKgM,YAAc,EAAKA,YAAYhM,KAAjB,gBANJ,E,iFAQE,IAAD,OAChBkB,EAAsBpC,yBACtB0M,GAAeS,oBAAoBjN,MAAK,SAAAC,GACpC,EAAK2C,SAAS,CACVkK,YAAa7M,EAAS1G,UAGzB2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,sCAUnCjC,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,eAEAS,MAAM,yB,kCAIF8J,GACRnP,QAAQC,IAAIkP,GACZhT,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,eACVhC,MAAO,CAAEqM,QAASA,O,+BAKhB,IAAD,OAEL,OAEI,oCACI,2BAAIhT,KAAK0G,MAAMgB,MAAMC,OAAOf,SAE5B,6BACI,4BAAQgB,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAK6S,ezB2B5D,mByB3B6G,6BAAM,8BAGhI,yBAAKtL,UAAU,eAEX,4BzBuBM,gByBtBN,2BAAOiE,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4BzBWD,0ByBVC,4BzBWD,yByBVC,4BzBWD,0ByBVC,4BzBWD,6ByBVC,4BzBgBJ,YyBZJ,+BAEQtM,KAAK2G,MAAMiM,YAAYlI,KAAI,SAAAsI,GAAO,OAE9B,wBAAIhQ,IAAKgQ,EAAQC,UAAWpL,QAAS,kBAAM,EAAKiL,YAAYE,KACxD,4BAAKA,EAAQlI,MAAME,UACnB,4BAAKgI,EAAQlI,MAAMG,UACnB,4BAAK+H,EAAQlI,MAAMI,UACnB,4BAAK8H,EAAQlI,MAAMC,UACnB,4BAC8B,QAA7BiI,EAAQvG,OAAOtH,WAAuB,SAAW,wB,GAxFxCgE,aCK7B+J,G,YAEjB,WAAYxM,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTqM,QAAS,CACLC,UAAU,GACVnI,MAAO,CACHE,SAAU,GACVE,SAAU,GACVD,SAAU,GACVF,SAAU,GACVuF,QAAQ,IAEZkB,SAAU,CACN2B,UAAW,IAEf3O,SAAU,CACNC,WAAY,IAEhBgI,OAAQ,IAGZ0F,aAAa,GACbP,aAAa,IAGjB,EAAK5C,gBAAgB,EAAKA,gBAAgBlI,KAArB,gBACrB,EAAK4I,WAAW,EAAKA,WAAW5I,KAAhB,gBA1BD,E,iFA8BE,IAAD,OAChBkB,EAAsBpC,yBACtB5F,KAAK0I,SAAS,CACVsK,QAAShT,KAAK0G,MAAMgG,SAAS/F,MAAMqM,UAGvC7D,EAAgBiD,wBAAwBtM,MAAK,SAAAC,GACzC,EAAK2C,SAAS,CACVyJ,aAAcpM,EAAS1G,UAG1B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAMvC6K,GAAgBY,wBAAwBvM,MAAK,SAAAC,GACzC,EAAK2C,SAAS,CACVkJ,aAAc7L,EAAS1G,UAG1B2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAM/BrI,IAAE,sBAAsByI,SAAS,CAC7BC,OAAQ,GACRC,MAAO,CACH,yBAA0B,CACtBE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,yBAA0B,CAEtBiB,aAAa,EACbjB,UAAW,KAEf,yBAA0B,CAEtBiB,aAAa,EACbjB,UAAW,KAEf,yBAA0B,CAEtBiB,aAAa,EACbjB,UAAW,KAEf,8BAA+B,CAC3B7G,UAAU,GAEd,8BAA+B,CAC3BA,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAKtBb,GAAO,IACbuQ,EAAYhT,KAAK2G,MAAjBqM,QACoB,2BAAtBvQ,EAAMuK,OAAOxF,OACdxH,KAAK2G,MAAMqM,QAAQlI,MAAME,SAAWvI,EAAMuK,OAAO3J,OAE1B,2BAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMqM,QAAQlI,MAAMG,SAAWxI,EAAMuK,OAAO3J,OACzB,2BAAtBZ,EAAMuK,OAAOxF,OACfxH,KAAK2G,MAAMqM,QAAQlI,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACzB,2BAAtBZ,EAAMuK,OAAOxF,OACfxH,KAAK2G,MAAMqM,QAAQlI,MAAMC,SAAWtI,EAAMuK,OAAO3J,OAE3B,gCAAtBZ,EAAMuK,OAAOxF,OACbxH,KAAK2G,MAAMqM,QAAQxB,SAASQ,WAAavP,EAAMuK,OAAO3J,OAC/B,gCAAtBZ,EAAMuK,OAAOxF,KACdxH,KAAK2G,MAAMqM,QAAQxO,SAASC,WAAahC,EAAMuK,OAAO3J,MAC3B,mBAAtBZ,EAAMuK,OAAOxF,OAClBxH,KAAK2G,MAAMqM,QAAQvG,OAAShK,EAAMuK,OAAOvF,IAAyB,GAGtEzH,KAAK0I,SACD,CACIsK,c,mCAOC,IAAD,OACLrO,UAAUC,OAENrG,IAAE,sBAAsBwJ,SAC/BuK,GAAeQ,YAAY9S,KAAK2G,MAAMqM,SAASlN,MAAK,SAAAC,GAChD,EAAKW,MAAM8B,QAAQC,KAAnB,uBAAwC1C,EAAS1G,KAAKuH,aAIrDZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cASnCsC,MAAM,gD,+BAIJ,IACEiJ,EAAiBnS,KAAK2G,MAAtBwL,aACJK,EAAgBL,EAAazT,OAAS,GACnCyT,EAAazH,KAAI,SAACC,EAAMC,GACvB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKlG,YAAakG,EAAKS,gBAEnDpL,MAEC4R,EAAiB5R,KAAK2G,MAAtBiL,aACJa,EAAgBb,EAAalT,OAAS,GACnCkT,EAAalH,KAAI,SAACgI,EAAS9H,GAC1B,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOqP,EAAQV,YAAaU,EAAQ5H,MAAME,YAE/DhL,MAEP,OACI,oCAEI,4B1B/GY,kB0BgHZ,0BAAMwH,KAAK,oBAAoBC,GAAG,qBAC9B,6BACI,+B1B5HO,yB0B4HP,MACA,2BAAOG,KAAK,OAAOJ,KAAK,yBAAyBnE,MAAOrD,KAAK2G,MAAMqM,QAAQlI,MAAME,SAAUiC,SAAUjN,KAAKgP,mBAE9G,6BAAM,6BACN,6BACI,+B1BhIO,wB0BgIP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,yBAAyBnE,MAAOrD,KAAK2G,MAAMqM,QAAQlI,MAAMG,SAAUgC,SAAUjN,KAAKgP,mBAE9G,6BAAM,6BACN,6BACI,+B1BpIO,yB0BoIP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,yBAAyBnE,MAAOrD,KAAK2G,MAAMqM,QAAQlI,MAAMI,SAAU+B,SAAUjN,KAAKgP,mBAE9G,6BAAM,6BACN,6BACI,+B1BxIO,4B0BwIP,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,yBAAyBnE,MAAOrD,KAAK2G,MAAMqM,QAAQlI,MAAMC,SAAUkC,SAAUjN,KAAKgP,mBAE9G,6BAAM,6BACN,6B1BtNE,S0BsNF,IAEZ,2BAAOpH,KAAK,QAAQH,GAAG,kBAAkBD,KAAK,iBAAiBnE,OAAO,EAAM6J,SAAuC,IAA9BlN,KAAK2G,MAAMqM,QAAQvG,OAAiBQ,SAAUjN,KAAKgP,kBAF5H,UAGZ,2BAAOpH,KAAK,QAAQH,GAAG,kBAAkBD,KAAK,iBAAiBnE,OAAO,EAAO6J,SAAuC,IAA9BlN,KAAK2G,MAAMqM,QAAQvG,OAAkBQ,SAAUjN,KAAKgP,kBAH9H,aAKA,6BAAM,6BACN,6B1BjJS,kB0BiJT,MACgC,4BAAQvH,GAAG,aAAaD,KAAK,8BAA8BnE,MAAOrD,KAAK2G,MAAMqM,QAAQxO,SAAWxE,KAAK2G,MAAMqM,QAAQxO,SAASC,WAAa,GAAIwI,SAAUjN,KAAKgP,iBACpL,4BAAQ3L,MAAM,IAAd,sBACCmP,IAGT,6BACA,6B1BvJS,kB0BuJT,MACgC,4BAAQ/K,GAAG,aAAaD,KAAK,8BAA8BnE,MAAOrD,KAAK2G,MAAMqM,QAAQxB,SAAWxR,KAAK2G,MAAMqM,QAAQxB,SAASQ,WAAa,GAAI/E,SAAUjN,KAAKgP,iBACpL,4BAAQ3L,MAAM,IAAd,sBACCoP,IAGT,6BAAM,6BAGN,6BACI,4BAAQ7K,KAAK,SAASC,QAAS7H,KAAK0P,Y1BxM/B,iB,G0B1CuBvG,aCcrC,O,0GAnBOE,GACd,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,2BAA+C4F,EAAM,M,iDAK5D,OAAOtF,IAAM8B,IAAN,UAAapC,EAAb,kCAAsD,M,oDAI7D,OAAOM,IAAM8B,IAAN,UAAapC,EAAb,qCAAyD,M,yCAGjD4F,GACf,OAAOtF,IAAMuF,IAAN,UAAa7F,EAAb,4BAAgD4F,EAAM,Q,MCXhD+J,G,YAEjB,WAAY1M,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT0M,eAAgB,CACZvI,MAAO,CACHE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVH,SAAU,IAEduI,0BAA2B,IAE/BC,mBAAoB,IAGxB,EAAKvE,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAKmI,WAAa,EAAKA,WAAWnI,KAAhB,gBAhBH,E,iFAoBE,IAAD,OAChBkB,EAAsBpC,yBACtB4N,GAAsBC,8BAA8B3N,MAAK,SAAAC,GAErD,EAAK2C,SAAS,CACV6K,mBAAoBxN,EAAS1G,UAGhC2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAMvCrI,IAAE,uBAAuByI,SAAS,CAC9BC,OAAQ,GACRC,MAAO,CACH,gCAAiC,CAC7BE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,MAGnB5G,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,sCAIdb,GACc,kCAAtBA,EAAMuK,OAAOxF,OAEbxH,KAAK2G,MAAM0M,eAAevI,MAAME,SAAWvI,EAAMuK,OAAO3J,OAElC,kCAAtBZ,EAAMuK,OAAOxF,OAEbxH,KAAK2G,MAAM0M,eAAevI,MAAMG,SAAWxI,EAAMuK,OAAO3J,OAChC,kCAAtBZ,EAAMuK,OAAOxF,OAEfxH,KAAK2G,MAAM0M,eAAevI,MAAMI,SAAWzI,EAAMuK,OAAO3J,OACjC,kCAAtBZ,EAAMuK,OAAOxF,KAEdxH,KAAK2G,MAAM0M,eAAevI,MAAMC,SAAWtI,EAAMuK,OAAO3J,MAC5B,6CAAtBZ,EAAMuK,OAAOxF,OACnBxH,KAAK2G,MAAM0M,eAAeC,0BAA4B5E,MAAMC,KAAKlM,EAAMuK,OAAO4B,iBAAiB,SAACjE,GAAD,OAAUA,EAAKtH,UAf/F,IAmBbgQ,EAAmBrT,KAAK2G,MAAxB0M,eACNrT,KAAK0I,SACD,CACI2K,qB,mCAKE,IAAD,OACL1O,UAAUC,OACNrG,IAAE,uBAAuBwJ,UACzBlE,QAAQC,IAAI9D,KAAK2G,OACjB6M,GAAsBE,kBAAkB1T,KAAK2G,MAAM0M,gBAAgBvN,MAAK,SAAAC,GACpE,EAAKW,MAAM8B,QAAQC,KAAnB,iCAAkD1C,EAAS1G,KAAKuH,aAI/DZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,eAU3CsC,MAAM,gD,+BAKJ,IAEEqK,EAAuBvT,KAAK2G,MAA5B4M,mBACJI,EAAsBJ,EAAmB7U,OAAS,GAC/C6U,EAAmB7I,KAAI,SAACC,EAAMC,GAC7B,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKiJ,kBAAmBjJ,EAAKG,MAAME,YAE/DhL,MACP,OACI,oCACI,4B5BzDiB,uB4B0DjB,0BAAMwH,KAAK,qBAAqBC,GAAG,sBAC/B,6BACI,+B5B1Dc,iC4B0Dd,MACA,2BAAOG,KAAK,OAAOJ,KAAK,gCAAgCyF,SAAUjN,KAAKgP,mBAE3E,6BAAM,6BACN,6BACI,+B5B9Dc,gC4B8Dd,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCyF,SAAUjN,KAAKgP,mBAE3E,6BAAM,6BACN,6BACI,+B5BlEc,iC4BkEd,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCyF,SAAUjN,KAAKgP,mBAE3E,6BAAM,6BACN,6BACI,+B5BtEc,oC4BsEd,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCyF,SAAUjN,KAAKgP,mBAE3E,6BAAM,6BAEN,6BAEI,oC5B1EiB,8B4B0EjB,QAA0D,4BAAQvH,GAAG,mBAAmBD,KAAK,2CAA2CgH,SAAS,OAAOvB,SAAUjN,KAAKgP,iBACnK,4BAAQ3L,MAAM,IAAd,sBACCsQ,IAKT,6BAAM,6BACN,6BACI,4BAAQ/L,KAAK,SAASC,QAAS7H,KAAKiP,Y5B1I/B,iB,G4B3C2B9F,aCHnC0K,G,YAEjB,WAAYnN,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT4M,mBAAoB,IAExB,EAAKO,mBAAmB,EAAKA,mBAAmBhN,KAAxB,gBACxB,EAAKiN,qBAAqB,EAAKA,qBAAqBjN,KAA1B,gBANX,E,iFASE,IAAD,OAChBkB,EAAsBpC,yBACtB4N,GAAsBQ,2BAA2BlO,MAAK,SAAAC,GAElD,EAAK2C,SAAS,CACV6K,mBAAoBxN,EAAS1G,UAGhC2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,6CAUnCjC,UAAUC,OACV5E,KAAK0G,MAAM8B,QAAQC,KAAnB,sBAEAS,MAAM,yB,yCAKKmK,GACfrT,KAAK0G,MAAM8B,QAAQC,KAAK,CACpBE,SAAU,sBACVhC,MAAO,CAAE0M,eAAgBA,O,+BAKvB,IAAD,OACL,OACI,oCACK,2BAAIrT,KAAK0G,MAAMgB,MAAMC,OAAOf,SAC7B,6BACI,4BAAQgB,KAAK,SAAS0D,MAAO,CAAEe,WAAY,UAAYxE,QAAS7H,KAAK+T,sB7BwCpD,2B6BxCoH,6BAAM,8BAG/I,yBAAKxM,UAAU,sBAEX,4B7BkCc,wB6BjCd,2BAAOiE,OAAO,IAAIc,MAAM,UACpB,+BACI,4BACI,4B7B0BM,kC6BzBN,4B7B0BM,iC6BzBN,4B7B0BM,kC6BzBN,4B7B0BM,qC6BzBN,4B7BlBO,Y6BsBf,+BAEQtM,KAAK2G,MAAM4M,mBAAmB7I,KAAI,SAAA2I,GAAc,OAE5C,wBAAIrQ,IAAKqQ,EAAeO,iBAAkB/L,QAAS,kBAAM,EAAKiM,mBAAmBT,KAC7E,4BAAKA,EAAevI,MAAME,UAC1B,4BAAKqI,EAAevI,MAAMG,UAC1B,4BAAKoI,EAAevI,MAAMI,UAC1B,4BAAKmI,EAAevI,MAAMC,UAC1B,4BAAyC,QAApCsI,EAAe5G,OAAOtH,WAAuB,SAAW,wB,GAtF5CgE,aCEpC8K,G,YAEjB,WAAYvN,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT0M,eAAgB,CAEZO,iBAAkB,GAClB9I,MAAO,CACHE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVH,SAAU,IAEd0B,OAAQ,IAGZ8G,mBAAoB,IAExB,EAAKvE,gBAAkB,EAAKA,gBAAgBlI,KAArB,gBACvB,EAAK4I,WAAa,EAAKA,WAAW5I,KAAhB,gBAlBH,E,iFAqBE,IAAD,OAChBkB,EAAsBpC,yBAGtB4N,GAAsBC,8BAA8B3N,MAAK,SAAAC,GAErD,EAAK2C,SAAS,CACV6K,mBAAoBxN,EAAS1G,UAGhC2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAMvC5G,KAAK0I,SAAS,CACV2K,eAAgBrT,KAAK0G,MAAMgG,SAAS/F,MAAM0M,iBAE9C9U,IAAE,6BAA6ByI,SAAS,CACpCC,OAAQ,GACRC,MAAO,CACH,gCAAiC,CAC7BE,UAAU,EACV8H,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,KAEf,gCAAiC,CAE7BiB,aAAa,EACbjB,UAAW,MAGnB5G,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,mCAIhB,IAAD,OAELqB,UAAUC,QAENrG,IAAE,6BAA6BwJ,SAE/ByL,GAAsBM,mBAAmB9T,KAAK2G,MAAM0M,gBAAgBvN,MAAK,SAAAC,GAErE,EAAKW,MAAM8B,QAAQC,KAAnB,iCAAkD1C,EAAS1G,KAAKuH,aAG/DZ,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,gB,sCAUnCnE,GAAQ,IACd4Q,EAAmBrT,KAAK2G,MAAxB0M,eACoB,kCAAtB5Q,EAAMuK,OAAOxF,OAEbxH,KAAK2G,MAAM0M,eAAevI,MAAME,SAAWvI,EAAMuK,OAAO3J,OAElC,kCAAtBZ,EAAMuK,OAAOxF,OAEbxH,KAAK2G,MAAM0M,eAAevI,MAAMG,SAAWxI,EAAMuK,OAAO3J,OAChC,kCAAtBZ,EAAMuK,OAAOxF,OAEfxH,KAAK2G,MAAM0M,eAAevI,MAAMI,SAAWzI,EAAMuK,OAAO3J,OAChC,kCAAtBZ,EAAMuK,OAAOxF,OAEfxH,KAAK2G,MAAM0M,eAAevI,MAAMC,SAAWtI,EAAMuK,OAAO3J,OACjC,6CAAtBZ,EAAMuK,OAAOxF,KACdxH,KAAK2G,MAAM0M,eAAeC,0BAA4B5E,MAAMC,KAAKlM,EAAMuK,OAAO4B,iBAAiB,SAACjE,GAAD,OAAUA,EAAKtH,SACjF,0BAAtBZ,EAAMuK,OAAOxF,OACpBxH,KAAK2G,MAAM0M,eAAe5G,OAA6B,2BAApBhK,EAAMuK,OAAOvF,IAEpDzH,KAAK0I,SACD,CACI2K,qB,+BAKF,IACEE,EAAuBvT,KAAK2G,MAA5B4M,mBACJI,EAAsBJ,EAAmB7U,OAAS,GAC/C6U,EAAmB7I,KAAI,SAACC,EAAMC,GAC7B,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKiJ,kBAAmBjJ,EAAKG,MAAME,YAE/DhL,MACP,OACI,oCACI,4B9BzDoB,0B8B0DpB,0BAAMwH,KAAK,2BAA2BC,GAAG,4BACrC,6BACI,+B9B3Dc,iC8B2Dd,MACA,2BAAOG,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAM0M,eAAevI,MAAME,SAAUiC,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BACI,+B9B/Dc,gC8B+Dd,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAM0M,eAAevI,MAAMG,SAAUgC,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BACI,+B9BnEc,iC8BmEd,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAM0M,eAAevI,MAAMI,SAAU+B,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6BACI,+B9BvEc,oC8BuEd,MACA,2BAAOpH,KAAK,OAAOJ,KAAK,gCAAgCnE,MAAOrD,KAAK2G,MAAM0M,eAAevI,MAAMC,SAAUkC,SAAUjN,KAAKgP,mBAE5H,6BAAM,6BACN,6B9BnKE,S8BmKF,IAEA,2BAAOpH,KAAK,QAAQH,GAAG,yBAAyBD,KAAK,wBAAwBnE,OAAO,EAAM6J,SAA8C,IAArClN,KAAK2G,MAAM0M,eAAe5G,OAAiBQ,SAAUjN,KAAKgP,kBAF7J,UAGA,2BAAOpH,KAAK,QAAQH,GAAG,yBAAyBD,KAAK,wBAAwBnE,OAAO,EAAO6J,SAA8C,IAArClN,KAAK2G,MAAM0M,eAAe5G,OAAkBQ,SAAUjN,KAAKgP,kBAH/J,aAKA,6BAAK,6BACD,6BACI,oC9B/Ea,8B8B+Eb,QAA0D,4BAAQvH,GAAG,mBAAmBD,KAAK,2CAA2CgH,SAAS,OAAOnL,MAAOrD,KAAK2G,MAAM0M,eAAeC,0BAA2BrG,SAAUjN,KAAKgP,iBAC/N,4BAAQ3L,MAAM,IAAd,sBACCsQ,IAGT,6BAAK,6BAEL,6BACI,4BAAQ/L,KAAK,SAASC,QAAS7H,KAAK0P,Y9B7InC,iB,G8B7C8BvG,aCQ5C,O,uGAXI+K,GAEX,OADArQ,QAAQC,IAAIoQ,GACLnQ,IAAM8B,IAAN,UAAapC,EAAb,yCAAqDyQ,GAAa,M,uCAKzE,OAAOnQ,IAAM8B,IAAN,UAAapC,EAAb,uBAA2C,Q,MCFrC0Q,G,YAEjB,WAAYzN,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyN,YAAa,GACbxN,QAAS,IAEb,EAAKyN,gBAAkB,EAAKA,gBAAgBvN,KAArB,gBANR,E,iFASE,IAAD,OAChBkB,EAAsBpC,yBACtB0O,GAAeC,iBAAiBzO,MAAK,SAAAC,GACjClC,QAAQC,IAAIiC,EAAS1G,MACrB,EAAKqJ,SAAS,CACV0L,YAAarO,EAAS1G,UAGzB2G,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBAKL,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,cAOvCrI,IAAE,iBAAiByI,SAAS,CACxBC,OAAQ,GACRC,MAAO,CACH,UAAa,CACTE,UAAU,Q,+BAMhB,IACEgN,EAAgBpU,KAAK2G,MAArByN,YACJI,EAAeJ,EAAY1V,OAAS,GACjC0V,EAAY1J,KAAI,SAACC,EAAMC,GACtB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKuJ,WAAYvJ,EAAKG,MAAME,YAExDhL,MACP,OACI,6BACI,4BAAKA,KAAK2G,MAAMC,SAChB,4BhCzBY,yBgCyBa,6BACzB,0BAAMY,KAAK,eAAeC,GAAG,gBhC5BxB,UgC4BL,MACgB,4BAAQA,GAAG,YAAYD,KAAK,YAAYgH,UAAU,GACzDgG,GACI,6BAAS,6BAClB,4BAAQ5M,KAAK,SAASC,QAAS7H,KAAKqU,iBhCnC9B,gB,wCgCyCH,IAAD,OACd,GAAI1P,UAAUC,QACV,GAAIrG,IAAE,iBAAiBwJ,QAEnB,IADA,IAAI0M,EAAalW,IAAE,cAAcuJ,MACxB4M,EAAI,EAAGA,EAAID,EAAW/V,OAAQgW,IACnC1M,EAAsBpC,yBACtB0O,GAAeK,eAAeF,EAAWC,IACpC5O,MAAK,SAAAC,GACF,IAAIsD,EAAOtD,EAAS1G,KAGhBuV,EAAcC,UAAUC,KAAK,OAAQ,GACzCF,EAAYG,gBAAkB,SAAUxU,GACpC,IAAIyU,EAAMzU,EAAEyM,OAAOiI,OACdD,EAAIE,iBAAiBC,SAAS,gBACrBH,EAAII,kBAAkB,cAAe,CAAEC,QAAS,KAAMC,eAAe,KAGvFV,EAAYW,UAAY,SAAUhV,GAE9B,IACIiV,EAFEjV,EAAEyM,OAAOiI,OACOQ,YAAY,CAAC,eAAgB,aACzBC,YAAY,eAClCC,EAAgB3Q,IAASC,IAAIsD,QAAQqN,KAAKC,UAAUxM,GAAO3F,GAC3DiH,EAAO,CACPlD,GAAI4B,EAAK6K,UAAY,KAAO7K,EAAKyM,eACjC5B,UAAW7K,EAAK6K,UAChB6B,QAAS1M,EAAKyM,eACdE,YAAchR,IAASC,IAAIsD,QAASc,EAAKyB,MAAMmL,QAAUvS,GAAayB,WACtE+Q,YAAaP,EAAcxQ,YAE/BtB,QAAQC,IAAI6G,GACZ,IAAIwL,EAAaX,EAAQlM,IAAIqB,GAE7BwL,EAAWC,QAAU,SAAU3T,KAG/B0T,EAAWZ,UAAY,SAAU9S,GAC7BzC,KAAK0I,SAAS,CACV9B,QAAQ,GAAD,OhCvEZ,oCgCyEDE,KAAK9G,OACT8G,KAAK,MAEVd,OACG,SAAAC,GACI,OAAQA,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,mBAS7DsC,MAAM,kD,GAlIwCC,a,oBCDrCkN,G,YAEjB,WAAY3P,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,GACTwN,YAAa,IAEjB,EAAKkC,cAAgB,EAAKA,cAAcxP,KAAnB,gBACrB,EAAKyP,qBAAuB,EAAKA,qBAAqBzP,KAA1B,gBAPb,E,iFAWfvI,IAAE,eAAe0C,OACjB1C,IAAE,cAAcY,OAChBZ,IAAE,eAAeyI,SAAS,CACtBC,OAAQ,GACRC,MAAO,CACH,UAAa,CACTE,UAAU,Q,+BAMhB,IACEgN,EAAgBpU,KAAK2G,MAArByN,YACJI,EAAeJ,EAAY1V,OAAS,GACjC0V,EAAY1J,KAAI,SAACC,EAAMC,GACtB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKlD,IAAKkD,EAAKnD,QAE3CxH,MACP,OACI,6BACI,4BAAKA,KAAK2G,MAAMC,SAChB,4BjCFU,uBiCEa,6BACvB,0BAAMa,GAAG,aAAaD,KAAK,cACvB,yBAAKC,GAAG,aACJ,2BAAOG,KAAK,SAAS,6BAAS,6BAC9B,4BAAQA,KAAK,SAASC,QAAS7H,KAAKsW,ejCLpC,WiCOJ,yBAAK7O,GAAG,cjCHA,4BiCGR,MACuB,4BAAQA,GAAG,YAAYD,KAAK,YAAYgH,UAAU,GAChEgG,GACI,6BAAS,6BAClB,4BAAQ5M,KAAK,SAASC,QAAS7H,KAAKuW,sBjCnClC,e,sCiC2ClB,GAAIxX,OAAOyX,MAAQzX,OAAO0X,YAAc1X,OAAO2X,UAAY3X,OAAO4X,KAC9D,QAA2DC,GAAvD9X,SAAS+X,cAAc,oBAAoBC,MAAM,GACjD5N,MAAM,4BACH,CACH,IAAI6N,EAAOjY,SAAS+X,cAAc,oBAAoBC,MAAM,GAGnC,OAFVC,EAAKvP,KACUwP,MAAM,KACjB,GACfC,KAAMC,UAAUH,GAAMjR,KAAK,SAAUqR,GACjC,IAAIvM,EAAI,EACJwM,EAAW,GACXtU,EAAO,EACXD,OAAOwU,KAAKF,EAAIL,OAAOQ,SAAQ,SAAUC,GACrCzU,OAEJD,OAAOwU,KAAKF,EAAIL,OAAOQ,QAAQ,SAAUC,GACrCJ,EAAIL,MAAMS,GAAUC,MAAM,UAAU1R,KAAK,SAAU2R,GAC/C7M,IACA,IAAI8M,EAAkB9B,KAAK+B,MAAMF,GAE7BG,EADQ5S,IAASC,IAAIC,QAAQwS,EAAgBxB,YAAaxS,GACxCyB,SAASH,IAASI,IAAIC,MACxCwS,EAA2BjC,KAAK+B,MAAMC,GAC1CR,EAASxM,GAAK,CACVnD,GAAI8P,EACJ/P,KAAMqQ,EAAyB/M,MAAMmL,QAAU,KAAO4B,EAAyB/B,gBAE/ElL,IAAM9H,IACN9C,KAAK0I,SAAS,CACV0L,YAAagD,IAGjB7Y,IAAE,eAAeY,OACjBZ,IAAE,cAAc0C,SAEtB6F,KAAK9G,QAET8G,KAAK9G,QAET8G,KAAK9G,OAEPkJ,MAAM,6B,6CASlB,GAAI3K,IAAE,eAAewJ,SACbhJ,OAAOyX,MAAQzX,OAAO0X,YAAc1X,OAAO2X,UAAY3X,OAAO4X,KAC9D,QAA2DC,GAAvD9X,SAAS+X,cAAc,oBAAoBC,MAAM,GACjD5N,MAAM,4BACH,CACH,IAAI6N,EAAOjY,SAAS+X,cAAc,oBAAoBC,MAAM,GAGxDlC,EAAcC,UAAUC,KAAK,OAAQ,GACrCgD,EAAiBvZ,IAAE,cAAcuJ,MACrC8M,EAAYG,gBAAkB,SAAUxU,GACpC,IAAIyU,EAAMzU,EAAEyM,OAAOiI,OACdD,EAAIE,iBAAiBC,SAAS,gBACrBH,EAAII,kBAAkB,cAAe,CAAEC,QAAS,KAAMC,eAAe,KAGvFV,EAAYW,UAAY,SAAUhV,GACxBA,EAAEyM,OAAOiI,OACOQ,YAAY,CAAC,eAAgB,aACzBC,YAAY,eACtCuB,KAAMC,UAAUH,GAAMjR,MAAK,SAAUqR,GACjCtU,OAAOwU,KAAKF,EAAIL,OAAOQ,SAAQ,SAAUC,GAErCJ,EAAIL,MAAMS,GAAUC,MAAM,UAAU1R,MAAK,SAAU2R,GAC/C,IAAK,IAAI/C,EAAI,EAAGA,EAAIoD,EAAepZ,OAAQgW,IACvC,GAAIoD,EAAepD,IAAM6C,EAAU,CAE/B,IAEIQ,EAHExX,EAAEyM,OAAOiI,OACQQ,YAAY,CAAC,eAAgB,aACxBC,YAAY,eACHpM,IAAIsM,KAAK+B,MAAMF,IACpDM,EAAsB3B,QAAU,SAAU3T,KAE1CsV,EAAsBxC,UAAY,SAAU9S,eAQhEzC,KAAK0I,SAAS,CACV9B,QAAQ,GAAD,OjC1GF,gCiC4GTrI,IAAE,eAAe0C,OACjB1C,IAAE,cAAcY,QAClB2H,KAAK9G,W,GApJ6BmJ,a,qBCCnC6O,G,YAEjB,WAAYtR,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyN,YAAa,GACbxN,QAAS,IAEb,EAAKqR,cAAgB,EAAKA,cAAcnR,KAAnB,gBANN,E,iFAUf,IAEI8N,EAAcC,UAAUC,KAAK,OAAQ,GACzCF,EAAYG,gBAAkB,SAAUxU,GACpC,IAAIyU,EAAMzU,EAAEyM,OAAOiI,OACdD,EAAIE,iBAAiBC,SAAS,gBACrBH,EAAII,kBAAkB,cAAe,CAAEC,QAAS,KAAMC,eAAe,KAGvFV,EAAYW,UAAY,SAAUhV,GAE9B,IAEI2X,EAHE3X,EAAEyM,OAAOiI,OACOQ,YAAY,CAAC,eAAgB,aACzBC,YAAY,eACbyC,SACrBC,EAAU,GACdF,EAAW9B,QAAU,SAAU3T,KAG/ByV,EAAW3C,UAAY,SAAU9S,GAC7B,IAAI4V,EACJA,EAAWH,EAAWjD,OACtB,IAAK,IAAIrK,EAAI,EAAGA,EAAIyN,EAAS3Z,OAAQkM,IAAK,CACtC,IACIoL,EADQhR,IAASC,IAAIC,QAAQmT,EAASzN,GAAGoL,YAAatS,GAClCyB,SAASH,IAASI,IAAIC,MAC9CxB,QAAQC,IAAIkS,GACZ,IAAIsC,EAAc,CACd9Q,KAAMwO,EAAY7Q,WAAa,KAAOkT,EAASzN,GAAGmL,QAClDtO,GAAI4Q,EAASzN,GAAGnD,IAEpB2Q,EAAQxN,GAAK0N,EAEjBtY,KAAK0I,SAAS,CACV0L,YAAagE,KAEnBtR,KAAK9G,OACT8G,KAAK9G,MACPzB,IAAE,eAAeyI,SAAS,CACtBC,OAAQ,GACRC,MAAO,CACH,UAAa,CACTE,UAAU,Q,+BAOhB,IACEgN,EAAgBpU,KAAK2G,MAArByN,YACJI,EAAeJ,EAAY1V,OAAS,GACjC0V,EAAY1J,KAAI,SAACC,EAAMC,GACtB,OACI,4BAAQ5H,IAAK4H,EAAGvH,MAAOsH,EAAKlD,IAAKkD,EAAKnD,QAE3CxH,MACP,OACI,6BACI,4BAAKA,KAAK2G,MAAMC,SAChB,4BlCzCU,uBkCyCa,6BACvB,0BAAMY,KAAK,aAAaC,GAAG,clCzCtB,UkCyCL,MACgB,4BAAQA,GAAG,YAAYD,KAAK,YAAYgH,UAAU,GACzDgG,GACI,6BAAS,6BAClB,4BAAQ5M,KAAK,SAASC,QAAS7H,KAAKiY,elC/ChC,c,sCkCsDhB,GAAI1Z,IAAE,eAAewJ,QAAS,CAC1B,IAAIoP,EAAM,IAAIF,KACVa,EAAiBvZ,IAAE,cAAcuJ,MACjCyQ,EAAqBha,IAAE,8BAA8Bia,UAAU9N,KAAI,SAAAC,GAAI,OAAIA,EAAK+C,QAGhFkH,EAAcC,UAAUC,KAAK,OAAQ,GACzCF,EAAYG,gBAAkB,SAAUxU,GACpC,IAAIyU,EAAMzU,EAAEyM,OAAOiI,OACdD,EAAIE,iBAAiBC,SAAS,gBACrBH,EAAII,kBAAkB,cAAe,CAAEC,QAAS,KAAMC,eAAe,KAGvFV,EAAYW,UAAY,SAAUhV,GAE9B,IAEI2X,EAHE3X,EAAEyM,OAAOiI,OACOQ,YAAY,CAAC,eAAgB,aACzBC,YAAY,eACbyC,SACzBD,EAAW9B,QAAU,SAAU3T,KAG/ByV,EAAW3C,UAAY,SAAU9S,GAC7B,IAAI4V,EACJA,EAAWH,EAAWjD,OACtB,IAAK,IAAIrK,EAAI,EAAGA,EAAIyN,EAAS3Z,OAAQkM,IAAK,CACtC,IAAK,IAAI8J,EAAI,EAAGA,EAAIoD,EAAepZ,OAAQgW,IACvC,GAAI2D,EAASzN,GAAGnD,IAAMqQ,EAAepD,GAAI,CACrC,IAAI+D,EAAM7C,KAAKC,UAAUwC,EAASzN,IAClCuM,EAAIJ,KAAKwB,EAAmB3N,GAAK,IAAM8N,SAAS9N,EAAI,GAAK,OAAQ6N,GAIrE7N,GAAKyN,EAAS3Z,OAAS,IACvByY,EAAIwB,cAAc,CACd/Q,KAAM,SACP9B,MAAK,SAAUnH,GACdia,KAAUC,OAAOla,EAAS,mBAE9BqB,KAAK0I,SAAS,CACV9B,QAAQ,GAAD,OlCrFN,oCkC2FfE,KAAK9G,OACT8G,KAAK9G,W,GAhIqCmJ,aC0QzC2P,G,YArOX,WAAYpS,GAAO,IAAD,8BACd,4CAAMA,KAEDC,MAAQ,CACTxG,QAAS6H,EAAsB+Q,sBAC/BC,WAAW,EACXC,cAAc,EACdC,YAAY,GAGhB,EAAKC,UAAY,KACjB,EAAKC,SAAW,EAAKC,UAAUvS,KAAf,gBAChB,EAAKwS,SAAW,EAAKC,UAAUzS,KAAf,gBAChB,EAAK0S,OAAS,EAAKC,QAAQ3S,KAAb,gBACd,EAAK4S,YAAc,EAAKA,YAAY5S,KAAjB,gBACnB,EAAK6S,aAAe,EAAKA,aAAa7S,KAAlB,gBAfN,E,uEAkBRvG,GACRsD,QAAQC,IAAI,qBAAsBvD,GAClCP,KAAK0I,SAAS,CAACwQ,YAAY,M,gCAGnB3Y,GACRsD,QAAQC,IAAI,iBAAkBvD,GAC9BP,KAAK0I,SAAS,CAACwQ,YAAY,M,8BAGrB3Y,GACNsD,QAAQC,IAAI,eAAgBvD,GACTP,KAAK2G,MAAMuS,WAE1BlZ,KAAK0G,MAAM8B,QAAQC,KAAK,MAE1BzI,KAAK0I,SAAS,CAACsQ,WAAW,IAC1BhZ,KAAKmZ,UAAUS,QACf5Z,KAAK0I,SAAS,CAACwQ,YAAY,O,oCAM7BlZ,KAAK0I,SAAS,CAACsQ,WAAW,M,qCAI1BhZ,KAAK0I,SAAS,CAACsQ,WAAW,IAC1BhZ,KAAK0G,MAAM8B,QAAQC,KAAK,O,+BAGjB,IAAD,OACEf,EAAU1H,KAAK0G,MAAfgB,MACR,OACE,oCACE,kBAAC,IAAD,CACEmS,IAAK,SAAAA,GAAS,EAAKV,UAAYU,GAC/BvW,QAASxE,SACTwa,SAAUtZ,KAAKsZ,SACfE,OAAQxZ,KAAKwZ,OACbJ,SAAUpZ,KAAKoZ,SACfU,SAAU,IACV3Z,QAASH,KAAK2G,MAAMxG,UAEpB,yBAAKoH,UAAU,IAGX,kBAAC,IAAD,KAGA,kBAAC,IAAD,CAAOwS,KAAK,kBAAkBC,OAAK,EAACC,UAAWxT,IAC3C,kBAAC,IAAD,CACIuT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,WACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAqBA,MANjD,KAQI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,oBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAqBA,MAVjD,KAYI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,WACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAqBA,MAdjD,KAgBI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,YACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAsBA,MAlBlD,KAqBI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,qBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAsBA,MAvBlD,KA0BI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,YACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAsBA,MA5BlD,KA+BI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,kBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAA4BA,MAjCxD,KAoCI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,WACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAqBA,MAtCjD,KAyCI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,YACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAsBA,MA3ClD,KA8CI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,qBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAsBA,MAhDlD,KAkDI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,YACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAsBA,MApDlD,KAsDI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,eACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAAyBA,MAxDrD,KA0DI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,gBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAA0BA,MA5DtD,KA8DI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,yBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAA0BA,MAhEtD,KAmEI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,qBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,EAA+BA,MArE3D,KAuEI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,sBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAkCA,MAzE9D,KA2EI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,+BACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAgCA,MA7E5D,KAiFI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,iBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAkBA,MAnF9C,KAqFI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,kBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA8BA,MAvF1D,KAyFI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,2BACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA4BA,MA3FxD,KA+FI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,eACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAyBA,MAjGrD,KAmGI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,gBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA4BA,MArGxD,KAuGI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,yBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA0BA,MAzGtD,KA2GI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,wBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAiCA,MA7G7D,KA+GI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,sBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA+BA,MAjH3D,KAmHI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,sBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA+BA,MArH3D,KAwHI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,cACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAwBA,MA1HpD,KA4HI,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,wBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAyBA,MA9HrD,KAgII,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,eACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA2BA,MAlIvD,KAoII,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,qBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAA+BA,MAtI3D,KAwII,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,kCACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAgCA,MA1I5D,KA4II,kBAAC,IAAD,CACIsT,OAAK,EAACD,KAAI,UAAKrS,EAAMqS,KAAX,sBACVG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAkCA,MA9I9D,Y,GApEKyT,IAAMhR,WChCNiR,G,YAEjB,WAAY1T,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,GACTjD,SAAU,EAAK+C,MAAMgG,SAAS/F,MAAMhD,UAExC,EAAKmG,cAAgB,EAAKA,cAAchD,KAAnB,gBACrB,EAAKuT,cAAgB,EAAKA,cAAcvT,KAAnB,gBAPN,E,iFAYfjD,QAAQC,IAAI,2BAA2B9D,KAAK0G,MAAMgG,SAAS/F,MAAMhD,UACjEE,QAAQC,IAAI,oBAEZvF,IAAE4E,UAAUC,UAAU,iBAAiB,WACnC,OAAI7E,IAAE,gBAAgBuJ,QAAUvJ,IAAE,uBAAuBuJ,QAK1D,mCACHvJ,IAAE,UAAUyI,SAAS,CACjBC,OAAQ,GACRC,MAAO,CACHqC,YAAa,CACTnC,UAAU,GAEdoC,YAAa,CACTpC,UAAU,GAEdiG,mBAAoB,CAChBjG,UAAU,EACVkG,eAAe,IAGvBjG,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,+BAO1B,OACI,yBAAKiE,UAAU,SACX,0BAAMC,KAAK,QAAQC,GAAG,SAClB,+CADJ,kBAEmB,2BAAOG,KAAK,WAAWH,GAAG,cAAcD,KAAK,gBAAgB,6BAAS,6BAFzF,kBAGmB,2BAAOI,KAAK,WAAWH,GAAG,cAAcD,KAAK,gBAAgB,6BAAS,6BAHzF,0BAI2B,2BAAOI,KAAK,WAAWH,GAAG,qBAAqBD,KAAK,uBAAuB,6BAAS,6BAC3G,kBAAC,SAAD,KAAQ,4BAAQI,KAAK,SAASC,QAAS7H,KAAK8J,eAApC,WACR,kBAAC,SAAD,KAAQ,4BAAQlC,KAAK,SAASC,QAAS7H,KAAKqa,eAApC,UAAkE,6BAAS,8BACnF,6BAAK,4BAAKra,KAAK2G,MAAMC,c,sCAMpB,IAAD,OACRrI,IAAE,UAAUwJ,UACRpD,UAAUC,QACVf,QAAQC,IAAI,qBAAqB9D,KAAK2G,MAAMhD,UAC5CsG,EAAYqQ,sBAAsBta,KAAK2G,MAAMhD,SAAUpF,IAAE,gBAAgBuJ,MAAOvJ,IAAE,gBAAgBuJ,OAC7FhC,MAAK,SAAAC,GACFlC,QAAQC,IAAIiC,EAAS1G,KAAKA,MAC1B,IAAIkG,EAAUnB,IAAW2B,EAAS1G,KAAK8E,OACvCF,aAAaqE,QAAQ,QAASvC,EAAS1G,KAAK8E,OAC5CF,aAAaqE,QAAQ,gBAAiB,UACtCrE,aAAaqE,QAAQ,SAAUtD,IAASC,IAAIsD,QAAShD,EAAQlB,OAAQc,WAAtC,UAAqDzB,KACpFO,aAAaqE,QAAQ,WAAYtD,IAASC,IAAIsD,QAAShD,EAAQjB,IAAKa,WAAnC,UAAkDzB,KACnFO,aAAaqE,QAAQ,WAAYtD,IAASC,IAAIsD,QAAShD,EAAQhB,KAAKX,SAAUuB,WAA7C,UAA4DzB,KAC7FO,aAAaqE,QAAQ,aAActD,IAASC,IAAIsD,QAAShD,EAAQhB,KAAKC,SAASC,WAAYU,WAAxD,UAAuEzB,KAC1G,EAAKgD,MAAM8B,QAAQC,KAAnB,8CAEHzC,OACG,SAAAC,GAGI,OAFApC,QAAQC,IAAImC,EAAMW,SAClB/C,QAAQC,IAAImC,EAAMyH,MACVzH,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,eAOrDsC,MAAM,iD,sCAMdlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,kC,GAtGoDU,aCLvCoR,G,YAEjB,WAAY7T,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,IAEb,EAAKkD,cAAgB,EAAKA,cAAchD,KAAnB,gBACrB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBANN,E,iFAUfvI,IAAE,UAAUyI,SAAS,CACjBC,OAAQ,GACRC,MAAO,CACHvD,SAAU,CACNyD,UAAU,IAGlBC,eAAgB,SAAUpB,EAAO3C,GAC7B2C,EAAMqB,YAAYhE,Q,+BAO1B,OACI,yBAAKiE,UAAU,SACX,0BAAMC,KAAK,QAAQC,GAAG,SAClB,+CADJ,cAEe,2BAAOG,KAAK,OAAOH,GAAG,WAAWD,KAAK,aAAa,6BAAS,6BACvE,kBAAC,SAAD,KAAQ,4BAAQI,KAAK,SAASC,QAAS7H,KAAK8J,eAApC,WACR,kBAAC,SAAD,KAAQ,4BAAQlC,KAAK,SAASC,QAAS7H,KAAK+J,eAApC,UAAkE,6BAAS,8BACnF,6BAAK,4BAAK/J,KAAK2G,MAAMC,c,sCAMpB,IAAD,OACRrI,IAAE,UAAUwJ,UACRpD,UAAUC,OACVqF,EAAYlD,eAAexI,IAAE,aAAauJ,OACrChC,MAAK,SAAAC,GAEF,EAAKW,MAAM8B,QAAQC,KAAnB,iBAAkC1C,EAAS1G,KAAKuH,aAEnDZ,OACG,SAAAC,GAGI,OAFApC,QAAQC,IAAImC,EAAMW,SAClB/C,QAAQC,IAAImC,EAAMyH,MACVzH,EAAMW,SACV,IAAK,gBACD,EAAK8B,SAAS,CACV9B,QAASX,EAAMW,UAEnB,MACJ,QACI,EAAK8B,SAAS,CACV9B,QAASX,EAAMF,SAAS1G,KAAKuH,cAOrDsC,MAAM,iD,sCAMdlJ,KAAK0G,MAAM8B,QAAQC,KAAnB,+B,GAzE6CU,aCqXtCqR,G,iLA/WP,OACI,yBAAKjT,UAAU,WAIX,yBAAKA,UAAU,8BAA8BkT,aAAW,QAAQhT,GAAG,cAC/D,yBAAKF,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAW,0BAAMA,UAAU,mBAA1C,QAAuE,uCAAvE,MACA,yBAAKA,UAAU,cACX,gEACA,uGAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,uBAAG8G,KAAK,IAAI9G,UAAU,0BAAtB,OACA,4BAAQA,UAAU,2CAAlB,WAMpB,kBAAC,IAAD,KAKI,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwS,KAAK,yBAAyBC,OAAK,EAACC,UAAWG,KACtD,kBAAC,IAAD,CAAOL,KAAK,kBAAkBC,OAAK,EAACC,UAAWM,KAC/C,kBAAC,IAAD,CAAOR,KAAK,IAAIC,OAAK,EAACC,UAAWxT,IACjC,kBAAC,IAAD,CAAOsT,KAAK,kBAAkBE,UAAWxT,IAEzC,yBAAKc,UAAU,8DAGX,yBAAKA,UAAU,gBAEX,wBAAIA,UAAU,uCACV,wBAAIA,UAAU,WACV,uBAAG8G,KAAK,cAAR,QACA,uBAAGA,KAAK,IAAI9G,UAAU,0BAQ1B,wBAAIA,UAAU,UACT,uBAAG8G,KAAK,WAAU,0BAAM9G,UAAU,mBAAlC,IAA2D,0BAAMA,UAAU,WAAhB,UA4BhE,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,IAAG,0BAAM9G,UAAU,gBAA3B,IAAiD,0BAAMA,UAAU,WAAhB,iBACjD,4BAEI,wBAAIA,UAAU,IACV,uBAAG8G,KAAK,0BAAyB,0BAAM9G,UAAU,KAAjD,cAIJ,4BAAI,uBAAG8G,KAAK,wBAAuB,0BAAM9G,UAAU,KAA/C,YACJ,4BAAI,uBAAG8G,KAAK,wBAAuB,0BAAM9G,UAAU,KAA/C,cAKZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,eAA5B,IAAiD,0BAAMA,UAAU,WAAhB,UACjD,wBAAIA,UAAU,aAEV,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,SACA,4BACI,4BAAI,uBAAG8G,KAAK,cAAa,0BAAM9G,UAAU,KAArC,cACJ,4BAAI,uBAAG8G,KAAK,eAAc,0BAAM9G,UAAU,KAAtC,gBAIZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,SACA,4BACI,4BAAI,uBAAG8G,KAAK,cAAa,0BAAM9G,UAAU,KAArC,cACJ,4BAAI,uBAAG8G,KAAK,eAAc,0BAAM9G,UAAU,KAAtC,gBAIZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,aACA,4BACI,4BAAI,uBAAG8G,KAAK,kBAAiB,0BAAM9G,UAAU,KAAzC,kBACJ,4BAAI,uBAAG8G,KAAK,2BAA0B,0BAAM9G,UAAU,KAAlD,oBAGZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,YACA,4BACI,4BAAI,uBAAG8G,KAAK,iBAAgB,0BAAM9G,UAAU,KAAxC,iBACJ,4BAAI,uBAAG8G,KAAK,0BAAyB,0BAAM9G,UAAU,KAAjD,mBAGZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,aACA,4BACI,4BAAI,uBAAG8G,KAAK,kBAAiB,0BAAM9G,UAAU,KAAzC,kBACJ,4BAAI,uBAAG8G,KAAK,2BAA0B,0BAAM9G,UAAU,KAAlD,oBAGZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,eACA,4BACI,4BAAI,uBAAG8G,KAAK,oBAAmB,0BAAM9G,UAAU,KAA3C,oBACJ,4BAAI,uBAAG8G,KAAK,6BAA4B,0BAAM9G,UAAU,KAApD,sBAGZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,oBACA,4BACI,4BAAI,uBAAG8G,KAAK,wBAAuB,0BAAM9G,UAAU,KAA/C,yBACJ,4BAAI,uBAAG8G,KAAK,iCAAgC,0BAAM9G,UAAU,KAAxD,2BAGZ,wBAAIA,UAAU,eACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,kBAA5B,oBACA,4BACI,4BAAI,uBAAG8G,KAAK,wBAAuB,0BAAM9G,UAAU,KAA/C,yBACJ,4BAAI,uBAAG8G,KAAK,oCAAmC,0BAAM9G,UAAU,KAA3D,+BA6E5B,yBAAKA,UAAU,gBAEX,wBAAIA,UAAU,2DAEV,wBAAIA,UAAU,kBACV,uBAAG8G,KAAK,IAAI9G,UAAU,yBAAwB,0BAAMA,UAAU,mBAWlE,wBAAIA,UAAU,6BACV,uBAAG8G,KAAK,IAAI9G,UAAU,aAAamT,WAAS,eAAc,0BAAMnT,UAAU,qBAI9E,wBAAIA,UAAU,6BACV,uBAAG8G,KAAK,KAAI,0BAAM9G,UAAU,gBAI5B,yBAAKA,UAAU,iFACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,cAAcoT,IAAI,0BAA0BC,IAAI,cAEnE,yBAAKrT,UAAU,gBACX,yBAAKA,UAAU,qBAAf,OACA,yBAAKA,UAAU,sBAAf,cACA,yBAAKA,UAAU,sBAAqB,yCACpC,yBAAKA,UAAU,sBAAqB,mCAAQ,0BAAMA,UAAU,kBAahF,wBAAI6G,MAAM,6BAC3C,uBAAGC,KAAK,oBAAoBwM,MAAM,mBAAkB,0BAAMzM,MAAM,cAAhE,IAAoF,0BAAMA,MAAM,cAE/D,wBAAI7G,UAAU,6BACV,uBAAG8G,KAAK,IAAI9G,UAAU,cAAc,0BAAMA,UAAU,IAAhB,cAApC,IAAyE,0BAAMA,UAAU,iCAGzF,yBAAKA,UAAU,iFAOX,yBAAKA,UAAU,yCACX,uBAAGA,UAAU,kBAAkB8G,KAAK,KAChC,sDAMJ,uBAAG9G,UAAU,kBAAkB8G,KAAK,KAChC,uDAMJ,uBAAG9G,UAAU,kBAAkB8G,KAAK,KAChC,qDAGJ,uBAAG9G,UAAU,kBAAkB8G,KAAK,KAChC,oEAoBpB,kBAAC,IAAD,CAAO0L,KAAK,IAAIG,OAAQ,SAACxT,GAAD,OAAW,kBAAC,GAAWA,gB,GAjV7DyC,aCKP2R,OATf,WAEE,OACE,yBAAKvT,UAAU,OACb,kBAAC,GAAD,QCGAwT,GAAcC,QACW,cAA7Bjc,OAAO2N,SAASuO,UAEe,UAA7Blc,OAAO2N,SAASuO,UAEhBlc,OAAO2N,SAASuO,SAASvT,MACvB,2DAsCN,SAASwT,GAAgBC,EAAO7U,GAC9B3B,UAAUyW,cACPC,SAASF,GACTrV,MAAK,SAAAwV,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7U,QACfhC,UAAUyW,cAAcO,YAI1B9X,QAAQC,IACN,iHAKEwC,GAAUA,EAAOsV,UACnBtV,EAAOsV,SAASN,KAMlBzX,QAAQC,IAAI,sCAGRwC,GAAUA,EAAOuV,WACnBvV,EAAOuV,UAAUP,WAO5BtV,OAAM,SAAAC,GACLpC,QAAQoC,MAAM,4CAA6CA,MC1FjE6V,IAAS5B,OAAO,kBAAC,GAAD,MAASpb,SAASid,eAAe,SDgB1C,SAAkBzV,GACvB,GAA6C,kBAAmB3B,UAAW,CAGzE,GADkB,IAAIqX,IAAIC,iBAAwBld,OAAO2N,SAAS2B,MACpD6N,SAAWnd,OAAO2N,SAASwP,OAIvC,OAGFnd,OAAOod,iBAAiB,QAAQ,WAC9B,IAAMhB,EAAK,UAAMc,iBAAN,sBAEPlB,KAgEV,SAAiCI,EAAO7U,GAEtC8V,MAAMjB,EAAO,CACX5U,QAAS,CAAE,iBAAkB,YAE5BT,MAAK,SAAAC,GAEJ,IAAMsW,EAActW,EAASQ,QAAQV,IAAI,gBAEnB,MAApBE,EAASqC,QACO,MAAfiU,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C3X,UAAUyW,cAAc/a,MAAMyF,MAAK,SAAAwV,GACjCA,EAAaiB,aAAazW,MAAK,WAC7B/G,OAAO2N,SAASC,eAKpBuO,GAAgBC,EAAO7U,MAG1BN,OAAM,WACLnC,QAAQC,IACN,oEAvFA0Y,CAAwBrB,EAAO7U,GAI/B3B,UAAUyW,cAAc/a,MAAMyF,MAAK,WACjCjC,QAAQC,IACN,iHAMJoX,GAAgBC,EAAO7U,OCtC/B8U,I","file":"static/js/main.0efb9a79.chunk.js","sourcesContent":["import $ from 'jquery';\r\n//const $ = window.$;\r\n$(document).ready(function(){        \r\n    \r\n    /* PROGGRESS START */\r\n    // $.mpb(\"show\",{value: [0,50],speed: 5});        \r\n    /* END PROGGRESS START */\r\n    \r\n    var html_click_avail = true;\r\n    \r\n    $(\"html\").on(\"click\", function(){\r\n        if(html_click_avail)\r\n            $(\".x-navigation-horizontal li,.x-navigation-minimized li\").removeClass('active');        \r\n    });        \r\n    \r\n    $(\".x-navigation-horizontal .panel\").on(\"click\",function(e){\r\n        e.stopPropagation();\r\n    });    \r\n    \r\n    /* WIDGETS (DEMO)*/\r\n    $(\".widget-remove\").on(\"click\",function(){\r\n        $(this).parents(\".widget\").fadeOut(400,function(){\r\n            $(this).remove();\r\n            $(\"body > .tooltip\").remove();\r\n        });\r\n        return false;\r\n    });\r\n    /* END WIDGETS */\r\n    \r\n    /* Gallery Items */\r\n    $(\".gallery-item .iCheck-helper\").on(\"click\",function(){\r\n        var wr = $(this).parent(\"div\");\r\n        if(wr.hasClass(\"checked\")){\r\n            $(this).parents(\".gallery-item\").addClass(\"active\");\r\n        }else{            \r\n            $(this).parents(\".gallery-item\").removeClass(\"active\");\r\n        }\r\n    });\r\n    $(\".gallery-item-remove\").on(\"click\",function(){\r\n        $(this).parents(\".gallery-item\").fadeOut(400,function(){\r\n            $(this).remove();\r\n        });\r\n        return false;\r\n    });\r\n    $(\"#gallery-toggle-items\").on(\"click\",function(){\r\n        \r\n        $(\".gallery-item\").each(function(){\r\n            \r\n            var wr = $(this).find(\".iCheck-helper\").parent(\"div\");\r\n            \r\n            if(wr.hasClass(\"checked\")){\r\n                $(this).removeClass(\"active\");\r\n                wr.removeClass(\"checked\");\r\n                wr.find(\"input\").prop(\"checked\",false);\r\n            }else{            \r\n                $(this).addClass(\"active\");\r\n                wr.addClass(\"checked\");\r\n                wr.find(\"input\").prop(\"checked\",true);\r\n            }\r\n            \r\n        });\r\n        \r\n    });\r\n    /* END Gallery Items */\r\n\r\n    // XN PANEL DRAGGING\r\n    // $( \".xn-panel-dragging\" ).draggable({\r\n    //     containment: \".page-content\", handle: \".panel-heading\", scroll: false,\r\n    //     start: function(event,ui){\r\n    //         html_click_avail = false;\r\n    //         $(this).addClass(\"dragged\");\r\n    //     },\r\n    //     stop: function( event, ui ) {\r\n    //         $(this).resizable({\r\n    //             maxHeight: 400,\r\n    //             maxWidth: 600,\r\n    //             minHeight: 200,\r\n    //             minWidth: 200,\r\n    //             helper: \"resizable-helper\",\r\n    //             start: function( event, ui ) {\r\n    //                 html_click_avail = false;\r\n    //             },\r\n    //             stop: function( event, ui ) {\r\n    //                 $(this).find(\".panel-body\").height(ui.size.height - 82);\r\n    //                 $(this).find(\".scroll\").mCustomScrollbar(\"update\");\r\n                                            \r\n    //                 setTimeout(function(){\r\n    //                     html_click_avail = true; \r\n    //                 },1000);\r\n                                            \r\n    //             }\r\n    //         })\r\n            \r\n    //         setTimeout(function(){\r\n    //             html_click_avail = true; \r\n    //         },1000);            \r\n    //     }\r\n    // });\r\n    // END XN PANEL DRAGGING\r\n    \r\n    /* DROPDOWN TOGGLE */\r\n    $(\".dropdown-toggle\").on(\"click\",function(){\r\n        onresize();\r\n    });\r\n    /* DROPDOWN TOGGLE */\r\n    \r\n    /* MESSAGE BOX */\r\n    $(\".mb-control\").on(\"click\",function(){\r\n        var box = $($(this).data(\"box\"));\r\n        if(box.length > 0){\r\n            box.toggleClass(\"open\");\r\n            \r\n            var sound = box.data(\"sound\");\r\n            \r\n            if(sound === 'alert')\r\n                playAudio('alert');\r\n            \r\n            if(sound === 'fail')\r\n                playAudio('fail');\r\n            \r\n        }        \r\n        return false;\r\n    });\r\n    $(\".mb-control-close\").on(\"click\",function(){\r\n       $(this).parents(\".message-box\").removeClass(\"open\");\r\n       return false;\r\n    });    \r\n    /* END MESSAGE BOX */\r\n    \r\n    /* CONTENT FRAME */\r\n    $(\".content-frame-left-toggle\").on(\"click\",function(){\r\n        $(\".content-frame-left\").is(\":visible\") \r\n        ? $(\".content-frame-left\").hide() \r\n        : $(\".content-frame-left\").show();\r\n        page_content_onresize();\r\n    });\r\n    $(\".content-frame-right-toggle\").on(\"click\",function(){\r\n        $(\".content-frame-right\").is(\":visible\") \r\n        ? $(\".content-frame-right\").hide() \r\n        : $(\".content-frame-right\").show();\r\n        page_content_onresize();\r\n    });    \r\n    /* END CONTENT FRAME */\r\n    \r\n    /* MAILBOX */\r\n    $(\".mail .mail-star\").on(\"click\",function(){\r\n        $(this).toggleClass(\"starred\");\r\n    });\r\n    \r\n    $(\".mail-checkall .iCheck-helper\").on(\"click\",function(){\r\n        \r\n        var prop = $(this).prev(\"input\").prop(\"checked\");\r\n                    \r\n        $(\".mail .mail-item\").each(function(){            \r\n            var cl = $(this).find(\".mail-checkbox > div\");            \r\n            cl.toggleClass(\"checked\",prop).find(\"input\").prop(\"checked\",prop);                        \r\n        }); \r\n        \r\n    });\r\n    /* END MAILBOX */\r\n    \r\n    /* PANELS */\r\n    \r\n    $(\".panel-fullscreen\").on(\"click\",function(){\r\n        panel_fullscreen($(this).parents(\".panel\"));\r\n        return false;\r\n    });\r\n    \r\n    $(\".panel-collapse\").on(\"click\",function(){\r\n        panel_collapse($(this).parents(\".panel\"));\r\n        $(this).parents(\".dropdown\").removeClass(\"open\");\r\n        return false;\r\n    });    \r\n    $(\".panel-remove\").on(\"click\",function(){\r\n        panel_remove($(this).parents(\".panel\"));\r\n        $(this).parents(\".dropdown\").removeClass(\"open\");\r\n        return false;\r\n    });\r\n    $(\".panel-refresh\").on(\"click\",function(){\r\n        var panel = $(this).parents(\".panel\");\r\n        panel_refresh(panel);\r\n\r\n        setTimeout(function(){\r\n            panel_refresh(panel);\r\n        },3000);\r\n        \r\n        $(this).parents(\".dropdown\").removeClass(\"open\");\r\n        return false;\r\n    });\r\n    /* EOF PANELS */\r\n    \r\n    /* ACCORDION */\r\n    $(\".accordion .panel-title a\").on(\"click\",function(){\r\n        \r\n        var blockOpen = $(this).attr(\"href\");\r\n        var accordion = $(this).parents(\".accordion\");        \r\n        var noCollapse = accordion.hasClass(\"accordion-dc\");\r\n        \r\n        \r\n        if($(blockOpen).length > 0){            \r\n            \r\n            if($(blockOpen).hasClass(\"panel-body-open\")){\r\n                $(blockOpen).slideUp(200,function(){\r\n                    $(this).removeClass(\"panel-body-open\");\r\n                });\r\n            }else{\r\n                $(blockOpen).slideDown(200,function(){\r\n                    $(this).addClass(\"panel-body-open\");\r\n                });\r\n            }\r\n            \r\n            if(!noCollapse){\r\n                accordion.find(\".panel-body-open\").not(blockOpen).slideUp(200,function(){\r\n                    $(this).removeClass(\"panel-body-open\");\r\n                });                                           \r\n            }\r\n            \r\n            return false;\r\n        }\r\n        \r\n    });\r\n    /* EOF ACCORDION */\r\n    \r\n    /* DATATABLES/CONTENT HEIGHT FIX */\r\n    $(\".dataTables_length select\").on(\"change\",function(){\r\n        onresize();\r\n    });\r\n    /* END DATATABLES/CONTENT HEIGHT FIX */\r\n    \r\n    /* TOGGLE FUNCTION */\r\n    $(\".toggle\").on(\"click\",function(){\r\n        var elm = $(\"#\"+$(this).data(\"toggle\"));\r\n        if(elm.is(\":visible\"))\r\n            elm.addClass(\"hidden\").removeClass(\"show\");\r\n        else\r\n            elm.addClass(\"show\").removeClass(\"hidden\");\r\n        \r\n        return false;\r\n    });\r\n    /* END TOGGLE FUNCTION */\r\n    \r\n    /* MESSAGES LOADING */\r\n    $(\".messages .item\").each(function(index){\r\n        var elm = $(this);\r\n        setInterval(function(){\r\n            elm.addClass(\"item-visible\");\r\n        },index*300);              \r\n    });\r\n    /* END MESSAGES LOADING */\r\n    \r\n    x_navigation();\r\n});\r\n\r\n$(function(){            \r\n    onload();\r\n\r\n    /* PROGGRESS COMPLETE */\r\n    // $.mpb(\"update\",{value: 100, speed: 5, complete: function(){            \r\n    //     $(\".mpb\").fadeOut(200,function(){\r\n    //         $(this).remove();\r\n    //     });\r\n    // }});\r\n    /* END PROGGRESS COMPLETE */\r\n});\r\n\r\n$(window).resize(function(){\r\n    x_navigation_onresize();\r\n    page_content_onresize();\r\n});\r\n\r\nfunction onload(){\r\n    x_navigation_onresize();    \r\n    page_content_onresize();\r\n}\r\n\r\nfunction page_content_onresize(){\r\n    $(\".page-content,.content-frame-body,.content-frame-right,.content-frame-left\").css(\"width\",\"\").css(\"height\",\"\");\r\n    \r\n    var content_minus = 0;\r\n    content_minus = ($(\".page-container-boxed\").length > 0) ? 40 : content_minus;\r\n    content_minus += ($(\".page-navigation-top-fixed\").length > 0) ? 50 : 0;\r\n    \r\n    var content = $(\".page-content\");\r\n    var sidebar = $(\".page-sidebar\");\r\n    \r\n    if(content.height() < $(document).height() - content_minus){        \r\n        content.height($(document).height() - content_minus);\r\n    }        \r\n    \r\n    if(sidebar.height() > content.height()){        \r\n        content.height(sidebar.height());\r\n    }\r\n    \r\n    if($(window).width() > 1024){\r\n        \r\n        if($(\".page-sidebar\").hasClass(\"scroll\")){\r\n            if($(\"body\").hasClass(\"page-container-boxed\")){\r\n                var doc_height = $(document).height() - 40;\r\n            }else{\r\n                var doc_height = $(window).height();\r\n            }\r\n           $(\".page-sidebar\").height(doc_height);\r\n           \r\n       }\r\n       \r\n        if($(\".content-frame-body\").height() < $(document).height()-162){\r\n            $(\".content-frame-body,.content-frame-right,.content-frame-left\").height($(document).height()-162);            \r\n        }else{\r\n            $(\".content-frame-right,.content-frame-left\").height($(\".content-frame-body\").height());\r\n        }\r\n        \r\n        $(\".content-frame-left\").show();\r\n        $(\".content-frame-right\").show();\r\n    }else{\r\n        $(\".content-frame-body\").height($(\".content-frame\").height()-80);\r\n        \r\n        if($(\".page-sidebar\").hasClass(\"scroll\"))\r\n           $(\".page-sidebar\").css(\"height\",\"\");\r\n    }\r\n    \r\n    if($(window).width() < 1200){\r\n        if($(\"body\").hasClass(\"page-container-boxed\")){\r\n            $(\"body\").removeClass(\"page-container-boxed\").data(\"boxed\",\"1\");\r\n        }\r\n    }else{\r\n        if($(\"body\").data(\"boxed\") === \"1\"){\r\n            $(\"body\").addClass(\"page-container-boxed\").data(\"boxed\",\"\");\r\n        }\r\n    }\r\n}\r\n\r\n/* PANEL FUNCTIONS */\r\nfunction panel_fullscreen(panel){    \r\n    \r\n    if(panel.hasClass(\"panel-fullscreened\")){\r\n        panel.removeClass(\"panel-fullscreened\").unwrap();\r\n        panel.find(\".panel-body,.chart-holder\").css(\"height\",\"\");\r\n        panel.find(\".panel-fullscreen .fa\").removeClass(\"fa-compress\").addClass(\"fa-expand\");        \r\n        \r\n        $(window).resize();\r\n    }else{\r\n        var head    = panel.find(\".panel-heading\");\r\n        var body    = panel.find(\".panel-body\");\r\n        var footer  = panel.find(\".panel-footer\");\r\n        var hplus   = 30;\r\n        \r\n        if(body.hasClass(\"panel-body-table\") || body.hasClass(\"padding-0\")){\r\n            hplus = 0;\r\n        }\r\n        if(head.length > 0){\r\n            hplus += head.height()+21;\r\n        } \r\n        if(footer.length > 0){\r\n            hplus += footer.height()+21;\r\n        } \r\n\r\n        panel.find(\".panel-body,.chart-holder\").height($(window).height() - hplus);\r\n        \r\n        \r\n        panel.addClass(\"panel-fullscreened\").wrap('<div class=\"panel-fullscreen-wrap\"></div>');        \r\n        panel.find(\".panel-fullscreen .fa\").removeClass(\"fa-expand\").addClass(\"fa-compress\");\r\n        \r\n        $(window).resize();\r\n    }\r\n}\r\n\r\nfunction panel_collapse(panel,action,callback){\r\n\r\n    if(panel.hasClass(\"panel-toggled\")){        \r\n        panel.removeClass(\"panel-toggled\");\r\n        \r\n        panel.find(\".panel-collapse .fa-angle-up\").removeClass(\"fa-angle-up\").addClass(\"fa-angle-down\");\r\n\r\n        if(action && action === \"shown\" && typeof callback === \"function\")\r\n            callback();            \r\n\r\n        onload();\r\n                \r\n    }else{\r\n        panel.addClass(\"panel-toggled\");\r\n                \r\n        panel.find(\".panel-collapse .fa-angle-down\").removeClass(\"fa-angle-down\").addClass(\"fa-angle-up\");\r\n\r\n        if(action && action === \"hidden\" && typeof callback === \"function\")\r\n            callback();\r\n\r\n        onload();        \r\n        \r\n    }\r\n}\r\nfunction panel_refresh(panel,action,callback){        \r\n    if(!panel.hasClass(\"panel-refreshing\")){\r\n        panel.append('<div class=\"panel-refresh-layer\"><img src=\"img/loaders/default.gif\"/></div>');\r\n        panel.find(\".panel-refresh-layer\").width(panel.width()).height(panel.height());\r\n        panel.addClass(\"panel-refreshing\");\r\n        \r\n        if(action && action === \"shown\" && typeof callback === \"function\") \r\n            callback();\r\n    }else{\r\n        panel.find(\".panel-refresh-layer\").remove();\r\n        panel.removeClass(\"panel-refreshing\");\r\n        \r\n        if(action && action === \"hidden\" && typeof callback === \"function\") \r\n            callback();        \r\n    }       \r\n    onload();\r\n}\r\nfunction panel_remove(panel,action,callback){    \r\n    if(action && action === \"before\" && typeof callback === \"function\") \r\n        callback();\r\n    \r\n    panel.animate({'opacity':0},200,function(){\r\n        panel.parent(\".panel-fullscreen-wrap\").remove();\r\n        $(this).remove();        \r\n        if(action && action === \"after\" && typeof callback === \"function\") \r\n            callback();\r\n        \r\n        \r\n        onload();\r\n    });    \r\n}\r\n/* EOF PANEL FUNCTIONS */\r\n\r\n/* X-NAVIGATION CONTROL FUNCTIONS */\r\nfunction x_navigation_onresize(){    \r\n    \r\n    var inner_port = window.innerWidth || $(document).width();\r\n    \r\n    if(inner_port < 1025){               \r\n        $(\".page-sidebar .x-navigation\").removeClass(\"x-navigation-minimized\");\r\n        $(\".page-container\").removeClass(\"page-container-wide\");\r\n        $(\".page-sidebar .x-navigation li.active\").removeClass(\"active\");\r\n        \r\n                \r\n        $(\".x-navigation-horizontal\").each(function(){            \r\n            if(!$(this).hasClass(\"x-navigation-panel\")){                \r\n                $(\".x-navigation-horizontal\").addClass(\"x-navigation-h-holder\").removeClass(\"x-navigation-horizontal\");\r\n            }\r\n        });\r\n        \r\n        \r\n    }else{        \r\n        if($(\".page-navigation-toggled\").length > 0){\r\n            x_navigation_minimize(\"close\");\r\n        }       \r\n        \r\n        $(\".x-navigation-h-holder\").addClass(\"x-navigation-horizontal\").removeClass(\"x-navigation-h-holder\");                \r\n    }\r\n    \r\n}\r\n\r\nfunction x_navigation_minimize(action){\r\n    \r\n    if(action == 'open'){\r\n        $(\".page-container\").removeClass(\"page-container-wide\");\r\n        $(\".page-sidebar .x-navigation\").removeClass(\"x-navigation-minimized\");\r\n        $(\".x-navigation-minimize\").find(\".fa\").removeClass(\"fa-indent\").addClass(\"fa-dedent\");\r\n     //   $(\".page-sidebar.scroll\").mCustomScrollbar(\"update\");\r\n    }\r\n    \r\n    if(action == 'close'){\r\n        $(\".page-container\").addClass(\"page-container-wide\");\r\n        $(\".page-sidebar .x-navigation\").addClass(\"x-navigation-minimized\");\r\n        $(\".x-navigation-minimize\").find(\".fa\").removeClass(\"fa-dedent\").addClass(\"fa-indent\");\r\n        // $(\".page-sidebar.scroll\").mCustomScrollbar(\"disable\",true);\r\n    }\r\n    \r\n    $(\".x-navigation li.active\").removeClass(\"active\");\r\n    \r\n}\r\n\r\nfunction x_navigation(){\r\n    \r\n    $(\".x-navigation-control\").click(function(){\r\n        $(this).parents(\".x-navigation\").toggleClass(\"x-navigation-open\");\r\n        \r\n        onresize();\r\n        \r\n        return false;\r\n    });\r\n\r\n    if($(\".page-navigation-toggled\").length > 0){\r\n        x_navigation_minimize(\"close\");\r\n    }    \r\n    \r\n    $(\".x-navigation-minimize\").click(function(){\r\n                \r\n        if($(\".page-sidebar .x-navigation\").hasClass(\"x-navigation-minimized\")){\r\n            $(\".page-container\").removeClass(\"page-navigation-toggled\");\r\n            x_navigation_minimize(\"open\");\r\n        }else{            \r\n            $(\".page-container\").addClass(\"page-navigation-toggled\");\r\n            x_navigation_minimize(\"close\");            \r\n        }\r\n        \r\n        onresize();\r\n        \r\n        return false;        \r\n    });\r\n       \r\n    $(\".x-navigation  li > a\").click(function(){\r\n        \r\n        var li = $(this).parent('li');        \r\n        var ul = li.parent(\"ul\");\r\n        \r\n        ul.find(\" > li\").not(li).removeClass(\"active\");    \r\n        \r\n    });\r\n    \r\n    $(\".x-navigation li\").click(function(event){\r\n        event.stopPropagation();\r\n        \r\n        var li = $(this);\r\n                \r\n            if(li.children(\"ul\").length > 0 || li.children(\".panel\").length > 0 || $(this).hasClass(\"xn-profile\") > 0){\r\n                if(li.hasClass(\"active\")){\r\n                    li.removeClass(\"active\");\r\n                    li.find(\"li.active\").removeClass(\"active\");\r\n                }else\r\n                    li.addClass(\"active\");\r\n                    \r\n                onresize();\r\n                \r\n                if($(this).hasClass(\"xn-profile\") > 0)\r\n                    return true;\r\n                else\r\n                    return false;\r\n            }                                     \r\n    });\r\n    \r\n    /* XN-SEARCH */\r\n    $(\".xn-search\").on(\"click\",function(){\r\n        $(this).find(\"input\").focus();\r\n    })\r\n    /* END XN-SEARCH */\r\n    \r\n}\r\n/* EOF X-NAVIGATION CONTROL FUNCTIONS */\r\n\r\n/* PAGE ON RESIZE WITH TIMEOUT */\r\nfunction onresize(timeout){    \r\n    timeout = timeout ? timeout : 200;\r\n\r\n    setTimeout(function(){\r\n        page_content_onresize();\r\n    },timeout);\r\n}\r\n/* EOF PAGE ON RESIZE WITH TIMEOUT */\r\n\r\n/* PLAY SOUND FUNCTION */\r\nfunction playAudio(file){\r\n    /*if(file === 'alert')\r\n        document.getElementById('audio-alert').play();\r\n\r\n    if(file === 'fail')\r\n        document.getElementById('audio-fail').play(); */   \r\n}\r\n/* END PLAY SOUND FUNCTION */\r\n\r\n/* NEW OBJECT(GET SIZE OF ARRAY) */\r\nObject.size = function(obj) {\r\n    var size = 0, key;\r\n    for (key in obj) {\r\n        if (obj.hasOwnProperty(key)) size++;\r\n    }\r\n    return size;\r\n};\r\n/* EOF NEW OBJECT(GET SIZE OF ARRAY) */","import React from \"react\";\n\nfunction ErrorComponent() {\n    return (\n        <div>An Error occurred</div>\n    )\n}\n\nexport default ErrorComponent","import $ from 'jquery';\nimport 'jquery-validation';\n\n\n\n$.validator.addMethod('emailId', function (value, element) {\n\n    return this.optional(element) || /^[\\w][\\w.-]{0,127}$/.test(value)\n  \n  }, \"Please enter a valid Docker image tag, like 'latest' or '1.10.0'\");\n\n  $.validator.addMethod( \"lettersonly\", function( value, element ) {\n    return this.optional( element ) || /^[a-z]+$/i.test( value );\n  }, \"Letters only please\" );\n\n  $.validator.addMethod( \"integer\", function( value, element ) {\n    return this.optional( element ) || /^-?\\d+$/.test( value );\n  }, \"A positive or negative non-decimal number please\" );\n  ","//export const API_URL = 'http://localhost:8081'\n// export const API_URL = 'http://server6.altius.cc:8080/FASP'\n\nexport const API_URL='https://fasp.altius.cc/FASP'\n// export const API_URL='http://192.168.43.70:8080/FASP'\nexport const SECRET_KEY = 'afhghggrehreqiuhrjhjdbfjehgfuoerhfjhfyguayaegrf'\n","import axios from \"axios\"\nimport {API_URL} from '../Constants.js'\n\nclass LoginService {\n\n\n\n    authenticate(username, password) {\n        console.log(\"username---\"+username);\n        console.log(\"password---\"+password);\n        return axios.post(`${API_URL}/authenticate`,{username, password},{});\n    }\n\n    \n}\n\nexport default new LoginService()","import axios from 'axios'\nimport { Online } from \"react-detect-offline\";\nimport jwt_decode from 'jwt-decode'\nimport { API_URL } from '../../Constants.js'\nimport CryptoJS from 'crypto-js'\nimport { SECRET_KEY } from '../../Constants.js'\n\nclass AuthenticationService {\n\n    isUserLoggedIn() {\n        let user = localStorage.getItem('userId');\n        if (user === null) return false\n        return true\n    }\n    getLoggedInUserId() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        return decoded.userId;\n    }\n\n    getLoggedInUsername() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        return decoded.sub;\n    }\n\n    getLanguageId() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        return decoded.user.language.languageId;\n    }\n\n    checkTypeOfSession() {\n        let typeOfSession = localStorage.getItem('typeOfSession');\n        console.log(\"typeofsession---\" + typeOfSession);\n        console.log(\"network----\" + navigator.onLine);\n        if ((typeOfSession === 'Online' && navigator.onLine) || (typeOfSession === 'Offline' && !navigator.onLine)) {\n            console.log(\"true\");\n            return true;\n        } else {\n            console.log(\"false\");\n            return false;\n\n\n\n        }\n    }\n\n    checkIfDifferentUserIsLoggedIn(newUsername) {\n        console.log(\"token username---\" + newUsername);\n        let usernameStored = localStorage.getItem('username');\n        console.log(\"usernameStored---\"+usernameStored);\n        if (usernameStored !== null && usernameStored !== \"\") {\n            var usernameDecrypted = CryptoJS.AES.decrypt(usernameStored, `${SECRET_KEY}`)\n            var originalText = usernameDecrypted.toString(CryptoJS.enc.Utf8);\n            console.log(\"usernameDecrypted---\" + originalText);\n            if (originalText !== newUsername) {\n                if (window.confirm(\"Are you sure you want to overrride already logged in user's details?\")) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    checkIfTokenExpired() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        console.log(decoded);\n        let tokenExpiryTime = new Date(decoded.exp * 1000);\n        var curDate = new Date();\n        console.log(new Date(decoded.exp * 1000));\n        console.log(\"cur date---\" + curDate);\n\n        if (new Date(decoded.exp * 1000) > new Date()) {\n            console.log(\"Token not expired\");\n            return true;\n        } else {\n            console.log(\"Token expired\");\n            return false;\n        }\n    }\n\n    checkSessionTimeOut() {\n        let token = localStorage.getItem('token');\n        var decoded = jwt_decode(token);\n        console.log(\"decoded---\", decoded);\n        console.log(\"Session expires on---\" + decoded.user.sessionExpiresOn);\n        return decoded.user.sessionExpiresOn;\n    }\n\n    refreshToken() {\n        let token = localStorage.getItem('token');\n        console.log(\"token---\" + token);\n        this.setupAxiosInterceptors();\n        return axios.get(`${API_URL}/refresh`, {}).then(response => {\n            console.log(\"response----------------\", response)\n        }).catch(\n            error => {\n                console.log(\"error----------\", error);\n            })\n    }\n\n    setupAxiosInterceptors() {\n        //console.log(\"Inside interceptor setup\");\n        let token = localStorage.getItem('token');\n        let basicAuthHeader = 'Bearer ' + token\n        console.log(\"headers=\" + basicAuthHeader);\n        axios.interceptors.request.use(\n            // if (this.isUserLoggedIn) {\n            (config) => {\n                config.headers.authorization = basicAuthHeader\n                return config;\n            }\n            // }\n        )\n\n    }\n}\n\n\nexport default new AuthenticationService()","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport LoginService from '../../api/LoginService'\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode'\nimport { SECRET_KEY } from '../../Constants.js'\n\n\nexport default class LoginComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n        this.loginClicked = this.loginClicked.bind(this);\n        this.forgotPassword = this.forgotPassword.bind(this);\n    }\n\n    componentDidMount() {\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                emailId: {\n                    required: true\n                },\n                password: {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Login</h3>\n                    <p>{this.props.match.params.message}</p>\n                    Username : <input type=\"text\" id=\"emailId\" name=\"emailId\" /><br></br><br></br>\n                    Password : <input type=\"password\" id=\"password\" name=\"password\" /><br></br><br></br>\n                    <button className=\"btn btn-success\" type=\"button\" onClick={this.loginClicked}>Login</button><br></br><br></br>\n                    <Online><button className=\"btn btn-danger\" type=\"button\" onClick={this.forgotPassword}>Forgot Password</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    loginClicked() {\n        var username = $(\"#emailId\").val();\n        var password = $(\"#password\").val();\n        if ($(\"#form1\").valid()) {\n            console.log(\"Going to perform login----\" + AuthenticationService.isUserLoggedIn());\n\n            if (navigator.onLine) {\n                // console.log(\"Inside Authentication not found\");\n                LoginService.authenticate(username, password)\n                    .then(response => {\n                        console.log(\"my response\");\n                        var decoded = jwt_decode(response.data.token);\n                        console.log(\"status code--\" + response.data.status);\n\n                        // console.log(new Date(decoded.iat*1000));\n                        // console.log(new Date(decoded.exp*1000));\n                        console.log(\"username---\", decoded);\n                        if (!AuthenticationService.checkIfDifferentUserIsLoggedIn(decoded.sub)) {\n                            localStorage.setItem('token', response.data.token);\n                            localStorage.setItem('typeOfSession', \"Online\");\n                            localStorage.setItem('userId', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('username', CryptoJS.AES.encrypt((decoded.sub).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('password', CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('languageId', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n\n                            // response.data.password = CryptoJS.AES.encrypt(JSON.stringify(password), 'my-secret-key@123').toString();\n\n                            AuthenticationService.setupAxiosInterceptors();\n\n                            this.props.history.push(`/welcome`)\n                        }else{\n                            localStorage.setItem('token', response.data.token);\n                            localStorage.setItem('typeOfSession', \"Online\");\n                            localStorage.setItem('userId', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('username', CryptoJS.AES.encrypt((decoded.sub).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('password', CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                            localStorage.setItem('languageId', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n\n                            // response.data.password = CryptoJS.AES.encrypt(JSON.stringify(password), 'my-secret-key@123').toString();\n\n                            AuthenticationService.setupAxiosInterceptors();\n\n                            this.props.history.push(`/welcome`)  \n                        }\n                    })\n                    .catch(\n                        error => {\n                            // console.log(\"response in catch---\"+error.response);\n                            if (error.response != null && error.response.status === 401) {\n                                switch (error.response.data) {\n                                    case \"Password expired\":\n                                        this.setState({\n                                            message: error.response.data\n                                        })\n                                        this.props.history.push({\n                                            pathname: \"/updateExpiredPassword\",\n                                            state: { username: username }\n                                        });\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data\n                                        })\n                                        break\n                                }\n                            } else {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                }\n                            }\n                        }\n                    );\n            }\n            else {\n                if (AuthenticationService.isUserLoggedIn()) {\n                    var usernameBytes = CryptoJS.AES.decrypt(localStorage.getItem('username').toString(), `${SECRET_KEY}`);\n                    var decryptedUsername = usernameBytes.toString(CryptoJS.enc.Utf8);\n\n                    var passWordBytes = CryptoJS.AES.decrypt(localStorage.getItem('password').toString(), `${SECRET_KEY}`);\n                    var decryptedPassword = passWordBytes.toString(CryptoJS.enc.Utf8);\n\n                    if (username === decryptedUsername) {\n                        bcrypt.compare(password, decryptedPassword, function (err, res) {\n                            if (err) {\n                                console.log(\"error---\" + err);\n                            }\n                            if (res) {\n                                localStorage.setItem('typeOfSession', \"Offline\");\n                                console.log(\"Offline authentication\");\n                                this.props.history.push(`/welcome`)\n                            } else {\n                                this.setState({ message: 'Bad credentials' });\n                                console.log(\"Password do not match\");\n                            }\n                        }.bind(this));\n                    } else {\n                        this.setState({ message: 'Username does not match' });\n                        console.log(\"Username do not match\");\n                    }\n                    // bcrypt.compare(password, userOff.password, function (err, res) {\n                    //     if (err) {\n                    //         console.log(\"error---\" + err);\n                    //     }\n                    //     if (res && username == userOff.username) {\n                    //         userOff.sessionExpiresOn = moment(new Date(new Date().getTime() + 30 * 60000)).format('YYYY-MM-DD HH:mm');\n                    //         localStorage.setItem('user', JSON.stringify(userOff));\n                    //         this.props.history.push(`/welcome`)\n                    //     } else {\n                    //         this.setState({ message: 'Password do not match' });\n                    //         console.log(\"Password do not match\");\n                    //     }\n                    // }.bind(this));\n                } else {\n                    alert(\"You must be Online for a first time login.\")\n                }\n            }\n        }\n    }\n\n    forgotPassword() {\n        this.props.history.push(`/forgotPassword`)\n    }\n}\n\n","import React, { Component } from \"react\";\n\nclass WelcomeComponent extends Component {\n\n    constructor(props) {\n        super(props);\n       {/* this.listUserApproval=this.listUserApproval.bind(this);*/}\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Welcome!!</h1>\n                <p>{this.props.match.params.message}</p>\n            </>\n        );\n    }\n\n   /*{ listUserApproval() {\n        this.props.history.push(`/listUserApproval`)\n    }*/\n}\n\nexport default WelcomeComponent","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\n\nclass UserService {\n    getLanguageList() {\n        return axios.get(`${API_URL}/api/getLanguageList`, {\n        });\n    }\n    getRoleList() {\n        return axios.get(`${API_URL}/api/getRoleList`, {\n        });\n    }\n    getBusinessFunctionList() {\n        return axios.get(`${API_URL}/api/getBusinessFunctionList`, {\n        });\n    }\n    getRealmList() {\n        return axios.get(`${API_URL}/api/getRealmList`, {\n        });\n    }\n    addNewUser(json) {\n        console.log(json);\n        // var jsonString=JSON.stringify(json);\n\n        return axios.put(`${API_URL}/api/addNewUser/`, json, {\n        });\n    }\n    addNewRole(json) {\n        console.log(json);\n        // var jsonString=JSON.stringify(json);\n\n        return axios.put(`${API_URL}/api/addNewRole/`, json, {\n        });\n    }\n\n    getUserList() {\n        return axios.get(`${API_URL}/api/getUserList`, {\n        });\n    }\n    getUserByUserId(userId) {\n        return axios.get(`${API_URL}/api/getUserByUserId/${userId}`, {\n        });\n    }\n    editUser(json) {\n        return axios.put(`${API_URL}/api/editUser/`, json, {\n        });\n    }\n\n    editRole(json) {\n        console.log(json);\n        // var jsonString=JSON.stringify(json);\n\n        return axios.put(`${API_URL}/api/editRole/`, json, {\n        });\n    }\n    unlockAccount(userId, emailId) {\n        return axios.put(`${API_URL}/api/unlockAccount/${userId}/${emailId}`, {\n        });\n    }\n    updateExpiredPassword(username, oldPassword, newPassword) {\n        console.log(\"api username---\"+username);\n        return axios.post(`${API_URL}/api/updateExpiredPassword/`, { username, oldPassword, newPassword }, {});\n    }\n\n    changePassword(username, oldPassword, newPassword) {\n        console.log(\"api username---\"+username);\n        return axios.post(`${API_URL}/api/changePassword/`, { username, oldPassword, newPassword }, {});\n    } \n    forgotPassword(username) {\n        return axios.get(`${API_URL}/api/forgotPassword/${username}`, {});\n    }\n}\n\nexport default new UserService()","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport { EMAIL_ID, PHONE_NO, REALM, ROLE, PREFERRED_LANGUAGE,BTN_SUBMIT, BTN_CANCEL, TITLE_ADD_USER, USERNAME } from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\nexport default class AddUserComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            languageId: AuthenticationService.getLanguageId(),\n            realms: [],\n            languages: [],\n            roles: []\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(\"check---\"+AuthenticationService.checkTypeOfSession());\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getRealmList()\n            .then(response => {\n                this.setState({\n                    realms: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getLanguageList()\n            .then(response => {\n                this.setState({\n                    languages: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#userForm\").validate({\n            ignore: [],\n            rules: {\n                emailId: {\n                    required: true,\n                    email: true\n                },\n                phoneNumber: {\n                    required: true,\n                    number: true\n                },\n                languageId: {\n                    required: true\n                },\n                roleId: {\n                    required: true\n                },\n                username: {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        const { realms } = this.state;\n        const { languages } = this.state;\n        const { roles } = this.state;\n\n        let realmList = realms.length > 0\n            && realms.map((item, i) => {\n                return (\n                    <option key={i} value={item.realmId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        let languagesList = languages.length > 0\n            && languages.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>\n                        {item.languageName}\n                    </option>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div className=\"addUser\">\n                        <div className=\"page-content-wrap\">\n                        \n                            <div className=\"row\">\n                                <div className=\"col-md-offset-3 col-md-6\" style={{ margin: '40px', border: '5px solid black' }} >\n                                <div><h5>{this.state.message}</h5></div>\n                                    <form name=\"userForm\" id=\"userForm\">\n                                        <div className=\"panel panel-default\" style={{ background: '#ffffffad' }}>\n                                            <div className=\"panel-heading\"> <h3>{TITLE_ADD_USER}</h3> </div>\n                                            <div className=\"col-md-offset-1 panel-body\">\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\"> {REALM}</label>\n                                                    <div className=\"col-md-6 col-xs-12\">\n                                                        <select className=\"form-control select\" id=\"realmId\" name=\"realmId\">\n                                                            <option value=\"\">-Nothing Selected-</option>\n                                                            {realmList}\n                                                        </select>\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{USERNAME} </label>\n                                                    <div className=\"col-md-6 col-xs-12\"> <input className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" />\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{EMAIL_ID} </label>\n                                                    <div className=\"col-md-6 col-xs-12\">\n                                                        <input className=\"form-control\" type=\"text\" id=\"emailId\" name=\"emailId\" />\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{PHONE_NO}</label>\n                                                    <div className=\"col-md-6 col-xs-12\">\n                                                        <input className=\"form-control\" type=\"text\" id=\"phoneNumber\" name=\"phoneNumber\" maxLength=\"15\" minLength=\"4\" />\n                                                    </div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{ROLE} </label><div className=\"col-md-6 col-xs-12\"> <select className=\"form-control select\" id=\"roleId\" name=\"roleId\">\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {roleList}\n                                                    </select></div>\n                                                </div><br />\n                                                {/* <div className=\"form-group\">\n                                                <label className=\"req col-md-3 col-xs-12 control-label\">{COUNTRY} </label><div className=\"col-md-6 col-xs-12\"> <select className=\" form-control mdb-select colorful-select dropdown-primary md-form\" id=\"countryIds\" name=\"countryIds\">\n                                                    <option value=\"\">-Nothing Selected-</option>\n                                                    {roleList}\n                                                </select></div>\n                                                </div><br /> */}\n                                                <div className=\"form-group\">\n                                                    <label className=\"req col-md-3 col-xs-12 control-label\">{PREFERRED_LANGUAGE} </label> <div className=\"col-md-6 col-xs-12\"><select className=\"form-control select\" id=\"languageId\" name=\"languageId\">\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {languagesList}\n                                                    </select></div>\n                                                </div><br />\n                                                <div className=\"form-group\">\n                                                    <div className=\"col-md-6 col-xs-12\"><button className=\"btn btn-success\" type=\"button\" onClick={this.submitClicked}>{BTN_SUBMIT}</button>\n                                                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.cancelClicked}>{BTN_CANCEL}</button></div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div></div></div></div>\n        )\n    }\n    submitClicked() {\n        console.log($(\"#countryIds\").val())\n        if (navigator.onLine) {\n            console.log(\"check---\"+AuthenticationService.checkTypeOfSession());\n            if (AuthenticationService.checkTypeOfSession()) {\n                var json = {\n                    username: $(\"#username\").val(),\n                    emailId: $(\"#emailId\").val(),\n                    phoneNumber: $(\"#phoneNumber\").val(),\n                    realm: {\n                        realmId: $(\"#realmId\").val()\n                    },\n                    role: {\n                        roleId: $(\"#roleId\").val()\n                    },\n                    language: {\n                        languageId: $(\"#languageId\").val()\n                    },\n                    countryIds: $(\"#countryIds\").val()\n                }\n                if ($(\"#userForm\").valid()) {\n                    UserService.addNewUser(json)\n                        .then(response => {\n                            this.props.history.push(`/userList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/userList/` + \"Action Canceled\")\n    }\n\n}\n\n","export const TITLE_ADD_USER = 'Create new user'\nexport const TITLE_USER_LIST = 'User List'\nexport const TITLE_EDIT_USER = 'Update user - '\nexport const TITLE_ADD_ROLE = 'ADD NEW ROLE'\nexport const TITLE_ROLE_LIST = 'ROLE LIST'\nexport const TITLE_EDIT_ROLE = 'UPDATE ROLE'\nexport const USERNAME = 'Username'\nexport const EMAIL_ID = 'Email Id'\nexport const PHONE_NO = 'Phone No'\nexport const ADDRESS = 'Address'\nexport const COUNTRY = 'Country'\nexport const REALM = 'Realm'\nexport const STATE = 'State/Province'\nexport const CITY = 'City'\nexport const ROLE = 'Role'\nexport const ACTIVE = 'Status'\nexport const LAST_LOGIN_DATE = 'Last Login Date'\nexport const FAILED_ATTEMPTS = 'Failed Attempts'\nexport const PREFERRED_LANGUAGE = 'Preferred Language'\nexport const BTN_SUBMIT = 'Submit'\nexport const BTN_CANCEL = 'Cancel'\nexport const BTN_UPDATE = 'Update'\nexport const BTN_EDIT = 'Update'\nexport const BTN_FAILED_ATTEMPTS = 'Unlock account'\nexport const LANGUAGE_NAME = 'Language name'\nexport const HEALTH_AREA = 'Health Area'\nexport const ORGANISATION = 'Organisation'\nexport const REGION = 'Region'\nexport const ROLE_NAME = 'Role Name'\nexport const ROLE_NAME_ENG = 'Role Name[English]'\nexport const ROLE_NAME_SPA = 'Role Name[Spanish]'\nexport const ROLE_NAME_FRE = 'Role Name[French]'\nexport const ROLE_NAME_POR = 'Role Name[Portuguese]'\nexport const ROLE_ID = 'Role Id'\nexport const BUSINESS_FUNCTION = 'Business Function'\nexport const CAN_CREATE_ROLE = 'Can Create Role'\nexport const BTN_DOWNLOAD='DOWNLOAD'\nexport const BTN_EXPORT='EXPORT'\nexport const EXPORT_TITLE='Export Program Data'\nexport const PROGRAM='Program'\nexport const NOTHING_SELECTED='-Nothing Selected-'\nexport const DOWNLOAD_TITLE='Download Program Data'\nexport const IMPORT_TITLE='Import Program Data'\nexport const BTN_IMPORT='Import'\nexport const DATA_DOWNLOAD_SUCCESS='Data downloaded successfully.'\nexport const DATA_EXPORT_SUCCESS='Data exported successfully.'\nexport const DATA_IMPORT_SUCCESS='DATA imported successfully'\nexport const IMPORT_PROGRAM='Select programs to import'\nexport const IS_ACTIVE = 'Active'\nexport const ADD_LANGUAGE = 'Add Language'\nexport const UPDATE_LANGUAGE = 'Update Language'\nexport const SUBMIT_BUTTON = 'Submit'\nexport const UPDATE_BUTTON = 'Update'\nexport const ADD_NEW_LANGUAGE_TITLE = 'Add New Language'\nexport const ADD_DATASOURCE_TYPE = 'Add Data Source Type'\nexport const DATASOURCE_TYPE_NAME_EN = 'Data source type name (English)'\nexport const DATASOURCE_TYPE_NAME_FR = 'Data source  type name (French)'\nexport const DATASOURCE_TYPE_NAME_SP = 'Data source type  name (Spanish)'\nexport const DATASOURCE_TYPE_NAME_PO = 'Data source type name (portuguese)'\nexport const DATA_SOURCE_TYPE_LIST = 'Data Source Type List'\nexport const DATA_SOURCE_TYPE_ACTIVE = 'Active'\nexport const UPDATE_DATA_SOURCE_TYPE = \"Update Data Source Type\"\nexport const ADD_NEW_DATA_SOURCE_TYPE = \"Add New Data Source Type\"\nexport const ADD_DATASOURCE = 'Add Data Source'\nexport const UPDATE_DATASOURCE = 'Update Data Source'\nexport const DATASOURCE_NAME_EN = 'Data source name (English)'\nexport const DATASOURCE_NAME_FR = 'Data source name (French)'\nexport const DATASOURCE_NAME_SP = 'Data source name (Spanish)'\nexport const DATASOURCE_NAME_PO = 'Data source name (portuguese)'\nexport const DATASOURCE_ACTIVE = 'Active'\nexport const DATA_SOURCE_LIST = 'Data Source  List'\nexport const SELECT_DATA_SOURCE_TYPE='Select Data Source Type'\nexport const ADD_NEW_DATA_SOURCE = \"Add New Data Source\"\n\nexport const ADD_CURRENCY = 'Add Currency'\nexport const UPDATE_CURRENCY = 'Update Currency'\nexport const CURRENCY_NAME_EN = 'Currency name (English)'\nexport const CURRENCY_NAME_FR = 'Currency name (French)'\nexport const CURRENCY_NAME_SP = 'Currency name (Spanish)'\nexport const CURRENCY_NAME_PO = 'Currency name (portuguese)'\nexport const CURRENCY_CODE = 'Currency code'\nexport const CURRENCY_SYMBOL = 'Currency symbol'\nexport const CONVERSIONRATE_TO_USD = 'Conversion rate to usd'\nexport const CURRENCY_LIST=\"Currency List\"\nexport const ADD_NEW_CURRENCY=\"Add New Currency\"\n\nexport const COUNTRY_NAME_EN = 'Country name (English)'\nexport const COUNTRY_NAME_FR = 'Country name (French)'\nexport const COUNTRY_NAME_SP = 'Country name (Spanish)'\nexport const COUNTRY_NAME_PO = 'Country name (portuguese)'\nexport const SELECT_LANGUAGE='Select language'\nexport const SELECT_CURRENCY='Select currency'\nexport const ADD_COUNTRY='Add Country'\nexport const ADD_NEW_COUNTRY='Add New Country'\nexport const COUNTRY_LIST='Country List'\nexport const COUNTRY_ACTIVE=\"Active\"\nexport const UPDATE_COUNTRY=\"Update Country\"\n\nexport const ADD_SHIPMENT_STATUS=\"Add Shipment Status\"\nexport const UPDATE_SHIPMENT_STATUS=\"Update Shipment Status\"\nexport const SHIPMENTSTATUS_NAME_EN = 'Shipment status name (English)'\nexport const SHIPMENTSTATUS_NAME_FR = 'Shipment status name (French)'\nexport const SHIPMENTSTATUS_NAME_SP = 'Shipment status name (Spanish)'\nexport const SHIPMENTSTATUS_NAME_PO = 'Shipment status name (portuguese)'\nexport const SHIPMENT_STATUS_LIST='Shipment Status List'\nexport const ADD_NEW_SHIPMENT_STATUS='Add New Shipment Status'\nexport const SELECT_NEXT_SHIPMENT_STATUS='Select next shipment status'\n\n\n\n\n","import React, { Component } from 'react';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport { EMAIL_ID, PHONE_NO, REALM, ROLE, PREFERRED_LANGUAGE, TITLE_USER_LIST, TITLE_ADD_USER, ACTIVE, LAST_LOGIN_DATE, FAILED_ATTEMPTS, BTN_EDIT, BTN_FAILED_ATTEMPTS, USERNAME } from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nexport default class UserListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: []\n        }\n        this.editUser = this.editUser.bind(this);\n        this.unlockAccount = this.unlockAccount.bind(this);\n        this.addNewUser = this.addNewUser.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getUserList()\n            .then(response => {\n                this.setState({\n                    userList: response.data\n                })\n            })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n    render() {\n        return (\n            <div className=\"userList\">\n                <p>{this.props.match.params.message}</p>\n                <h1>{TITLE_USER_LIST}</h1>\n                <div className=\"container\">\n                    <button className=\"btn btn-add\" type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewUser}>{TITLE_ADD_USER}</button><br /><br />\n                    <div className=\"row\">\n                        <div className=\"col-md-12 scrollable\"></div>\n                        <table className=\"table table-responsive\" border=\"1\" align=\"center\">\n                            <thead>\n                                <tr>\n                                    <th>{REALM}</th>\n                                    <th>{USERNAME}</th>\n                                    <th>{EMAIL_ID}</th>\n                                    <th>{PHONE_NO}</th>\n                                    <th>{ROLE}</th>\n                                    <th>{PREFERRED_LANGUAGE}</th>\n                                    <th>{LAST_LOGIN_DATE}</th>\n                                    <th>{FAILED_ATTEMPTS}</th>\n                                    <th>{ACTIVE}</th>\n                                    <th>{BTN_EDIT}</th>\n                                    <th>{BTN_FAILED_ATTEMPTS}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.userList.map(\n                                        user =>\n                                            // <tr key={user.userId} onClick={() => this.editUser(user.userId)}>\n                                            <tr key={user.userId} onClick={() => this.editUser(user)}>\n                                                <td>\n                                                    {user.realm.label.engLabel}\n                                                </td>\n                                                <td>{user.username}</td>\n                                                <td>{user.emailId}</td>\n                                                <td>{user.phoneNumber}</td>\n                                                <td>{user.role.label.engLabel}</td>\n                                                <td>{user.language.languageName}</td>\n                                                <td>{user.lastLoginDate}</td>\n                                                <td>{user.faildAttempts}</td>\n                                                <td>{user.active.toString() === \"true\" ? \"Active\" : \"Disabled\"}\n                                                </td>\n                                                <td><button type=\"button\" onClick={() => this.editUser(user)}>{BTN_EDIT}</button></td>\n                                                <td><button type=\"button\" onClick={(e) => { e.stopPropagation(); this.unlockAccount(user.userId, user.emailId) }}>{BTN_FAILED_ATTEMPTS}</button></td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table></div>\n                </div>\n\n            </div>\n        )\n    }\n    editUser(user) {\n        this.props.history.push({\n            pathname: \"/editUser\",\n            state: { user: user }\n        });\n    }\n    unlockAccount(userId, emailId) {\n        if (navigator.onLine) {\n            UserService.unlockAccount(userId, emailId)\n                .then(response => {\n                    this.props.history.push(`/userList/${response.data.message}`)\n                    window.location.reload();\n                })\n                .catch(\n                    error => {\n                        switch (error.message) {\n                            case \"Network Error\":\n                                this.setState({\n                                    message: error.message\n                                })\n                                break\n                            default:\n                                this.setState({\n                                    message: error.response.data.message\n                                })\n                                break\n                        }\n                    }\n                );\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    addNewUser() {\n        if (navigator.onLine) {\n            this.props.history.push(`/addUser`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport { EMAIL_ID, PHONE_NO, REALM, ROLE, PREFERRED_LANGUAGE, ACTIVE, BTN_UPDATE, BTN_CANCEL, TITLE_EDIT_USER, USERNAME } from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\nexport default class EditUserComponent extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            languageId: AuthenticationService.getLanguageId(),\n            realms: [],\n            languages: [],\n            roles: [],\n            user: '',\n            'user.active': true\n        }\n        this.updateClicked = this.updateClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            user: this.props.location.state.user\n        });\n        UserService.getRealmList()\n            .then(response => {\n                this.setState({\n                    realms: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getLanguageList()\n            .then(response => {\n                this.setState({\n                    languages: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#userForm\").validate({\n            ignore: [],\n            rules: {\n                'user.emailId': {\n                    required: true,\n                    email: true\n                },\n                'user.phoneNumber': {\n                    required: true,\n                    number: true\n                },\n                'username': {\n                    required: true\n                },\n                'user.language.languageId': {\n                    required: true\n                },\n                'user.role.roleId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    dataChange(event) {\n        let { user } = this.state\n        if (event.target.name === \"user.realm.realmId\") {\n            user.realm.realmId = event.target.value\n        }\n        else if (event.target.name === \"user.realm.realmId\") {\n            user.realm.realmId = event.target.value\n        }\n        else if (event.target.name === \"user.role.roleId\") {\n            user.role.roleId = event.target.value\n        }\n        else if (event.target.name === \"user.language.languageId\") {\n            user.language.languageId = event.target.value\n        }\n        else if (event.target.name === \"user.emailId\") {\n            user.emailId = event.target.value\n        }\n        else if (event.target.name === \"user.username\") {\n            user.username = event.target.value\n        }\n        else if (event.target.name === \"user.phoneNumber\") {\n            user.phoneNumber = event.target.value\n        }\n        else if (event.target.name === \"user.active\") {\n            user.active = event.target.id === \"user.active2\" ? false : true\n        }\n\n        this.setState({\n            user\n        }, (\n        ) => {\n            // console.log(\"state after update---\",this.state.user)\n        })\n    }\n\n    render() {\n        const { realms } = this.state;\n        const { languages } = this.state;\n        const { roles } = this.state;\n        const { user } = this.state;\n\n        let realmList = realms.length > 0\n            && realms.map((item, i) => {\n                return (\n                    <option key={i} value={item.realmId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        let languagesList = languages.length > 0\n            && languages.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>\n                        {item.languageName}\n                    </option>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel !== null && item.label.porLabel !== \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel !== null && item.label.freLabel !== \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel !== null && item.label.spaLabel !== \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div className=\"addUser\">\n                <form name=\"userForm\" id=\"userForm\">\n                    <h3>{TITLE_EDIT_USER}{this.state.user.userId}</h3>\n                    {REALM} : <select id=\"user.realm.realmId\" name=\"user.realm.realmId\" value={this.state.user.realm ? this.state.user.realm.realmId : ''} onChange={this.dataChange}>\n                        <option value=\"\">-Nothing Selected-</option>\n                        {realmList}\n                    </select><br></br><br></br>\n                    {USERNAME} : <input type=\"text\" id=\"user.username\" name=\"user.username\" value={this.state.user.username} onChange={this.dataChange} /><br></br><br></br>\n                    {EMAIL_ID} : <input type=\"text\" id=\"user.emailId\" name=\"user.emailId\" value={this.state.user.emailId} onChange={this.dataChange} /><br></br><br></br>\n                    {PHONE_NO} : <input type=\"text\" id=\"user.phoneNumber\" name=\"user.phoneNumber\" value={this.state.user.phoneNumber} onChange={this.dataChange} maxLength=\"15\" minLength=\"4\" /><br></br><br></br>\n                    {ROLE} : <select id=\"user.role.roleId\" name=\"user.role.roleId\" value={this.state.user.role ? this.state.user.role.roleId : ''} onChange={this.dataChange}>\n                        <option value=\"\">-Nothing Selected-</option>\n                        {roleList}\n                    </select><br></br><br></br>\n                    {PREFERRED_LANGUAGE} : <select id=\"user.language.languageId\" name=\"user.language.languageId\" value={this.state.user.language ? this.state.user.language.languageId : ''} onChange={this.dataChange}>\n                        <option value=\"\">-Nothing Selected-</option>\n                        {languagesList}\n                    </select><br></br><br></br>\n                    {ACTIVE}:\n                    <input type=\"radio\" id=\"user.active1\" name=\"user.active\" value={true} checked={this.state.user.active === true} onChange={this.dataChange} /> Active\n                    <input type=\"radio\" id=\"user.active2\" name=\"user.active\" value={false} checked={this.state.user.active === false} onChange={this.dataChange} /> Disabled\n                    <br></br><br></br>\n\n                    <button type=\"button\" onClick={this.updateClicked}>{BTN_UPDATE}</button>\n                    <button type=\"button\" onClick={this.cancelClicked}>{BTN_CANCEL}</button><br></br><br></br>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n    updateClicked() {\n        if (navigator.onLine) {\n            if (AuthenticationService.checkTypeOfSession()) {\n                var json = this.state.user;\n                if ($(\"#userForm\").valid()) {\n                    UserService.editUser(json)\n                        .then(response => {\n                            this.props.history.push(`/userList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/userList/` + \"Action Canceled\")\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from '../../api/UserService'\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport { SECRET_KEY } from '../../Constants.js'\n\n\nexport default class ChangePasswordComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        $.validator.addMethod('checkPassword', function () {\n            if ($('#newPassword').val() === $('#confirmNewPassword').val()) {\n                return true;\n            } else {\n                return false;\n            }\n        }, 'The new password does not match.');\n\n        $.validator.addMethod('checkOldPassword', function () {\n            if ($('#newPassword').val() === $('#oldPassword').val()) {\n                console.log(\"same\");\n                return false;\n            } else {\n                console.log(\"different\");\n                return true;\n            }\n        }, \"The new password can't be same as old password.\");\n\n        // $.validator.addMethod('checkOldPassword', function () {\n        //     let userOff = JSON.parse(localStorage.getItem('user'));\n        //     let val;\n        //     console.log(\"password---\"+$('#oldPassword').val())\n        //     bcrypt.compare($('#oldPassword').val(), userOff.password, function (err, res) {\n        //         console.log(\"res---\"+res);\n        //             val = res; \n        //     });\n        //     if (val === true) {\n        //         return true;\n        //     } \n        //     if(val === false) {\n        //         return false;\n        //     }\n        //     // return val;\n        // }, 'Old password is incorrect.');\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                oldPassword: {\n                    required: true\n                },\n                newPassword: {\n                    required: true,\n                    checkOldPassword:true\n                },\n                confirmNewPassword: {\n                    required: true,\n                    checkPassword: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Update Password</h3>\n                    Old password : <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" /><br></br><br></br>\n                    New password : <input type=\"password\" id=\"newPassword\" name=\"newPassword\" /><br></br><br></br>\n                    Confirm new password : <input type=\"password\" id=\"confirmNewPassword\" name=\"confirmNewPassword\" /><br></br><br></br>\n                    <Online><button type=\"button\" onClick={this.submitClicked}>Submit</button></Online>\n                    <Online><button type=\"button\" onClick={this.cancelClicked}>Cancel</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    submitClicked() {\n        if ($(\"#form1\").valid()) {\n            if (navigator.onLine) {\n                UserService.changePassword(AuthenticationService.getLoggedInUsername(),$('#oldPassword').val(),$('#newPassword').val())\n                    .then(response => {\n                        console.log(response.statusText)\n                        localStorage.setItem('password', CryptoJS.AES.encrypt((response.data.data).toString(), `${SECRET_KEY}`));\n                        this.props.history.push(`/welcome/${response.data.message}`)\n                    })\n                    .catch(\n                        error => {\n                            console.log(error.message);\n                            console.log(error.text);\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    );\n            } else {\n                alert(\"You must be Online to update the password.\")\n            }\n        }\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/welcome/Action canceled.`)\n    }\n}\n\n","import React, { Component } from 'react';\nimport UserService from \"../../api/UserService.js\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as labels from '../../Labels.js'\n\n\nexport default class RoleListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            roles: [],\n            message: \"\"\n        }\n        this.editRole = this.editRole.bind(this);\n        this.addNewRole = this.addNewRole.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getRoleList()\n            .then(response => {\n                console.log(\"rol list---\" + response.data);\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    render() {\n        return (\n            <div className=\"roleList\">\n                <p>{this.props.match.params.message}</p>\n                <h3>{this.state.message}</h3>\n                <div>{labels.TITLE_ROLE_LIST}</div>\n                <button className=\"btn btn-add\" type=\"button\" style={{ marginLeft: '-736px' }} onClick={this.addNewRole}>{labels.TITLE_ADD_ROLE}</button><br /><br />\n                <table border=\"1\" align=\"center\">\n                    <thead>\n                        <tr>\n                            <th>{labels.ROLE_ID}</th>\n                            <th>{labels.ROLE_NAME_ENG}</th>\n                            <th>{labels.ROLE_NAME_POR}</th>\n                            <th>{labels.ROLE_NAME_FRE}</th>\n                            <th>{labels.ROLE_NAME_SPA}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.roles.map(role =>\n                                <tr key={role.roleId} onClick={() => this.editRole(role)}>\n                                    <td>{role.roleId}</td>\n                                    <td>{role.label.engLabel}</td>\n                                    <td>{role.label.porLabel}</td>\n                                    <td>{role.label.freLabel}</td>\n                                    <td>{role.label.spaLabel}</td>\n                                </tr>)\n                        }\n                    </tbody>\n                </table>\n                <br />\n            </div>\n        );\n    }\n    editRole(role) {\n        this.props.history.push({\n            pathname: \"/editRole\",\n            state: { role: role }\n        });\n    }\n    addNewRole() {\n        if (navigator.onLine) {\n            this.props.history.push(`/addRole`);\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport * as labels from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport '../../css/bootstrap/bootstrap.min.css';\nimport '../../App.css'\n\n\nexport default class AddRoleComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            businessFunctions: [],\n            roles: [],\n            message: '',\n            languageId: AuthenticationService.getLanguageId(),\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        // this.dataChange = this.dataChange.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    // dataChange(event) {\n    //     let { role } = this.state\n    //     // console.log(\"business function---\", event.target.value);\n    //     console.log(\"name---------------\" + event.target.name);\n    //     switch (event.target.name) {\n    //         case \"role.label.engLabel\": role.label.engLabel = event.target.value;\n    //         case \"role.label.porLabel\": role.label.porLabel = event.target.value;\n    //         case \"role.label.freLabel\": role.label.freLabel = event.target.value;\n    //         case \"role.label.spaLabel\": role.label.spaLabel = event.target.value;\n    //         case \"role.businessFunctions\": role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value);\n    //         case \"role.canCreateRole\": role.canCreateRole = event.target.value;\n    //         default: [event.target.name] = event.target.value;\n    //     }\n\n    //     this.setState({\n    //         role\n    //     }, (\n    //     ) => {\n    //         console.log(\"state after update---\", this.state.role)\n    //     })\n    // }\n\n    // handleChange(event) {\n    //     this.setState({\n    //         role: {\n    //             label: {\n    //                 engLabel: ''\n    //             },\n    //             businessFunctions: Array.from(event.target.selectedOptions, (item) => item.value)\n    //         }\n    //     }, (\n    //     ) => {\n    //         console.log(\"state after update---\", this.state.role)\n    //     });\n    // }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getBusinessFunctionList()\n            .then(response => {\n                console.log(\"business functions---\", response.data);\n                this.setState({\n                    businessFunctions: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                console.log(\"role list---\", response.data);\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n\n        $(\"#roleForm\").validate({\n            ignore: [],\n            rules: {\n                'role.label.engLabel': {\n                    required: true,\n                    // lettersonly: true,\n                    maxlength: 255\n\n                },\n                'role.label.porLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.freLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.spaLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.businessFunctions': {\n                    required: true\n                },\n                'role.canCreateRole': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        const { businessFunctions } = this.state;\n        const { roles } = this.state;\n\n        let businessFunctionsList = businessFunctions.length > 0\n            && businessFunctions.map((item, i) => {\n                return (\n                    <>\n                        <option key={i} value={item.businessFunctionId}>\n                            {(() => {\n                                switch (this.state.languageId) {\n                                    case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                    case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                    case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                    default: return item.label.engLabel;\n                                }\n                            })()}\n                        </option>\n                    </>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div class=\"page-container page-navigation-toggled page-container-wide\">\n                <div class=\"page-content\">\n                    <ul class=\"breadcrumb\">\n                        <li><a href=\"#\">Home</a></li>\n                        <li><a href=\"#\">Admin</a></li>\n                        <li><a href=\"#\">Role</a></li>\n                        <li><a href=\"#\">Add Role</a></li>\n                    </ul>\n                    <div class=\"page-content-wrap\">\n                        <div><h5>{this.state.message}</h5></div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n\n                                <form name=\"roleForm\" id=\"roleForm\" class=\"form-horizontal\">\n                                    <div class=\"panel panel-default\">\n                                        <div class=\"panel-heading\">\n                                            <h3 class=\"panel-title\">{labels.TITLE_ADD_ROLE}</h3>\n                                        </div>\n                                        <div class=\"panel-body\">\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_ENG}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.engLabel\" class=\"form-control\" name=\"role.label.engLabel\" />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_POR}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.porLabel\" name=\"role.label.porLabel\" class=\"form-control\" />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_FRE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.freLabel\" name=\"role.label.freLabel\" class=\"form-control\" />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_SPA}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.spaLabel\" name=\"role.label.spaLabel\" class=\"form-control\" />\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.BUSINESS_FUNCTION}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.businessFunctions\" class=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.businessFunctions\" multiple={true}>\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {businessFunctionsList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.CAN_CREATE_ROLE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.canCreateRole\" className=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.canCreateRole\" multiple={true} onChange={this.dataChange}>\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {roleList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.submitClicked}>{labels.BTN_SUBMIT}</button>\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.cancelClicked}>{labels.BTN_CANCEL}</button><br></br><br></br>\n\n                                        </div>\n                                        <div class=\"panel-footer\">\n                                            <div class=\"pull-right\">\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    submitClicked() {\n        console.log($(\"#role\\\\.businessFunctions\").val())\n        if (navigator.onLine) {\n            if (AuthenticationService.checkTypeOfSession()) {\n                if ($(\"#roleForm\").valid()) {\n                    var json = {\n                        label: {\n                            engLabel: $(\"#role\\\\.label\\\\.engLabel\").val(),\n                            porLabel: $(\"#role\\\\.label\\\\.porLabel\").val(),\n                            freLabel: $(\"#role\\\\.label\\\\.freLabel\").val(),\n                            spaLabel: $(\"#role\\\\.label\\\\.spaLabel\").val()\n                        },\n                        businessFunctions: $(\"#role\\\\.businessFunctions\").val(),\n                        canCreateRole: $(\"#role\\\\.canCreateRole\").val()\n                    }\n                    UserService.addNewRole(json)\n                        .then(response => {\n                            this.props.history.push(`/roleList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/roleList/` + \"Action Canceled\")\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from \"../../api/UserService\";\nimport * as labels from '../../Labels.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport '../../css/bootstrap/bootstrap.min.css';\nimport '../../App.css'\n\n\nexport default class AddRoleComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            businessFunctions: [],\n            roles: [],\n            message: '',\n            languageId: AuthenticationService.getLanguageId(),\n            role: this.props.location.state.role\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        if (!AuthenticationService.checkTypeOfSession()) {\n            alert(\"You can't change your session from online to offline or vice versa.\");\n            this.props.history.push(`/`)\n        }\n        AuthenticationService.setupAxiosInterceptors();\n        // this.setState({\n        //     role: this.props.location.state.role\n        // });\n        UserService.getBusinessFunctionList()\n            .then(response => {\n                console.log(\"business functions---\", response.data);\n                this.setState({\n                    businessFunctions: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                console.log(\"role list---\", response.data);\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n\n        $(\"#roleForm\").validate({\n            ignore: [],\n            rules: {\n                'role.label.engLabel': {\n                    required: true,\n                    // lettersonly: true,\n                    maxlength: 255\n\n                },\n                'role.label.porLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.freLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.label.spaLabel': {\n                    // lettersonly: true,\n                    maxlength: 255\n                },\n                'role.businessFunctions': {\n                    required: true\n                },\n                'role.canCreateRole': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    dataChange(event) {\n        let { role } = this.state\n        console.log(\"name---------------\" + event.target.name);\n        if (event.target.name === \"role.label.engLabel\") {\n            role.label.engLabel = event.target.value\n        } else if (event.target.name === \"role.label.porLabel\") {\n            role.label.porLabel = event.target.value\n        }\n        else if (event.target.name === \"role.label.freLabel\") {\n            role.label.freLabel = event.target.value\n        }\n        else if (event.target.name === \"role.label.spaLabel\") {\n            role.label.spaLabel = event.target.value\n        }\n        else if (event.target.name === \"role.businessFunctions\") {\n            role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value)\n        }\n\n        else if (event.target.name === \"role.canCreateRole\") {\n            role.canCreateRole = Array.from(event.target.selectedOptions, (item) => item.value)\n        }\n        // switch (event.target.name) {\n        //     case \"role.label.engLabel\": role.label.engLabel = event.target.value;\n        //     case \"role.label.porLabel\": role.label.porLabel = event.target.value;\n        //     case \"role.label.freLabel\": role.label.freLabel = event.target.value;\n        //     case \"role.label.spaLabel\": role.label.spaLabel = event.target.value;\n        //     // case \"role.businessFunctions\": role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value);\n        //     // case \"role.canCreateRole\": role.canCreateRole = event.target.value;\n        //     // default: [event.target.name] = event.target.value;\n        // }\n\n        this.setState({\n            role\n        }, (\n        ) => {\n            console.log(\"state after update---\", this.state.role)\n        })\n    }\n\n\n    render() {\n        const { businessFunctions } = this.state;\n        const { roles } = this.state;\n\n        let businessFunctionsList = businessFunctions.length > 0\n            && businessFunctions.map((item, i) => {\n                return (\n                    <>\n                        <option key={i} value={item.businessFunctionId}>\n                            {(() => {\n                                switch (this.state.languageId) {\n                                    case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                    case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                    case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                    default: return item.label.engLabel;\n                                }\n                            })()}\n                        </option>\n                    </>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {(() => {\n                            switch (this.state.languageId) {\n                                case 2: return (item.label.porLabel != null && item.label.porLabel != \"\" ? item.label.porLabel : item.label.engLabel);\n                                case 3: return (item.label.freLabel != null && item.label.freLabel != \"\" ? item.label.freLabel : item.label.engLabel);\n                                case 4: return (item.label.spaLabel != null && item.label.spaLabel != \"\" ? item.label.spaLabel : item.label.engLabel);\n                                default: return item.label.engLabel;\n                            }\n                        })()}\n                    </option>\n                )\n            }, this);\n        return (\n            <div class=\"page-container page-navigation-toggled page-container-wide\">\n                <div class=\"page-content\">\n                    <ul class=\"breadcrumb\">\n                        <li><a href=\"#\">Home</a></li>\n                        <li><a href=\"#\">Admin</a></li>\n                        <li><a href=\"#\">Role</a></li>\n                        <li><a href=\"#\">Edit Role</a></li>\n                    </ul>\n                    <div class=\"page-content-wrap\">\n                        <div><h5>{this.state.message}</h5></div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n\n                                <form name=\"roleForm\" id=\"roleForm\" class=\"form-horizontal\">\n                                    <div class=\"panel panel-default\">\n                                        <div class=\"panel-heading\">\n                                            <h3 class=\"panel-title\">{labels.TITLE_EDIT_ROLE}</h3>\n                                        </div>\n                                        <div class=\"panel-body\">\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_ENG}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.engLabel\" class=\"form-control\" name=\"role.label.engLabel\" value={this.state.role.label.engLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_POR}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.porLabel\" name=\"role.label.porLabel\" class=\"form-control\" value={this.state.role.label.porLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_FRE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.freLabel\" name=\"role.label.freLabel\" class=\"form-control\" value={this.state.role.label.freLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.ROLE_NAME_SPA}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <input type=\"text\" id=\"role.label.spaLabel\" name=\"role.label.spaLabel\" class=\"form-control\" value={this.state.role.label.spaLabel} onChange={this.dataChange} readOnly={true} />\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.BUSINESS_FUNCTION}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.businessFunctions\" class=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.businessFunctions\" multiple={true} value={this.state.role.businessFunctions} onChange={this.dataChange} placeholder=\"Please select business function\">\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {businessFunctionsList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label class=\"req col-md-2 col-xs-12 control-label\">{labels.CAN_CREATE_ROLE}</label>\n                                                <div class=\"col-md-6 col-xs-12\">\n                                                    <select id=\"role.canCreateRole\" className=\"form-control select\" data-live-search=\"true\" data-actions-box=\"true\" name=\"role.canCreateRole\" multiple={true} value={this.state.role.canCreateRole} onChange={this.dataChange}>\n                                                        <option value=\"\">-Nothing Selected-</option>\n                                                        {roleList}\n                                                    </select>\n                                                    \n                                                </div>\n                                            </div>\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={this.submitClicked}>{labels.BTN_UPDATE}</button>\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.cancelClicked}>{labels.BTN_CANCEL}</button><br></br><br></br>\n\n                                        </div>\n                                        <div class=\"panel-footer\">\n                                            <div class=\"pull-right\">\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    submitClicked() {\n        console.log($(\"#role\\\\.businessFunctions\").val())\n        if (navigator.onLine) {\n            if (AuthenticationService.checkTypeOfSession()) {\n                if ($(\"#roleForm\").valid()) {\n\n                    UserService.editRole(this.state.role)\n                        .then(response => {\n                            this.props.history.push(`/roleList/${response.data.message}`)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            } else {\n                alert(\"You can't change your session from online to offline or vice versa.\");\n            }\n        } else {\n            alert(\"You must be Online.\")\n        }\n    }\n    cancelClicked() {\n        this.props.history.push(`/roleList/` + \"Action Canceled\")\n    }\n\n}\n\n","import axios from \"axios\";\nimport {API_URL} from '../Constants.js'\nclass LanguageService{\n\naddLanguage(json){\n    return axios.put(`${API_URL}/api/addLanguage/`, json, {\n    });\n}\n\ngetLanguageList() {\n    return axios.get(`${API_URL}/api/getLanguageListAll/`, {\n    });\n}\ngetLanguageListActive() {\n    return axios.get(`${API_URL}/api/getLanguageList/`, {\n    });\n}\neditLanguage(json) {\n    return axios.put(`${API_URL}/api/editLanguage/`, json, {\n    });\n}\n\n}\n\nexport default new LanguageService()","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport * as myConst from '../../Labels.js';\nimport LanguageService from '../../api/LanguageService.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\nclass AddLanguageComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            languageName: ''\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n    updateFieldData(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        $(\"#languageForm\").validate({\n            ignore: [],\n            rules: {\n                languageName: {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 100\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    submitForm(event) {\n        if (navigator.onLine) {\n            console.log(\"user in online-----\");\n            if ($(\"#languageForm\").valid()) {\n                LanguageService.addLanguage(this.state).then(response => {\n                    this.props.history.push(`/languageList/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h3>{myConst.ADD_LANGUAGE}</h3>\n                <form name=\"languageForm\" id=\"languageForm\">\n                    <div>\n                        <label>{myConst.LANGUAGE_NAME}:-</label>\n                        <input type=\"text\" name=\"languageName\" value={this.state.languageName} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\nexport default AddLanguageComponent;","import React, { Component } from 'react';\nimport LanguageService from '../../api/LanguageService.js'\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\n\n\n\nexport default class LanguageListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            langaugeList: []\n        }\n        this.editLanguage = this.editLanguage.bind(this);\n        this.addNewLanguage = this.addNewLanguage.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        LanguageService.getLanguageList()\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    langaugeList: response.data\n                })\n            })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    editLanguage(language) {\n        this.props.history.push({\n            pathname: \"/editLanguage\",\n            state: { language: language }\n        });\n    }\n\n    addNewLanguage(){\n        if (navigator.onLine) {\n            this.props.history.push(`/addLanguage`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n            <p>{this.props.match.params.message}</p>\n            <div>\n             <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewLanguage}>{myConst.ADD_NEW_LANGUAGE_TITLE}</button><br /><br />\n            </div>  \n              <div className=\"langaugeList\">\n\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.LANGUAGE_NAME}</th>\n                                <th>{myConst.IS_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.langaugeList.map(language =>\n\n                                    <tr key={language.languageId} onClick={() => this.editLanguage(language)}>\n                                        <td>{language.languageName}</td>\n                                        <td>{language.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport LanguageService from '../../api/LanguageService.js'\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\n\nexport default class EditLanguageComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = { language: '' }\n\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n    componentDidMount() {\n       AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            language: this.props.location.state.language\n        });\n        console.log(this.state);\n        $(\"#updateLanguageForm\").validate({\n            ignore: [],\n            rules: {\n                'language.languageName': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 100\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    updateFieldData(event) {\n\n        let { language } = this.state\n\n        if (event.target.name === \"language.languageName\") {\n            console.log(\"inside if\")\n            language.languageName = event.target.value\n        } else if (event.target.name === \"language.active\") {\n            language.active = event.target.id === \"language.active2\" ? false : true\n        }\n\n        this.setState(\n            {\n                language\n            }\n        );\n    }\n\n    updateForm() {\n        if (navigator.onLine) {\n            if ($(\"#updateLanguageForm\").valid()) {\n\n                LanguageService.editLanguage(this.state.language).then(response => {\n                    this.props.history.push(`/languageList/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n\n            }\n        } else { alert(\"To perform this action you must be online.\"); }\n    }\n\n    render() {\n\n        return (\n            <>\n                <h3>{myConst.UPDATE_LANGUAGE}</h3>\n                <form name=\"updatyeLanguageForm\" id=\"updateLanguageForm\">\n                    <div>\n                        <label>{myConst.LANGUAGE_NAME}:-</label>\n                        <input type=\"text\" name=\"language.languageName\" value={this.state.language.languageName} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <div>\n                            {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"language.active1\" name=\"language.active\" value={true} checked={this.state.language.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"language.active2\" name=\"language.active\" value={false} checked={this.state.language.active === false} onChange={this.updateFieldData} /> Disabled\n        </div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n\n        );\n    }\n}","import axios from \"axios\";\nimport {API_URL} from '../Constants.js';\n\nclass DataSourceTypeService{\n\naddDataSourceType(json){\nreturn axios.put(`${API_URL}/api/addDataSourceType/`,json,{}\n);\n}\n\ngetDataSourceTypeList() {\n    return axios.get(`${API_URL}/api/getDataSourceTypeList/`, {\n    });\n}\n\ngetDataSourceTypeListActive() {\n    return axios.get(`${API_URL}/api/getDataSourceTypeListActive/`, {\n    });\n}\n\neditDataSourceType(json) {\n    return axios.put(`${API_URL}/api/editDataSourceType/`, json, {\n    });\n}\n}\nexport default new DataSourceTypeService();","import React,{Component} from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport DataSourceTypeService from '../../api/DataSourceTypeService.js'\n\nexport default class AddDataSourceTypeComponent extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            \n         }\n\n         this.updateFieldData=this.updateFieldData.bind(this);\n         this.submitForm=this.submitForm.bind(this);\n\n    }\n\n    componentDidMount(){\n        AuthenticationService.setupAxiosInterceptors();\n        $(\"#dataSourceTypeForm\").validate({\n            ignore: [],\n            rules: {\n                'engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'freLabel': {\n                   \n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'spaLabel': {\n                    \n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'porLabel': {\n                    \n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n\n    }\n\n    updateFieldData(event){\n       //console.log(event.target.name); \n        this.setState(\n           {\n                [event.target.name]: event.target.value      \n            }\n        )\n\n    }\n\n    submitForm(){\n        if (navigator.onLine) {\n            if ($(\"#dataSourceTypeForm\").valid()) {\n                console.log(this.state);\n                DataSourceTypeService.addDataSourceType(this.state).then(response => {\n                    this.props.history.push(`/dataSourceTypeList/${response.data.message}`)\n                    console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n               \n\n\n            }\n        }else{\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\nrender(){\n        return(\n         <>\n        <h3>{myConst.ADD_DATASOURCE_TYPE}</h3>\n                <form name=\"dataSourceTypeForm\" id=\"dataSourceTypeForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"engLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"freLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"spaLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"porLabel\"  onChange={this.updateFieldData} />\n                    </div>\n                    <br/><br/>\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n        </>);\n    }\n}","import React, { Component } from 'react';\nimport DataSourceTypeService from '../../api/DataSourceTypeService'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\n\nexport default class DataSourceListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSourceList: []\n\n        }\n\n        this.editDataSourceType = this.editDataSourceType.bind(this);\n        this.addNewDataSourceType = this.addNewDataSourceType.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        DataSourceTypeService.getDataSourceTypeList().then(response => {\n            //console.log(response.data)\n            this.setState({\n                dataSourceList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    editDataSourceType(dataSourceType) {\n        this.props.history.push({\n            pathname: \"/editDataSourceType\",\n            state: { dataSourceType: dataSourceType }\n        });\n\n    }\n\n    addNewDataSourceType() {\n\n        if (navigator.onLine) {\n            this.props.history.push(`/addDataSourceType`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n\n    }\n    render() {\n        return (\n            <>\n\n                <p>{this.props.match.params.message}</p>\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewDataSourceType}>{myConst.ADD_NEW_DATA_SOURCE_TYPE}</button><br /><br />\n                </div>\n\n                <div className=\"dataSourceTypeList\">\n\n                    <h1>{myConst.DATA_SOURCE_TYPE_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_EN}</th>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_FR}</th>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_SP}</th>\n                                <th>{myConst.DATASOURCE_TYPE_NAME_PO}</th>\n                                <th>{myConst.DATA_SOURCE_TYPE_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.dataSourceList.map(dataSourceType =>\n\n                                    <tr key={dataSourceType.dataSourceTypeId} onClick={() => this.editDataSourceType(dataSourceType)}>\n                                        <td>{dataSourceType.label.engLabel}</td>\n                                        <td>{dataSourceType.label.freLabel}</td>\n                                        <td>{dataSourceType.label.spaLabel}</td>\n                                        <td>{dataSourceType.label.porLabel}</td>\n                                        <td>{dataSourceType.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport DataSourceTypeService from '../../api/DataSourceTypeService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class UpdateDataSourceTypeComponent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSourceType:\n            {\n                active: '',\n                \n                label: {\n                    engLabel: '',\n                    spaLabel: '',\n                    freLabel: '',\n                    porLabel: '',\n                    labelId: '',\n                }\n            }\n        }\n\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        console.log(this.props.location.state.dataSourceType);\n        this.setState({\n            dataSourceType: this.props.location.state.dataSourceType\n        });\n\n\n        $(\"#updatyeDataSourceTypeForm\").validate({\n            ignore: [],\n            rules: {\n                'dataSourceType.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n\n    updateFieldData(event) {\n        let { dataSourceType } = this.state\n\n        if (event.target.name === \"dataSourceType.label.engLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.engLabel = event.target.value\n        } if (event.target.name === \"dataSourceType.label.freLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.freLabel = event.target.value\n        } if (event.target.name === \"dataSourceType.label.spaLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.spaLabel = event.target.value\n        } if (event.target.name === \"dataSourceType.label.porLabel\") {\n            console.log(\"inside if\")\n            dataSourceType.label.porLabel = event.target.value\n        } else if (event.target.name === \"dataSourceType.active\") {\n            dataSourceType.active = event.target.id === \"dataSourceType.active2\" ? false : true\n        }\n\n\n        this.setState(\n            {\n                dataSourceType\n            }\n        )\n    }\n\n    updateForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#updatyeDataSourceTypeForm\").valid()) {\n\n                DataSourceTypeService.editDataSourceType(this.state.dataSourceType).then(response => {\n                    //this.props.history.push(`/languageList/${response.data.message}`)\n                    this.props.history.push(`/dataSourceTypeList/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n\n            }\n        }else{\n\n            alert(\"To perform this action you must be online.\");\n        }\n\n    }\n\n    render() {\n\n        return (\n            <>\n\n                <h3>{myConst.UPDATE_DATA_SOURCE_TYPE}</h3>\n                <form name=\"updatyeDataSourceTypeForm\" id=\"updatyeDataSourceTypeForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.engLabel\" value={this.state.dataSourceType.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.freLabel\" value={this.state.dataSourceType.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.spaLabel\" value={this.state.dataSourceType.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"dataSourceType.label.porLabel\" value={this.state.dataSourceType.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"dataSourceType.active1\" name=\"dataSourceType.active\" value={true} checked={this.state.dataSourceType.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"dataSourceType.active2\" name=\"dataSourceType.active\" value={false} checked={this.state.dataSourceType.active === false} onChange={this.updateFieldData} /> Disabled\n                     </div>\n                    {/* <input type=\"hidden\" name=\"dataSourceType.labelId\" value={this.state.dataSourceType.labelId} /> */}\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n\n\n\n            </>\n        );\n    }\n\n\n}\n\n","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass DataSourceService {\n\n    addDataSource(json) {\n        return axios.put(`${API_URL}/api/addDataSource/`, json, {}\n        );\n    }\n\n    getDataSourceList() {\n        return axios.get(`${API_URL}/api/getDataSourceList/`, {\n        });\n    }\n\n    editDataSource(json) {\n        return axios.put(`${API_URL}/api/editDataSource/`,json,{}\n            );\n        }\n    \n}\nexport default new DataSourceService();","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport DataSourceService from '../../api/DataSourceService';\nimport DataSourceTypeService from '../../api/DataSourceTypeService';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class AddDataSource extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: {\n                engLabel: '',\n                freLabel: '',\n                spaLabel: '',\n                porLabel: ''\n            },\n            dataSourceType: {\n                dataSourceTypeId: ''\n            },\n            dataSourceTypeList: []\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        DataSourceTypeService.getDataSourceTypeListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                dataSourceTypeList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n        $(\"#dataSourceForm\").validate({\n            ignore: [],\n            rules: {\n                'label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSourceType.dataSourceTypeId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    updateFieldData(event) {\n        if (event.target.name === \"label.engLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"label.freLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.freLabel = event.target.value\n        } if (event.target.name === \"label.spaLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.spaLabel = event.target.value\n        } if (event.target.name === \"label.porLabel\") {\n            //console.log(\"inside if\")\n            this.state.label.porLabel = event.target.value\n        }\n        else if (event.target.name === \"dataSourceType.dataSourceTypeId\") {\n            this.state.dataSourceType.dataSourceTypeId = event.target.value\n        }\n\n        let { dataSource } = this.state\n        this.setState(\n            {\n                dataSource\n            }\n        )\n\n\n    }\n\n    submitForm() {\n\n        if (navigator.onLine) {\n            if ($(\"#dataSourceForm\").valid()) {\n                console.log(this.state);\n                //delete this.state[\"dataSourceTypeList\"];\n                DataSourceService.addDataSource(this.state).then(response => {\n                    this.props.history.push(`/dataSourceList/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n               \n\n            }\n        } else {\n            alert(\"To perform this action you must be online.\");\n\n        }\n\n    }\n\n\n    render() {\n        const { dataSourceTypeList } = this.state;\n        let dataSourceTypes = dataSourceTypeList.length > 0\n            && dataSourceTypeList.map((item, i) => {\n                return (\n                    <option key={i} value={item.dataSourceTypeId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <>\n\n                <h3>{myConst.ADD_DATASOURCE}</h3>\n                <form name=\"dataSourceForm\" id=\"dataSourceForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n\n                    <div>\n                        {myConst.SELECT_DATA_SOURCE_TYPE} : <select id=\"dataSourceTypeId\" name=\"dataSourceType.dataSourceTypeId\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {dataSourceTypes}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n        );\n\n    }\n\n}","import React,{Compoent, Component} from 'react';\nimport DataSourceService from '../../api/DataSourceService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\n\n\nexport default class DataSourceListComponent extends Component{\n\nconstructor(props){\nsuper(props);\nthis.state={\ndataSourceList:[]\n\n}\nthis.editDataSource=this.editDataSource.bind(this);\nthis.addNewDataSource=this.addNewDataSource.bind(this);\n}\n\ncomponentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    DataSourceService.getDataSourceList().then(response => {        \n        this.setState({\n            dataSourceList: response.data\n        })\n    })\n        .catch(\n            error => {\n                switch (error.message) {\n                    case \"Network Error\":\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                    default:\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                }\n            }\n        );\n}\n\neditDataSource(dataSource) {\n    this.props.history.push({\n        pathname: \"/editDataSource\",\n        state: { dataSource: dataSource }\n    });\n\n}\n\naddNewDataSource(){\n\n    if (navigator.onLine) {\n        this.props.history.push(`/addDataSource`)\n    } else {\n        alert(\"You must be Online.\")\n    }\n\n}\n\nrender() {\n    return (\n        <>\n\n            <p>{this.props.match.params.message}</p>\n            <div>\n                <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewDataSource}>{myConst.ADD_NEW_DATA_SOURCE}</button><br /><br />\n            </div>\n\n            <div className=\"dataSourceList\">\n\n                <h1>{myConst.DATA_SOURCE_LIST}</h1>\n                <table border=\"1\" align=\"center\">\n                    <thead>\n                        <tr>\n                            <th>{myConst.DATASOURCE_NAME_EN}</th>\n                            <th>{myConst.DATASOURCE_NAME_FR}</th>\n                            <th>{myConst.DATASOURCE_NAME_SP}</th>\n                            <th>{myConst.DATASOURCE_NAME_PO}</th>\n                            <th>{myConst.DATASOURCE_ACTIVE}</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.dataSourceList.map(dataSource =>\n\n                                <tr key={dataSource.dataSourceId} onClick={() => this.editDataSource(dataSource)}>\n                                    <td>{dataSource.label.engLabel}</td>\n                                    <td>{dataSource.label.freLabel}</td>\n                                    <td>{dataSource.label.spaLabel}</td>\n                                    <td>{dataSource.label.porLabel}</td>\n                                    <td>{dataSource.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                </tr>\n                            )\n\n                        }\n                    </tbody>\n                </table>\n            </div>\n\n        </>\n    );\n}\n\n}","import React, { Component } from 'react';\nimport DataSourceTypeService from '../../api/DataSourceTypeService';\nimport DataSourceService from '../../api/DataSourceService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class UpdateDataSourceComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            dataSource: {\n                active: '',\n                dataSourceId: '',\n                label: {\n                    engLabel: '',\n                    spaLabel: '',\n                    freLabel: '',\n                    porLabel: '',\n                    labelId: '',\n                },\n                dataSourceType: {\n                    dataSourceTypeId: ''\n                }\n            },\n            dataSourceTypeList: []\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            dataSource: this.props.location.state.dataSource\n        });\n\n        DataSourceTypeService.getDataSourceTypeListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                dataSourceTypeList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#updatyeDataSourceForm\").validate({\n            ignore: [],\n            rules: {\n                'dataSource.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'dataSource.dataSourceType.dataSourceTypeId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n\n    updateFieldData(event) {\n\n        let { dataSource } = this.state\n\n        if (event.target.name === \"dataSource.label.engLabel\") {\n            // console.log(\"inside if\")\n            dataSource.label.engLabel = event.target.value\n        } if (event.target.name === \"dataSource.label.freLabel\") {\n            //onsole.log(\"inside if\")\n            dataSource.label.freLabel = event.target.value\n        } if (event.target.name === \"dataSource.label.spaLabel\") {\n            //console.log(\"inside if\")\n            dataSource.label.spaLabel = event.target.value\n        } if (event.target.name === \"dataSource.label.porLabel\") {\n            //console.log(\"inside if\")\n            dataSource.label.porLabel = event.target.value\n        } if (event.target.name === \"dataSource.dataSourceType.dataSourceTypeId\") {\n            this.state.dataSource.dataSourceType.dataSourceTypeId = event.target.value\n        } else if (event.target.name === \"dataSource.active\") {\n            dataSource.active = event.target.id = \"dataSource.active2\" ? false : true\n        }\n\n\n        this.setState(\n            {\n                dataSource\n            }\n        )\n\n\n    }\n    updateForm() {\n\n        if (navigator.onLine) {\n            if ($(\"#updatyeDataSourceForm\").valid()) {\n                //console.log(this.state);\n                DataSourceService.editDataSource(this.state.dataSource).then(response => {\n                    this.props.history.push(`/dataSourceList/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        const { dataSourceTypeList } = this.state;\n        let dataSourceTypes = dataSourceTypeList.length > 0\n            && dataSourceTypeList.map((item, i) => {\n                return (\n                    <option key={i} value={item.dataSourceTypeId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n\n            <>\n\n                <h3>{myConst.UPDATE_DATASOURCE}</h3>\n                <form name=\"updatyeDataSourceForm\" id=\"updatyeDataSourceForm\">\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.engLabel\" value={this.state.dataSource.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.freLabel\" value={this.state.dataSource.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.spaLabel\" value={this.state.dataSource.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.DATASOURCE_TYPE_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"dataSource.label.porLabel\" value={this.state.dataSource.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"dataSource.active1\" name=\"dataSource.active\" value={true} checked={this.state.dataSource.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"dataSource.active2\" name=\"dataSource.active\" value={false} checked={this.state.dataSource.active === false} onChange={this.updateFieldData} /> Disabled\n                     </div>\n                    <br /><br />\n                    <div>\n                        {myConst.SELECT_DATA_SOURCE_TYPE} : <select id=\"dataSourceTypeId\" name=\"dataSource.dataSourceType.dataSourceTypeId\" value={this.state.dataSource.dataSourceType ? this.state.dataSource.dataSourceType.dataSourceTypeId : ''} onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {dataSourceTypes}\n                        </select>\n                    </div>\n                    <br /><br />\n                    <input type=\"hidden\" name=\"dataSource.dataSourceId\" value={this.state.dataSource.dataSourceId} />\n                    <input type=\"hidden\" name=\"dataSource.label.labelId\" value={this.state.dataSource.label.labelId} />\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n\n        );\n\n\n    }\n\n}","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass CurrencyService {\n\n    addCurrency(json) {\n        return axios.put(`${API_URL}/api/addCurrency/`, json, {}\n        );\n    }\n\n    getCurrencyList() {\n        return axios.get(`${API_URL}/api/getCurrencyList/`, {\n        });\n    }\n    \n    getCurrencyListActive() {\n        return axios.get(`${API_URL}/api/getCurrencyListActive/`, {\n        });\n    }\n    editCurrency(json) {\n        return axios.put(`${API_URL}/api/editCurrency/`, json, {}\n        );\n    }\n}\nexport default new CurrencyService();","import React, { Component } from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nexport default class AddCurrencyComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currencyCode: '',\n            currencySymbol: '',\n            label: {\n                engLabel: '',\n                freLabel: '',\n                spaLabel: '',\n                porLabel: ''\n            },\n            conversionRateToUsd: ''\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        $(\"#currencyForm\").validate({\n            ignore: [],\n            rules: {\n                'label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.freLabel': {\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.spaLabel': {\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.porLabel': {\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'currencyCode': {\n                    required: true,\n                    maxlength: 4\n                },\n                'currencySymbol': {\n                    required: true,\n                    maxlength: 3\n                },\n                'conversionRateToUsd': {\n                    required: true,\n                    integer:true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    updateFieldData(event) {\n        // switch (event.target.name) {\n        //     case \"currencyCode\": this.state.currencyCode = event.target.value;\n        //     case \"currencySymbol\": this.state.currencySymbol = event.target.value;\n        //     case \"label.engLabel\": this.state.label.engLabel = event.target.value;\n        //     case \"label.freLabel\": this.state.label.freLabel = event.target.value;\n        //     case \"label.spaLabel\": this.state.label.spaLabel = event.target.value;\n        //     case \"label.porLabel\": this.state.label.porLabel = event.target.value;\n        //     case \"conversionRateToUsd\": this.state.conversionRateToUsd = event.target.value;\n        //     default: break;\n        // }\n        if(event.target.name === \"currencyCode\"){\n            this.state.currencyCode = event.target.value;\n        }if(event.target.name === \"currencySymbol\"){\n            this.state.currencySymbol = event.target.value;\n        }if(event.target.name === \"label.engLabel\"){\n            this.state.label.engLabel = event.target.value;\n        }if(event.target.name === \"label.freLabel\"){\n            this.state.label.freLabel = event.target.value;\n        }if(event.target.name === \"label.spaLabel\"){\n            this.state.label.spaLabel = event.target.value;\n        }if(event.target.name === \"label.porLabel\"){\n            this.state.label.porLabel = event.target.value;\n        }else if(event.target.name === \"conversionRateToUsd\"){\n            this.state.conversionRateToUsd = event.target.value;\n        }\n        let { currency } = this.state\n        this.setState(\n            {\n                currency\n            }\n        )\n\n    }\n    submitForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#currencyForm\").valid()) {\n                CurrencyService.addCurrency(this.state).then(response => {\n                    this.props.history.push(`/currencyList/${response.data.message}`)\n                    console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        } else {\n\n            alert(\"To perform this action you must be online.\");\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <h3>{myConst.ADD_CURRENCY}</h3>\n                <form name=\"currencyForm\" id=\"currencyForm\">\n                    <div>\n                        <label>{myConst.CURRENCY_CODE}:-</label>\n                        <input type=\"text\" name=\"currencyCode\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_SYMBOL}:-</label>\n                        <input type=\"text\" name=\"currencySymbol\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CONVERSIONRATE_TO_USD}:-</label>\n                        <input type=\"text\" name=\"conversionRateToUsd\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n\n            </>\n        );\n    }\n}","import React, { Compoent, Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport * as myConst from '../../Labels.js';\n\n\nexport default class CurrencyListComponent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currencyList: []\n        }\n        this.editCurrency = this.editCurrency.bind(this);\n        this.addNewCurrency=this.addNewCurrency.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        CurrencyService.getCurrencyList().then(response => {\n            this.setState({\n                currencyList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n    }\n\n    editCurrency(currency) {\n        this.props.history.push({\n            pathname: \"/editCurrency\",\n            state: { currency: currency }\n        });\n\n    }\n\n    addNewCurrency(){\n\n        if (navigator.onLine) {\n            this.props.history.push(`/addCurrency`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    render() {\n\n        return (\n            <>\n                 <p>{this.props.match.params.message}</p>\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewCurrency}>{myConst.ADD_NEW_CURRENCY}</button><br /><br />\n                </div>\n\n                <div className=\"currencyList\">\n\n                    <h1>{myConst.CURRENCY_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.CURRENCY_CODE}</th>\n                                <th>{myConst.CURRENCY_SYMBOL}</th>\n                                <th>{myConst.CURRENCY_NAME_EN}</th>\n                                <th>{myConst.CURRENCY_NAME_FR}</th>\n                                <th>{myConst.CURRENCY_NAME_SP}</th>\n                                <th>{myConst.CURRENCY_NAME_PO}</th>\n                                <th>{myConst.CONVERSIONRATE_TO_USD}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.currencyList.map(currency =>\n                                    <tr key={currency.currencyId} onClick={() => this.editCurrency(currency)}>\n                                        <td>{currency.currencyCode}</td>\n                                        <td>{currency.currencySymbol}</td>\n                                        <td>{currency.label.engLabel}</td>\n                                        <td>{currency.label.freLabel}</td>\n                                        <td>{currency.label.spaLabel}</td>\n                                        <td>{currency.label.porLabel}</td>\n                                        <td>{currency.conversionRateToUsd}</td>\n\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n            </>\n        );\n    }\n\n\n}","import React,{Component} from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport CurrencyService from '../../api/CurrencyService.js';\n\nexport default class UpdateCurrencyComponent extends Component{\n\nconstructor(props){\n    super(props);\n    this.state = {\n        currency: {\n        currencyCode:'',\n        currencySymbol:'',\n        label: {\n            engLabel: '',\n            freLabel: '',\n            spaLabel: '',\n            porLabel: ''\n        },\n        conversionRateToUsd: ''\n    }\n    }\n    this.updateFieldData=this.updateFieldData.bind(this);\n    this.updateForm=this.updateForm.bind(this);\n}\n\ncomponentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    this.setState({\n        currency:this.props.location.state.currency\n    });\n    $(\"#updateCurrencyForm\").validate({\n        ignore: [],\n        rules: {\n            'currency.label.engLabel': {\n                required: true,\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.label.freLabel': {\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.label.spaLabel': {\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.label.porLabel': {\n                lettersonly: true,\n                maxlength: 255\n            },\n            'currency.currencyCode': {\n                required: true,\n                maxlength: 4\n            },\n            'currency.currencySymbol': {\n                required: true,\n                maxlength: 3\n            },\n            'currency.conversionRateToUsd': {\n                required: true,\n                integer:true\n            }\n        },\n        errorPlacement: function (error, element) {\n            error.insertAfter(element);\n        }\n    });\n}\n\nupdateFieldData(event) {\n    let { currency } = this.state\n\n    if (event.target.name === \"currency.currencyCode\") {\n        this.state.currency.currencyCode = event.target.value\n    }\n    if (event.target.name === \"currency.currencySymbol\") {\n        this.state.currency.currencySymbol = event.target.value;\n    }\n    if (event.target.name === \"currency.label.engLabel\") {\n        this.state.currency.label.engLabel = event.target.value\n    }\n    if (event.target.name === \"currency.label.freLabel\") {\n        this.state.currency.label.freLabel = event.target.value\n    }\n    if (event.target.name === \"currency.label.spaLabel\") {\n        this.state.currency.label.spaLabel = event.target.value\n    }\n    if (event.target.name === \"currency.label.porLabel\") {\n        this.state.currency.label.porLabel = event.target.value\n    }\n    else if (event.target.name === \"currency.conversionRateToUsd\") {\n        this.state.currency.conversionRateToUsd = event.target.value\n    }\n    // switch (event.target.name) {\n    //     case \"currency.currencyCode\": this.state.currency.currencyCode = event.target.value;\n    //     case \"currency.currencySymbol\": this.state.currency.currencySymbol = event.target.value;\n    //     case \"currency.label.engLabel\": this.state.currency.label.engLabel = event.target.value;\n    //     case \"currency.label.freLabel\": this.state.currency.label.freLabel = event.target.value;\n    //     case \"currency.label.spaLabel\": this.state.currency.label.spaLabel = event.target.value;\n    //     case \"currency.label.porLabel\": this.state.currency.label.porLabel = event.target.value;\n    //     case \"currency.conversionRateToUsd\": this.state.currency.conversionRateToUsd = event.target.value;\n    //     default: break;\n    // }\n    this.setState(\n        {\n            currency\n        }\n    )\n\n}\n\nupdateForm(){\n\n    if(navigator.onLine){\n\n        if ($(\"#updateCurrencyForm\").valid()) {\n\n            CurrencyService.editCurrency(this.state.currency).then(response => {\n                this.props.history.push(`/currencyList/${response.data.message}`)\n                console.log(\"success\");\n            }\n            )\n                .catch(\n                    error => {\n                        switch (error.message) {\n                            case \"Network Error\":\n                                this.setState({\n                                    message: error.message\n                                })\n                                break\n                            default:\n                                this.setState({\n                                    message: error.message\n                                })\n                                break\n                        }\n                    }\n                )\n        }\n\n\n        }\n\n    else{\n        alert(\"To perform this action you must be online.\");     \n    }\n\n}\n   \nrender(){\n\nreturn( \n    <>\n     <h3>{myConst.UPDATE_CURRENCY}</h3>\n                <form name=\"updateCurrencyForm\" id=\"updateCurrencyForm\">\n                <div>\n                        <label>{myConst.CURRENCY_CODE}:-</label>\n                        <input type=\"text\" name=\"currency.currencyCode\" value={this.state.currency.currencyCode} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_SYMBOL}:-</label>\n                        <input type=\"text\" name=\"currency.currencySymbol\" value={this.state.currency.currencySymbol} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"currency.label.engLabel\" value={this.state.currency.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"currency.label.freLabel\" value={this.state.currency.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"currency.label.spaLabel\" value={this.state.currency.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CURRENCY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"currency.label.porLabel\" value={this.state.currency.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.CONVERSIONRATE_TO_USD}:-</label>\n                        <input type=\"text\" name=\"currency.conversionRateToUsd\" value={this.state.currency.conversionRateToUsd} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n    </>\n);\n\n}\n\n\n}","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass CountryService {\n\n    addCountry(json) {\n        return axios.put(`${API_URL}/api/addCountry/`, json, {}\n        );\n    }\n\n    getCountryListAll(){\n        return axios.get(`${API_URL}/api/getCountryListAll/`, {\n        });\n    }\n    getCountryListActive(){\n        return axios.get(`${API_URL}/api/getCountryListActive/`, {\n        });\n    }\n\n    editCountry(json) {\n        return axios.put(`${API_URL}/api/editCountry/`,json,{}\n            );\n        }\n    \n}\nexport default new CountryService();","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport LanguageService from '../../api/LanguageService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport CountryService from '../../api/CountryService.js'\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class AddCountryComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: {\n\n            },\n            currency: {\n                currencyId: ''\n            },\n            language: {\n                languageId: ''\n            },\n            languageList: [],\n            currencyList: [],\n\n        }\n\n        this.submitForm = this.submitForm.bind(this);\n        this.updateFieldData = this.updateFieldData.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        LanguageService.getLanguageListActive().then(response => {\n            this.setState({\n                languageList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n        CurrencyService.getCurrencyListActive().then(response => {\n            this.setState({\n                currencyList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n\n        $(\"#countryForm\").validate({\n            ignore: [],\n            rules: {\n                'label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'currency.currencyId': {\n                    required: true\n                },\n                'language.languageId': {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n    updateFieldData(event) {\n        if (event.target.name === \"label.engLabel\") {\n            this.state.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"label.freLabel\") {\n            this.state.label.freLabel = event.target.value\n        } if (event.target.name === \"label.spaLabel\") {\n            this.state.label.spaLabel = event.target.value\n        } if (event.target.name === \"label.porLabel\") {\n            this.state.label.porLabel = event.target.value\n        }\n        if (event.target.name === \"currency.currencyId\") {\n            this.state.currency.currencyId = event.target.value\n        } else if (event.target.name === \"language.languageId\") {\n            this.state.language.languageId = event.target.value\n        }\n        let { currency } = this.state\n        this.setState(\n            {\n                currency\n            }\n        )\n    }\n    submitForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#countryForm\").valid()) {\n                CountryService.addCountry(this.state).then(response => {\n                    this.props.history.push(`/countryList/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        } else {\n\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        const { languageList } = this.state;\n        let languageItems = languageList.length > 0\n            && languageList.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>{item.languageName}</option>\n                )\n            }, this);\n\n        const { currencyList } = this.state;\n        let currencyItems = currencyList.length > 0\n            && currencyList.map((itemOne, i) => {\n                return (\n                    <option key={i} value={itemOne.currencyId}>{itemOne.label.engLabel}</option>\n                )\n            }, this);\n        return (\n\n            <>\n                <h3>{myConst.ADD_COUNTRY}</h3>\n                <form name=\"countryForm\" id=\"countryForm\">\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n\n                    <div>\n                        {myConst.SELECT_LANGUAGE} : <select id=\"langaugeId\" name=\"language.languageId\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {languageItems}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        {myConst.SELECT_CURRENCY} : <select id=\"currencyId\" name=\"currency.currencyId\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {currencyItems}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n\n            </>\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CountryService from '../../api/CountryService.js';\nimport * as myConst from '../../Labels.js';\n\nexport default class CountryListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            countryList: []\n        }\n        this.addNewCountry = this.addNewCountry.bind(this);\n        this.editCountry = this.editCountry.bind(this);\n    }\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        CountryService.getCountryListAll().then(response => {\n            this.setState({\n                countryList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    addNewCountry() {\n        if (navigator.onLine) {\n            this.props.history.push(`/addCountry`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    editCountry(country) {\n        console.log(country);\n        this.props.history.push({\n            pathname: \"/editCountry\",\n            state: { country: country }\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            <>\n                <p>{this.props.match.params.message}</p>\n\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewCountry}>{myConst.ADD_NEW_COUNTRY}</button><br /><br />\n                </div>\n\n                <div className=\"countryList\">\n\n                    <h1>{myConst.COUNTRY_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.COUNTRY_NAME_EN}</th>\n                                <th>{myConst.COUNTRY_NAME_FR}</th>\n                                <th>{myConst.COUNTRY_NAME_SP}</th>\n                                <th>{myConst.COUNTRY_NAME_PO}</th>\n                                <th>{myConst.COUNTRY_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.countryList.map(country =>\n\n                                    <tr key={country.countryId} onClick={() => this.editCountry(country)}>\n                                        <td>{country.label.engLabel}</td>\n                                        <td>{country.label.freLabel}</td>\n                                        <td>{country.label.spaLabel}</td>\n                                        <td>{country.label.porLabel}</td>\n                                        <td>\n                                        {country.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}\n                                        </td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n\n\n\n            </>);\n    }\n\n}","import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CountryService from '../../api/CountryService.js';\nimport LanguageService from '../../api/LanguageService.js';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport * as myConst from '../../Labels.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class UpdateCountryComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            country: {\n                countryId:'',\n                label: {\n                    engLabel: '',\n                    spaLabel: '',\n                    freLabel: '',\n                    porLabel: '', \n                    labelId:''\n                },\n                currency: {\n                    curencyId: ''\n                },\n                language: {\n                    languageId: ''\n                },\n                active: ''\n\n            },\n            languageList:[],\n            currencyList:[]\n        }\n\n        this.updateFieldData=this.updateFieldData.bind(this);\n        this.updateForm=this.updateForm.bind(this);\n\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            country: this.props.location.state.country\n        });\n\n        LanguageService.getLanguageListActive().then(response => {\n            this.setState({\n                languageList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n        CurrencyService.getCurrencyListActive().then(response => {\n            this.setState({\n                currencyList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                });\n\n                $(\"#updateCountryForm\").validate({\n                    ignore: [],\n                    rules: {\n                        'country.label.engLabel': {\n                            required: true,\n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.label.freLabel': {\n        \n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.label.spaLabel': {\n        \n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.label.porLabel': {\n        \n                            lettersonly: true,\n                            maxlength: 255\n                        },\n                        'country.currency.currencyId': {\n                            required: true\n                        }, \n                        'country.language.languageId': {\n                            required: true\n                        }\n                    },\n                    errorPlacement: function (error, element) {\n                        error.insertAfter(element);\n                    }\n                });\n\n    }\n    updateFieldData(event){\n        let { country } = this.state\n        if (event.target.name === \"country.label.engLabel\") {\n           this.state.country.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"country.label.freLabel\") {\n            this.state.country.label.freLabel = event.target.value\n        } if (event.target.name === \"country.label.spaLabel\") {\n            this.state.country.label.spaLabel = event.target.value\n        } if (event.target.name === \"country.label.porLabel\") {\n            this.state.country.label.porLabel = event.target.value\n        }\n        if (event.target.name === \"country.currency.currencyId\") {\n            this.state.country.currency.currencyId = event.target.value\n        }if (event.target.name === \"country.language.languageId\") {\n            this.state.country.language.languageId = event.target.value\n        }else if(event.target.name === \"country.active\") {\n            this.state.country.active = event.target.id = \"country.active2\" ? false : true\n        }\n        \n        this.setState(\n            {\n                country\n            }\n        )\n\n\n    }\n\n    updateForm(){\n        if(navigator.onLine){\n\n            if($(\"#updateCountryForm\").valid()){\n        CountryService.editCountry(this.state.country).then(response => {\n            this.props.history.push(`/countryList/${response.data.message}`)\n            //console.log(\"success\");\n        }\n        )\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            )\n        }\n        }else{\n\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n    render() {\n        const { languageList } = this.state;\n        let languageItems = languageList.length > 0\n            && languageList.map((item, i) => {\n                return (\n                    <option key={i} value={item.languageId}>{item.languageName}</option>\n                )\n            }, this);\n\n        const { currencyList } = this.state;\n        let currencyItems = currencyList.length > 0\n            && currencyList.map((itemOne, i) => {\n                return (\n                    <option key={i} value={itemOne.currencyId}>{itemOne.label.engLabel}</option>\n                )\n            }, this);\n\n        return (\n            <>\n\n                <h3>{myConst.UPDATE_COUNTRY}</h3>\n                <form name=\"updateCountryForm\" id=\"updateCountryForm\">\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"country.label.engLabel\" value={this.state.country.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"country.label.freLabel\" value={this.state.country.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"country.label.spaLabel\" value={this.state.country.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.COUNTRY_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"country.label.porLabel\" value={this.state.country.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n        <input type=\"radio\" id=\"country.active1\" name=\"country.active\" value={true} checked={this.state.country.active === true} onChange={this.updateFieldData} /> Active\n        <input type=\"radio\" id=\"country.active2\" name=\"country.active\" value={false} checked={this.state.country.active === false} onChange={this.updateFieldData} /> Disabled\n         </div>\n                    <br /><br />\n                    <div>\n                        {myConst.SELECT_LANGUAGE} : <select id=\"langaugeId\" name=\"country.language.languageId\" value={this.state.country.language ? this.state.country.language.languageId : ''} onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {languageItems}\n                        </select>\n                    </div>\n                    <br></br>\n                    <div>\n                        {myConst.SELECT_CURRENCY} : <select id=\"currencyId\" name=\"country.currency.currencyId\" value={this.state.country.currency ? this.state.country.currency.currencyId : ''} onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {currencyItems}\n                        </select>\n                    </div>\n                    <br /><br />\n                    {/* <input type=\"hidden\" name=\"dataSource.dataSourceId\" value={this.state.dataSource.dataSourceId} /> */}\n                    {/* <input type=\"hidden\" name=\"dataSource.label.labelId\" value={this.state.dataSource.label.labelId} /> */}\n                    <div>\n                        <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                    </div>\n                </form>\n\n            </>\n\n        );\n\n\n\n    }\n\n\n}","import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass ShipmentStatusService{\n\n    addShipmentStatus(json) {\n        return axios.put(`${API_URL}/api/addShipmentStatus/`, json, {}\n        );\n    }\n\n    getShipmentStatusListAll(){\n        return axios.get(`${API_URL}/api/getShipmentStatusListAll/`, {\n        });\n    }\n    getShipmentStatusListActive(){\n        return axios.get(`${API_URL}/api/getShipmentStatusListActive/`, {\n        });\n    }\n    editShipmentStatus(json) {\n        return axios.put(`${API_URL}/api/editShipmentStatus/`, json, {\n        });\n    }\n\n}\nexport default new ShipmentStatusService();","import React, { Component } from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport ShipmentStatusService from '../../api/ShipmentStatusService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\n\nexport default class AddShipmentStatusComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipmentStatus: {\n                label: {\n                    engLabel: '',\n                    freLabel: '',\n                    spaLabel: '',\n                    porLabel: ''\n                },\n                nextShipmentStatusAllowed: []\n            },\n            shipmentStatusList: []\n        }\n\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ShipmentStatusService.getShipmentStatusListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                shipmentStatusList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n        $(\"#shipmentStatusForm\").validate({\n            ignore: [],\n            rules: {\n                'shipmentStatus.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n    updateFieldData(event) {\n        if (event.target.name === \"shipmentStatus.label.engLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"shipmentStatus.label.freLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.freLabel = event.target.value\n        } if (event.target.name === \"shipmentStatus.label.spaLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.spaLabel = event.target.value\n        }if (event.target.name === \"shipmentStatus.label.porLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.porLabel = event.target.value\n        }else if (event.target.name === \"shipmentStatus.nextShipmentStatusAllowed\") {\n            this.state.shipmentStatus.nextShipmentStatusAllowed = Array.from(event.target.selectedOptions, (item) => item.value)\n        }\n\n\n        let { shipmentStatus } = this.state\n        this.setState(\n            {\n                shipmentStatus\n            }\n        )\n    }\n\n    submitForm() {\n        if (navigator.onLine) {\n            if ($(\"#shipmentStatusForm\").valid()) {\n                console.log(this.state);\n                ShipmentStatusService.addShipmentStatus(this.state.shipmentStatus).then(response => {\n                    this.props.history.push(`/shipmentStatusListAll/${response.data.message}`)\n                    //console.log(\"success\");\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n\n            }\n\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n\n    }\n\n    render() {\n\n        const { shipmentStatusList } = this.state;\n        let shipmentStatusItems = shipmentStatusList.length > 0\n            && shipmentStatusList.map((item, i) => {\n                return (\n                    <option key={i} value={item.shipmentStatusId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <>\n                <h3>{myConst.ADD_SHIPMENT_STATUS}</h3>\n                <form name=\"shipmentStatusForm\" id=\"shipmentStatusForm\">\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.engLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.freLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.spaLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.porLabel\" onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                 \n                    <div>\n                       \n                        <label>  {myConst.SELECT_NEXT_SHIPMENT_STATUS} :- </label><select id=\"shipmentStatusId\" name=\"shipmentStatus.nextShipmentStatusAllowed\" multiple=\"true\" onChange={this.updateFieldData}>\n                            <option value=\"\">-Nothing Selected-</option>\n                            {shipmentStatusItems}\n                        </select>\n                        \n                    </div>\n                    \n                    <br /><br />\n                    <div>\n                        <button type=\"button\" onClick={this.submitForm}>{myConst.SUBMIT_BUTTON}</button>\n                    </div>\n                </form>\n            </>\n        );\n\n    }\n\n}","\nimport React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport ShipmentStatusService from '../../api/ShipmentStatusService.js';\nimport * as myConst from '../../Labels.js';\nexport default class ShipmentStatusListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipmentStatusList: []\n        }\n        this.editShipmentStatus=this.editShipmentStatus.bind(this);\n        this.addNewShipmentStatus=this.addNewShipmentStatus.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ShipmentStatusService.getShipmentStatusListAll().then(response => {\n            //console.log(response.data)\n            this.setState({\n                shipmentStatusList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    addNewShipmentStatus(){\n        if (navigator.onLine) {\n            this.props.history.push(`/addShipmentStatus`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n\n    editShipmentStatus(shipmentStatus){\n        this.props.history.push({\n            pathname: \"/editShipmentStatus\",\n            state: { shipmentStatus: shipmentStatus }\n        });\n\n    }\n\n    render() {\n        return (\n            <>\n                 <p>{this.props.match.params.message}</p>\n                <div>\n                    <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewShipmentStatus}>{myConst.ADD_NEW_SHIPMENT_STATUS}</button><br /><br />\n                </div>\n\n                <div className=\"shipmentStatusList\">\n\n                    <h1>{myConst.SHIPMENT_STATUS_LIST}</h1>\n                    <table border=\"1\" align=\"center\">\n                        <thead>\n                            <tr>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_EN}</th>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_FR}</th>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_SP}</th>\n                                <th>{myConst.SHIPMENTSTATUS_NAME_PO}</th>\n                                <th>{myConst.DATA_SOURCE_TYPE_ACTIVE}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.shipmentStatusList.map(shipmentStatus =>\n\n                                    <tr key={shipmentStatus.shipmentStatusId} onClick={() => this.editShipmentStatus(shipmentStatus)}>\n                                        <td>{shipmentStatus.label.engLabel}</td>\n                                        <td>{shipmentStatus.label.freLabel}</td>\n                                        <td>{shipmentStatus.label.spaLabel}</td>\n                                        <td>{shipmentStatus.label.porLabel}</td>\n                                        <td>{shipmentStatus.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}</td>\n                                    </tr>\n                                )\n\n                            }\n                        </tbody>\n                    </table>\n                </div>\n\n\n            </>\n\n        );\n\n\n    }\n\n}","import React, { Component } from 'react';\nimport * as myConst from '../../Labels.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport ShipmentStatusService from '../../api/ShipmentStatusService.js';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nexport default class UpdateShipmentStatusComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipmentStatus: {\n                //nextShipmentStatusAllowed: [],\n                shipmentStatusId: '',\n                label: {\n                    engLabel: '',\n                    freLabel: '',\n                    spaLabel: '',\n                    porLabel: ''\n                },\n                active: ''\n \n            },\n            shipmentStatusList: []\n        }\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.updateForm = this.updateForm.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        //console.log(this.props.location.state.shipmentStatus);\n        //AuthenticationService.setupAxiosInterceptors();\n        ShipmentStatusService.getShipmentStatusListActive().then(response => {\n            //console.log(response.data)\n            this.setState({\n                shipmentStatusList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n        this.setState({\n            shipmentStatus: this.props.location.state.shipmentStatus\n        });\n        $(\"#updateShipmentStatusForm\").validate({\n            ignore: [],\n            rules: {\n                'shipmentStatus.label.engLabel': {\n                    required: true,\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.freLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.spaLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                },\n                'shipmentStatus.label.porLabel': {\n\n                    lettersonly: true,\n                    maxlength: 255\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n    }\n    updateForm() {\n\n        if (navigator.onLine) {\n\n            if ($(\"#updateShipmentStatusForm\").valid()) {\n                //console.log(this.state.shipmentStatus);\n                ShipmentStatusService.editShipmentStatus(this.state.shipmentStatus).then(response => {\n                    //this.props.history.push(`/languageList/${response.data.message}`)\n                    this.props.history.push(`/shipmentStatusListAll/${response.data.message}`)\n                }\n                )\n                    .catch(\n                        error => {\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                            }\n                        }\n                    )\n            }\n        }\n\n    }\n    updateFieldData(event) {\n        let { shipmentStatus } = this.state\n        if (event.target.name === \"shipmentStatus.label.engLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.engLabel = event.target.value\n        }\n        if (event.target.name === \"shipmentStatus.label.freLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.freLabel = event.target.value\n        } if (event.target.name === \"shipmentStatus.label.spaLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.spaLabel = event.target.value\n        } if (event.target.name === \"shipmentStatus.label.porLabel\") {\n            //console.log(\"inside if\")\n            this.state.shipmentStatus.label.porLabel = event.target.value\n        }if (event.target.name === \"shipmentStatus.nextShipmentStatusAllowed\") {\n            this.state.shipmentStatus.nextShipmentStatusAllowed = Array.from(event.target.selectedOptions, (item) => item.value)\n        } else if (event.target.name === \"shipmentStatus.active\") {\n            this.state.shipmentStatus.active = event.target.id === \"shipmentStatus.active2\" ? false : true\n        }\n        this.setState(\n            {\n                shipmentStatus\n            }\n        )\n    }\n\n    render() {\n        const { shipmentStatusList } = this.state;\n        let shipmentStatusItems = shipmentStatusList.length > 0\n            && shipmentStatusList.map((item, i) => {\n                return (\n                    <option key={i} value={item.shipmentStatusId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <>\n                <h3>{myConst.UPDATE_SHIPMENT_STATUS}</h3>\n                <form name=\"updateShipmentStatusForm\" id=\"updateShipmentStatusForm\">\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_EN}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.engLabel\" value={this.state.shipmentStatus.label.engLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_FR}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.freLabel\" value={this.state.shipmentStatus.label.freLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_SP}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.spaLabel\" value={this.state.shipmentStatus.label.spaLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label>{myConst.SHIPMENTSTATUS_NAME_PO}:-</label>\n                        <input type=\"text\" name=\"shipmentStatus.label.porLabel\" value={this.state.shipmentStatus.label.porLabel} onChange={this.updateFieldData} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        {myConst.ACTIVE}:\n                    <input type=\"radio\" id=\"shipmentStatus.active1\" name=\"shipmentStatus.active\" value={true} checked={this.state.shipmentStatus.active === true} onChange={this.updateFieldData} /> Active\n                    <input type=\"radio\" id=\"shipmentStatus.active2\" name=\"shipmentStatus.active\" value={false} checked={this.state.shipmentStatus.active === false} onChange={this.updateFieldData} /> Disabled\n                     </div>\n                    <br/><br />\n                        <div>\n                            <label>  {myConst.SELECT_NEXT_SHIPMENT_STATUS} :- </label><select id=\"shipmentStatusId\" name=\"shipmentStatus.nextShipmentStatusAllowed\" multiple=\"true\" value={this.state.shipmentStatus.nextShipmentStatusAllowed} onChange={this.updateFieldData}>\n                                <option value=\"\">-Nothing Selected-</option>\n                                {shipmentStatusItems}\n                            </select>\n                        </div>\n                        <br/><br/>\n                        {/* <input type=\"hidden\" name=\"dataSourceType.labelId\" value={this.state.dataSourceType.labelId} /> */}\n                        <div>\n                            <button type=\"button\" onClick={this.updateForm}>{myConst.UPDATE_BUTTON}</button>\n                        </div>\n                </form>\n\n\n\n            </>\n                );\n            }\n        \n}","import axios from \"axios\"\nimport { API_URL } from '../Constants.js'\n\nclass ProgramService {\n    getProgramData(programId) {\n        console.log(programId)\n        return axios.get(`${API_URL}/api/getProgramData?programId=${programId}`, {\n        });\n    }\n\n    getProgramList() {\n        return axios.get(`${API_URL}/api/getProgramList`, {\n        });\n    }\n}\nexport default new ProgramService()","import React, { Component } from 'react';\nimport { BTN_DOWNLOAD, DOWNLOAD_TITLE, DATA_DOWNLOAD_SUCCESS, PROGRAM } from '../../Labels.js';\nimport ProgramService from '../../api/ProgramService.js';\nimport CryptoJS from 'crypto-js';\nimport { SECRET_KEY } from '../../Constants.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport $ from 'jquery';\nimport 'jquery-validation';\n\nexport default class DownloadProgramDataComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programList: [],\n            message: \"\"\n        }\n        this.downloadClicked = this.downloadClicked.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ProgramService.getProgramList().then(response => {\n            console.log(response.data)\n            this.setState({\n                programList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        $(\"#downloadForm\").validate({\n            ignore: [],\n            rules: {\n                'programId': {\n                    required: true\n                },\n            }\n        })\n    }\n\n    render() {\n        const { programList } = this.state;\n        let programItems = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.programId}>{item.label.engLabel}</option>\n                )\n            }, this);\n        return (\n            <div>\n                <h4>{this.state.message}</h4>\n                <h4>{DOWNLOAD_TITLE}</h4><br></br>\n                <form name=\"downloadForm\" id=\"downloadForm\">\n                    {PROGRAM} : <select id=\"programId\" name=\"programId\" multiple={true}>\n                        {programItems}\n                    </select><br></br><br></br>\n                    <button type=\"button\" onClick={this.downloadClicked}>{BTN_DOWNLOAD}</button>\n                </form>\n            </div>\n        )\n    }\n\n    downloadClicked() {\n        if (navigator.onLine) {\n            if ($(\"#downloadForm\").valid()) {\n                var programArr = $(\"#programId\").val();\n                for (var j = 0; j < programArr.length; j++) {\n                    AuthenticationService.setupAxiosInterceptors();\n                    ProgramService.getProgramData(programArr[j])\n                        .then(response => {\n                            var json = response.data;\n                            var db1;\n                            var storeOS;\n                            var openRequest = indexedDB.open('fasp', 1);\n                            openRequest.onupgradeneeded = function (e) {\n                                var db1 = e.target.result;\n                                if (!db1.objectStoreNames.contains('programData')) {\n                                    storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n                                }\n                            };\n                            openRequest.onsuccess = function (e) {\n                                db1 = e.target.result;\n                                var transaction = db1.transaction(['programData'], 'readwrite');\n                                var program = transaction.objectStore('programData');\n                                var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(json), SECRET_KEY);\n                                var item = {\n                                    id: json.programId + \"_v\" + json.programVersion,\n                                    programId: json.programId,\n                                    version: json.programVersion,\n                                    programName: (CryptoJS.AES.encrypt((json.label.labelEn), SECRET_KEY)).toString(),\n                                    programData: encryptedText.toString()\n                                };\n                                console.log(item)\n                                var putRequest = program.put(item);\n\n                                putRequest.onerror = function (event) {\n                                    // Handle errors!\n                                };\n                                putRequest.onsuccess = function (event) {\n                                    this.setState({\n                                        message: `${DATA_DOWNLOAD_SUCCESS}`\n                                    })\n                                }.bind(this);\n                            }.bind(this)\n                        })\n                        .catch(\n                            error => {\n                                switch (error.message) {\n                                    case \"Network Error\":\n                                        this.setState({\n                                            message: error.message\n                                        })\n                                        break\n                                    default:\n                                        this.setState({\n                                            message: error.response.data.message\n                                        })\n                                        break\n                                }\n                            }\n                        );\n                }\n            }\n        } else {\n            alert(\"To perform this action you must be online.\");\n        }\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport { IMPORT_TITLE, BTN_IMPORT, DATA_IMPORT_SUCCESS, IMPORT_PROGRAM, BTN_SUBMIT } from '../../Labels.js';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport CryptoJS from 'crypto-js';\nimport $ from 'jquery';\nimport 'jquery-validation';\n\nexport default class ImportProgramDataComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            programList: []\n        }\n        this.importClicked = this.importClicked.bind(this);\n        this.programSubmitClicked = this.programSubmitClicked.bind(this);\n    }\n\n    componentDidMount() {\n        $(\"#programDiv\").hide();\n        $(\"#importDiv\").show();\n        $(\"#importForm\").validate({\n            ignore: [],\n            rules: {\n                'programId': {\n                    required: true\n                },\n            }\n        })\n    }\n\n    render() {\n        const { programList } = this.state;\n        let programItems = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.id}>{item.name}</option>\n                )\n            }, this);\n        return (\n            <div>\n                <h4>{this.state.message}</h4>\n                <h4>{IMPORT_TITLE}</h4><br></br>\n                <form id=\"importForm\" name=\"importForm\">\n                    <div id=\"importDiv\">\n                        <input type=\"file\" /><br></br><br></br>\n                        <button type=\"button\" onClick={this.importClicked}>{BTN_IMPORT}</button>\n                    </div>\n                    <div id=\"programDiv\">\n                        {IMPORT_PROGRAM} : <select id=\"programId\" name=\"programId\" multiple={true}>\n                            {programItems}\n                        </select><br></br><br></br>\n                        <button type=\"button\" onClick={this.programSubmitClicked}>{BTN_SUBMIT}</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n    importClicked() {\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            if (document.querySelector('input[type=file]').files[0] == undefined) {\n                alert(\"Please select a file\");\n            } else {\n                var file = document.querySelector('input[type=file]').files[0];\n                var fileName = file.name;\n                var fileExtenstion = fileName.split(\".\");\n                if (fileExtenstion[1] == \"zip\") {\n                    JSZip.loadAsync(file).then(function (zip) {\n                        var i = 0;\n                        var fileName = []\n                        var size = 0;\n                        Object.keys(zip.files).forEach(function (filename) {\n                            size++;\n                        })\n                        Object.keys(zip.files).forEach(function (filename) {\n                            zip.files[filename].async('string').then(function (fileData) {\n                                i++;\n                                var programDataJson = JSON.parse(fileData);\n                                var bytes = CryptoJS.AES.decrypt(programDataJson.programData, SECRET_KEY);\n                                var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                                var programDataJsonDecrypted = JSON.parse(plaintext);\n                                fileName[i] = {\n                                    id: filename,\n                                    name: programDataJsonDecrypted.label.labelEn + \"~v\" + programDataJsonDecrypted.programVersion\n                                }\n                                if (i === size) {\n                                    this.setState({\n                                        programList: fileName\n                                    })\n\n                                    $(\"#programDiv\").show();\n                                    $(\"#importDiv\").hide();\n                                }\n                            }.bind(this))\n\n                        }.bind(this))\n\n                    }.bind(this))\n                } else {\n                    alert(\"Please select zip file\")\n                }\n            }\n\n        }\n\n    }\n\n    programSubmitClicked() {\n        if ($(\"#importForm\").valid()) {\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\n                if (document.querySelector('input[type=file]').files[0] == undefined) {\n                    alert(\"Please select a file\");\n                } else {\n                    var file = document.querySelector('input[type=file]').files[0];\n                    var db1;\n                    var storeOS;\n                    var openRequest = indexedDB.open('fasp', 1);\n                    var selectedPrgArr = $(\"#programId\").val();\n                    openRequest.onupgradeneeded = function (e) {\n                        var db1 = e.target.result;\n                        if (!db1.objectStoreNames.contains('programData')) {\n                            storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n                        }\n                    };\n                    openRequest.onsuccess = function (e) {\n                        db1 = e.target.result;\n                        var transaction = db1.transaction(['programData'], 'readwrite');\n                        var program = transaction.objectStore('programData');\n                        JSZip.loadAsync(file).then(function (zip) {\n                            Object.keys(zip.files).forEach(function (filename) {\n\n                                zip.files[filename].async('string').then(function (fileData) {\n                                    for (var j = 0; j < selectedPrgArr.length; j++) {\n                                        if (selectedPrgArr[j] == filename) {\n                                            db1 = e.target.result;\n                                            var transaction2 = db1.transaction(['programData'], 'readwrite');\n                                            var program2 = transaction2.objectStore('programData');\n                                            var addProgramDataRequest = program2.put(JSON.parse(fileData));\n                                            addProgramDataRequest.onerror = function (event) {\n                                            };\n                                            addProgramDataRequest.onsuccess = function (event) {\n                                            };\n                                        }\n\n                                    }\n                                })\n                            })\n                        })\n                        this.setState({\n                            message: `${DATA_IMPORT_SUCCESS}`\n                        })\n                        $(\"#programDiv\").hide();\n                        $(\"#importDiv\").show();\n                    }.bind(this)\n                }\n            }\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport { BTN_EXPORT, EXPORT_TITLE, PROGRAM, DATA_EXPORT_SUCCESS } from '../../Labels.js';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport CryptoJS from 'crypto-js';\nimport $ from 'jquery';\nimport 'jquery-validation';\n\nexport default class ExportProgramDataComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programList: [],\n            message: \"\"\n        }\n        this.exportClicked = this.exportClicked.bind(this);\n    }\n\n    componentDidMount() {\n        var db1;\n        var storeOS;\n        var openRequest = indexedDB.open('fasp', 1);\n        openRequest.onupgradeneeded = function (e) {\n            var db1 = e.target.result;\n            if (!db1.objectStoreNames.contains('programData')) {\n                storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n            }\n        };\n        openRequest.onsuccess = function (e) {\n            db1 = e.target.result;\n            var transaction = db1.transaction(['programData'], 'readwrite');\n            var program = transaction.objectStore('programData');\n            var getRequest = program.getAll();\n            var proList = []\n            getRequest.onerror = function (event) {\n                // Handle errors!\n            };\n            getRequest.onsuccess = function (event) {\n                var myResult = [];\n                myResult = getRequest.result;\n                for (var i = 0; i < myResult.length; i++) {\n                    var bytes = CryptoJS.AES.decrypt(myResult[i].programName, SECRET_KEY);\n                    var programName = bytes.toString(CryptoJS.enc.Utf8);\n                    console.log(programName);\n                    var programJson = {\n                        name: programName.toString() + \"~v\" + myResult[i].version,\n                        id: myResult[i].id\n                    }\n                    proList[i] = programJson\n                }\n                this.setState({\n                    programList: proList\n                })\n            }.bind(this);\n        }.bind(this)\n        $(\"#exportForm\").validate({\n            ignore: [],\n            rules: {\n                'programId': {\n                    required: true\n                },\n            }\n        })\n\n    }\n\n    render() {\n        const { programList } = this.state;\n        let programItems = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.id}>{item.name}</option>\n                )\n            }, this);\n        return (\n            <div>\n                <h4>{this.state.message}</h4>\n                <h4>{EXPORT_TITLE}</h4><br></br>\n                <form name=\"exportForm\" id=\"exportForm\">\n                    {PROGRAM} : <select id=\"programId\" name=\"programId\" multiple={true}>\n                        {programItems}\n                    </select><br></br><br></br>\n                    <button type=\"button\" onClick={this.exportClicked}>{BTN_EXPORT}</button>\n                </form>\n            </div>\n        )\n    }\n\n    exportClicked() {\n        if ($(\"#exportForm\").valid()) {\n            var zip = new JSZip();\n            var selectedPrgArr = $(\"#programId\").val();\n            var selectedPrgArrText = $('#programId option:selected').toArray().map(item => item.text);\n            var db1;\n            var storeOS;\n            var openRequest = indexedDB.open('fasp', 1);\n            openRequest.onupgradeneeded = function (e) {\n                var db1 = e.target.result;\n                if (!db1.objectStoreNames.contains('programData')) {\n                    storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n                }\n            };\n            openRequest.onsuccess = function (e) {\n                db1 = e.target.result;\n                var transaction = db1.transaction(['programData'], 'readwrite');\n                var program = transaction.objectStore('programData');\n                var getRequest = program.getAll();\n                getRequest.onerror = function (event) {\n                    // Handle errors!\n                };\n                getRequest.onsuccess = function (event) {\n                    var myResult = [];\n                    myResult = getRequest.result;\n                    for (var i = 0; i < myResult.length; i++) {\n                        for (var j = 0; j < selectedPrgArr.length; j++) {\n                            if (myResult[i].id == selectedPrgArr[j]) {\n                                var txt = JSON.stringify(myResult[i]);\n                                zip.file(selectedPrgArrText[i] + \"_\" + parseInt(i + 1) + \".txt\", txt);\n\n                            }\n                        }\n                        if (i == myResult.length - 1) {\n                            zip.generateAsync({\n                                type: \"blob\"\n                            }).then(function (content) {\n                                FileSaver.saveAs(content, \"download.zip\");\n                            });\n                            this.setState({\n                                message: `${DATA_EXPORT_SUCCESS}`\n                            })\n                        }\n                    }\n\n\n                }.bind(this);\n            }.bind(this)\n        }\n    }\n}\n\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport IdleTimer from 'react-idle-timer';\nimport WelcomeComponent from \"../home/WelcomeComponent\";\n// import { IdleTimeOutModal } from './IdleModal.js';\nimport PropTypes from 'prop-types';\nimport '../../css/bootstrap/bootstrap.min.css';\nimport '../../css/theme-default.css';\nimport '../../css/custom.css';\nimport '../../css/mcustomscrollbar/jquery.mCustomScrollbar.css';\n//import  action from '../../Js/actions.js'\nimport '../../App.css'\nimport AddUserComponent from \"../user/AddUserComponent.jsx\";\nimport UserListComponent from \"../user/UserListComponent.jsx\";\nimport EditUserComponent from \"../user/EditUserComponent.jsx\";\nimport ChangePasswordComponent from \"../home/ChangePasswordComponent.jsx\";\nimport LoginComponent from \"../home/LoginComponent.jsx\";\nimport RoleListComponent from \"../user/RoleListComponent.jsx\";\nimport AddRoleComponent from \"../user/AddRoleComponent.jsx\";\nimport EditRoleComponent from \"../user/EditRoleComponent.jsx\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport AddLanguageComponent from '../language/AddLanguageComponent'\nimport LanguageListComponent from \"../language/LanguageListComponent.jsx\"\nimport EditLanguageComponent from \"../language/EditLanguageComponent.jsx\"\nimport AddDataSourceTypeComponent from \"../datasourceType/AddDataSourceTypeComponent.jsx\"\nimport DataSourceTypeListComponent from \"../datasourceType/DataSourceTypeListComponent.jsx\"\nimport UpdateDataSourceTypeComponent from \"../datasourceType/UpdateDataSourceTypeComponent.jsx\"\nimport AddDataSource from \"../dataSource/AddDataSource.jsx\"\nimport DataSourceListComponent from \"../dataSource/DataSourceListComponent.jsx\"\nimport UpdateDataSourceComponent from \"../dataSource/UpdateDataSourceComponent.jsx\"\nimport AddCurrencyComponent from \"../currency/AddCurrencyComponent.jsx\"\nimport CurrencyListComponent from \"../currency/CurrencyListComponent.jsx\"\nimport UpdateCurrencyComponent from \"../currency/UpdateCurrencyComponent.jsx\"\nimport AddCountryComponent from \"../country/AddCountryComponent.jsx\"\nimport CountryListComponent from \"../country/CountryListComponent.jsx\"\nimport UpdateCountryComponent from \"../country/UpdateCountryComponent.jsx\"\nimport AddShipmentStatusComponent from \"../shipmentStatus/AddShipmentStatusComponent.jsx\"\nimport ShipmentStatusListComponent from \"../shipmentStatus/ShipmentStatusListComponent.jsx\"\nimport UpdateShipmentStatusComponent from \"../shipmentStatus/UpdateShipmentStatusComponent.jsx\"\nimport DownloadProgramDataComponent from '../program/DownloadProgramDataComponent';\nimport ImportProgramDataComponent from '../program/ImportProgramDataComponent';\nimport ExportProgramDataComponent from '../program/ExportProgramDataComponent';\n\n\nclass Layout extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            timeout: AuthenticationService.checkSessionTimeOut(),\n            showModal: false,\n            userLoggedIn: false,\n            isTimedOut: false\n        }\n\n        this.idleTimer = null\n        this.onAction = this._onAction.bind(this)\n        this.onActive = this._onActive.bind(this)\n        this.onIdle = this._onIdle.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleLogout = this.handleLogout.bind(this)\n    }\n\n    _onAction(e) {\n      console.log('user did something', e)\n      this.setState({isTimedOut: false})\n    }\n   \n    _onActive(e) {\n      console.log('user is active', e)\n      this.setState({isTimedOut: false})\n    }\n   \n    _onIdle(e) {\n      console.log('user is idle', e)\n      const isTimedOut = this.state.isTimedOut\n      if (isTimedOut) {\n          this.props.history.push('/')\n      } else {\n        this.setState({showModal: true})\n        this.idleTimer.reset();\n        this.setState({isTimedOut: true})\n      }\n      \n    }\n\n    handleClose() {\n      this.setState({showModal: false})\n    }\n\n    handleLogout() {\n      this.setState({showModal: false})\n      this.props.history.push('/')\n    }\n\n    render(){\n      const { match } = this.props\n      return(\n        <>\n          <IdleTimer\n            ref={ref => { this.idleTimer = ref }}\n            element={document}\n            onActive={this.onActive}\n            onIdle={this.onIdle}\n            onAction={this.onAction}\n            debounce={250}\n            timeout={this.state.timeout} />\n\n            <div className=\"\">\n               \n            {/* {AuthenticationService.setupAxiosInterceptors()} */}\n                <Switch>\n\n                {/* <Route path=\"/\" exact component={LoginComponent} /> */}\n                <Route path=\"/login/:message\" exact component={LoginComponent} />\n                    <Route \n                        exact path={`${match.path}welcome`}\n                        render={(props) => <WelcomeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}welcome/:message`}\n                        render={(props) => <WelcomeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}addUser`}\n                        render={(props) => <AddUserComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}userList`}\n                        render={(props) => <UserListComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}userList/:message`}\n                        render={(props) => <UserListComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}editUser`}\n                        render={(props) => <EditUserComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}changePassword`}\n                        render={(props) => <ChangePasswordComponent {...props} /> }/>\n                    />\n                    \n                    <Route \n                        exact path={`${match.path}addRole`}\n                        render={(props) => <AddRoleComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}roleList`}\n                        render={(props) => <RoleListComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}roleList/:message`}\n                        render={(props) => <RoleListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editRole`}\n                        render={(props) => <EditRoleComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}addLanguage`}\n                        render={(props) => <AddLanguageComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editLanguage`}\n                        render={(props) => <EditLanguageComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}languageList/:message`}\n                        render={(props) => <LanguageListComponent {...props} /> }/>\n                    />\n                    \n                    <Route \n                        exact path={`${match.path}addDataSourceType`}\n                        render={(props) => <AddDataSourceTypeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editDataSourceType`}\n                        render={(props) => <UpdateDataSourceTypeComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}dataSourceTypeList/:message`}\n                        render={(props) => <DataSourceTypeListComponent {...props} /> }/>\n                    />\n\n\n                    <Route \n                        exact path={`${match.path}addDataSource`}\n                        render={(props) => <AddDataSource {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editDataSource`}\n                        render={(props) => <UpdateDataSourceComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}dataSourceList/:message`}\n                        render={(props) => <DataSourceListComponent {...props} /> }/>\n                    />\n\n\n                    <Route \n                        exact path={`${match.path}addCurrency`}\n                        render={(props) => <AddCurrencyComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editCurrency`}\n                        render={(props) => <UpdateCurrencyComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}currencyList/:message`}\n                        render={(props) => <CurrencyListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}downloadProgramData/`}\n                        render={(props) => <DownloadProgramDataComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}importProgramData/`}\n                        render={(props) => <ImportProgramDataComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}exportProgramData/`}\n                        render={(props) => <ExportProgramDataComponent {...props} /> }/>\n                    />\n\n                    <Route \n                        exact path={`${match.path}addCountry`}\n                        render={(props) => <AddCountryComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}countryList/:message`}\n                        render={(props) => <CountryListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editCountry`}\n                        render={(props) => <UpdateCountryComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}addShipmentStatus`}\n                        render={(props) => <AddShipmentStatusComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}shipmentStatusListAll/:message`}\n                        render={(props) => <ShipmentStatusListComponent {...props} /> }/>\n                    />\n                    <Route \n                        exact path={`${match.path}editShipmentStatus`}\n                        render={(props) => <UpdateShipmentStatusComponent {...props} /> }/>\n                    />\n                </Switch>\n                \n              {/*  <IdleTimeOutModal \n                    showModal={this.state.showModal} \n                    handleClose={this.handleClose}\n                    handleLogout={this.handleLogout}\n                />*/}\n            </div>\n        </>\n      )\n   }\n\n }\n\n Layout.propTypes = {\n     match: PropTypes.any.isRequired,\n     history: PropTypes.func.isRequired\n }\n\nexport default Layout","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from '../../api/UserService'\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport { SECRET_KEY } from '../../Constants.js'\nimport jwt_decode from 'jwt-decode'\n\n\nexport default class UpdateExpiredPasswordComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            username: this.props.location.state.username\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.logoutClicked = this.logoutClicked.bind(this);\n    }\n\n\n    componentDidMount() {\n        console.log(\"username expired page---\"+this.props.location.state.username)\n        console.log(\"mount called for\");\n        // AuthenticationService.setupAxiosInterceptors();\n        $.validator.addMethod('checkPassword', function () {\n            if ($('#newPassword').val() === $('#confirmNewPassword').val()) {\n                return true;\n            } else {\n                return false;\n            }\n        }, 'The New passwords do not match.');\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                oldPassword: {\n                    required: true\n                },\n                newPassword: {\n                    required: true\n                },\n                confirmNewPassword: {\n                    required: true,\n                    checkPassword: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Update Password</h3>\n                    Old password : <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" /><br></br><br></br>\n                    New password : <input type=\"password\" id=\"newPassword\" name=\"newPassword\" /><br></br><br></br>\n                    Confirm new password : <input type=\"password\" id=\"confirmNewPassword\" name=\"confirmNewPassword\" /><br></br><br></br>\n                    <Online><button type=\"button\" onClick={this.submitClicked}>Submit</button></Online>\n                    <Online><button type=\"button\" onClick={this.logoutClicked}>Logout</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    submitClicked() {\n        if ($(\"#form1\").valid()) {\n            if (navigator.onLine) {\n                console.log(\"state username ---\"+this.state.username)\n                UserService.updateExpiredPassword(this.state.username, $('#oldPassword').val(), $('#newPassword').val())\n                    .then(response => {\n                        console.log(response.data.data)\n                        var decoded = jwt_decode(response.data.token);\n                        localStorage.setItem('token', response.data.token);\n                        localStorage.setItem('typeOfSession', \"Online\");\n                        localStorage.setItem('userId', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                        localStorage.setItem('username', CryptoJS.AES.encrypt((decoded.sub).toString(), `${SECRET_KEY}`));\n                        localStorage.setItem('password', CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                        localStorage.setItem('languageId', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n                        this.props.history.push(`/welcome/Password updated successfully.`)\n                    })\n                    .catch(\n                        error => {\n                            console.log(error.message);\n                            console.log(error.text);\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    );\n            } else {\n                alert(\"You must be Online to update the password.\")\n            }\n        }\n    }\n\n    logoutClicked() {\n        this.props.history.push(`/login/You are logged out.`)\n    }\n}\n\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../../Js/validation.js';\nimport 'jquery-validation';\nimport UserService from '../../api/UserService'\nimport { Online } from \"react-detect-offline\";\n\nexport default class ForgotPasswordComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n        this.submitClicked = this.submitClicked.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        $(\"#form1\").validate({\n            ignore: [],\n            rules: {\n                username: {\n                    required: true\n                }\n            },\n            errorPlacement: function (error, element) {\n                error.insertAfter(element);\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <form name=\"form1\" id=\"form1\">\n                    <h3>Forgot Password</h3>\n                    Username : <input type=\"text\" id=\"username\" name=\"username\" /><br></br><br></br>\n                    <Online><button type=\"button\" onClick={this.submitClicked}>Submit</button></Online>\n                    <Online><button type=\"button\" onClick={this.cancelClicked}>Cancel</button><br></br><br></br></Online>\n                    <div><h5>{this.state.message}</h5></div>\n                </form>\n            </div>\n        )\n    }\n\n    submitClicked() {\n        if ($(\"#form1\").valid()) {\n            if (navigator.onLine) {\n                UserService.forgotPassword($('#username').val())\n                    .then(response => {\n                        // console.log(response.statusText)\n                        this.props.history.push(`/login/${response.data.message}`)\n                    })\n                    .catch(\n                        error => {\n                            console.log(error.message);\n                            console.log(error.text);\n                            switch (error.message) {\n                                case \"Network Error\":\n                                    this.setState({\n                                        message: error.message\n                                    })\n                                    break\n                                default:\n                                    this.setState({\n                                        message: error.response.data.message\n                                    })\n                                    break\n                            }\n                        }\n                    );\n            } else {\n                alert(\"You must be Online to update the password.\")\n            }\n        }\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/login/Action Canceled.`)\n    }\n}\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport '../../Js/actions';\nimport ErrorComponent from \"../common/ErrorComponent\";\nimport LoginComponent from \"../home/LoginComponent.jsx\";\nimport Layout from './Layout.js';\nimport UpdateExpiredPasswordComponent from \"../home/UpdateExpiredPasswordComponent.jsx\";\nimport ForgotPasswordComponent from \"../home/ForgotPasswordComponent.jsx\";\n\nclass Sidebar extends Component {\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n\n\n                {/* MESSAGE BOX*/}\n                <div className=\"message-box animated fadeIn\" data-sound=\"alert\" id=\"mb-signout\">\n                    <div className=\"mb-container\">\n                        <div className=\"mb-middle\">\n                            <div className=\"mb-title\"><span className=\"fa fa-sign-out\"></span> Log <strong>Out</strong> ?</div>\n                            <div className=\"mb-content\">\n                                <p>Are you sure you want to log out?</p>\n                                <p>Press No if youwant to continue work. Press Yes to logout current user.</p>\n                            </div>\n                            <div className=\"mb-footer\">\n                                <div className=\"pull-right\">\n                                    <a href=\"/\" className=\"btn btn-success btn-lg\">Yes</a>\n                                    <button className=\"btn btn-default btn-lg mb-control-close\">No</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Router>\n\n                    {/* <Router basename=\"/palashSprint1\"> */}\n\n\n                    <>\n                        <Switch>\n                            <Route path=\"/updateExpiredPassword\" exact component={UpdateExpiredPasswordComponent} />\n                            <Route path=\"/forgotPassword\" exact component={ForgotPasswordComponent} />\n                            <Route path=\"/\" exact component={LoginComponent} />\n                            <Route path=\"/login/:message\" component={LoginComponent} />\n                            {/* START PAGE CONTAINER */}\n                            <div className=\"page-container page-navigation-toggled page-container-wide\">\n\n                                {/* START PAGE SIDEBAR */}\n                                <div className=\"page-sidebar\">\n                                    {/* START X-NAVIGATION */}\n                                    <ul className=\"x-navigation x-navigation-minimized\">\n                                        <li className=\"xn-logo\">\n                                            <a href=\"index.html\">FASP</a>\n                                            <a href=\"#\" className=\"x-navigation-control\"></a>\n\n                                        </li>\n\n\n\n\n\n                                        <li className=\"active\">\n                                            {<a href=\"welcome\"><span className=\"fa fa-list-alt\"></span> <span className=\"xn-text\">Home</span></a>}\n                                            {/* <ul>\n\n                 <li className=\"\">\n                     <a href=\"consumption.html\"><span className=\"\"></span> Consumption</a>\n\n                 </li>\n\n                 <li><a href=\"pages-messages.html\"><span className=\"\"></span> Shipments</a></li>\n                 <li><a href=\"pages-calendar.html\"><span className=\"\"></span> Stocks</a></li>\n\n             </ul> */}\n                                        </li>\n\n                                        {/*  <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-table\"></span> <span className=\"xn-text\">Commodities Data</span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"#\"><span className=\"\"></span> Consumption</a>\n\n                 </li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Shipments</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Stocks</a></li>\n\n             </ul>\n            </li>*/}\n                                        <li className=\"xn-openable\">\n                                            <a href=\"\"><span className=\"fa fa-table\"></span> <span className=\"xn-text\">Program data</span></a>\n                                            <ul>\n\n                                                <li className=\"\">\n                                                    <a href=\"../downloadProgramData\"><span className=\"\"></span> Download</a>\n\n                                                </li>\n\n                                                <li><a href=\"../exportProgramData\"><span className=\"\"></span> Export</a></li>\n                                                <li><a href=\"../importProgramData\"><span className=\"\"></span> Import</a></li>\n\n                                            </ul>\n                                        </li>\n\n                                        <li className=\"xn-openable\">\n                                            <a href=\"#\"><span className=\"fa fa-file\"></span> <span className=\"xn-text\">Admin</span></a>\n                                            <ul className=\"sidebarUl\">\n\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> User</a>\n                                                    <ul>\n                                                        <li><a href=\"../addUser\"><span className=\"\"></span> Add User</a></li>\n                                                        <li><a href=\"../listUser\"><span className=\"\"></span>User List</a></li>\n                                                    </ul>\n                                                </li>\n\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Role</a>\n                                                    <ul>\n                                                        <li><a href=\"../addRole\"><span className=\"\"></span> Add Role</a></li>\n                                                        <li><a href=\"../listRole\"><span className=\"\"></span>Role List</a></li>\n                                                    </ul>\n                                                </li>\n\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Language</a>\n                                                    <ul>\n                                                        <li><a href=\"../addLanguage\"><span className=\"\"></span> Add Language</a></li>\n                                                        <li><a href=\"../languageList/success\"><span className=\"\"></span>Language List</a></li>\n                                                    </ul>\n                                                </li>\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Country</a>\n                                                    <ul>\n                                                        <li><a href=\"../addCountry\"><span className=\"\"></span> Add Country</a></li>\n                                                        <li><a href=\"../countryList/success\"><span className=\"\"></span>Country List</a></li>\n                                                    </ul>\n                                                </li>\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Currency</a>\n                                                    <ul>\n                                                        <li><a href=\"../addCurrency\"><span className=\"\"></span> Add Currency</a></li>\n                                                        <li><a href=\"../currencyList/success\"><span className=\"\"></span>Currency List</a></li>\n                                                    </ul>\n                                                </li>\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> DataSource</a>\n                                                    <ul>\n                                                        <li><a href=\"../addDataSource\"><span className=\"\"></span> Add DataSource</a></li>\n                                                        <li><a href=\"../dataSourceList/success\"><span className=\"\"></span>DataSource List</a></li>\n                                                    </ul>\n                                                </li>\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> DataSource Type</a>\n                                                    <ul>\n                                                        <li><a href=\"../addDataSourceType\"><span className=\"\"></span> Add DataSource Type</a></li>\n                                                        <li><a href=\"../dataSourceTypeList/success\"><span className=\"\"></span>DataSource Type List</a></li>\n                                                    </ul>\n                                                </li>\n                                                <li className=\"xn-openable\">\n                                                    <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Shipment Status</a>\n                                                    <ul>\n                                                        <li><a href=\"../addShipmentStatus\"><span className=\"\"></span> Add Shipment Status</a></li>\n                                                        <li><a href=\"../shipmentStatusListAll/success\"><span className=\"\"></span>Shipment Status List</a></li>\n                                                    </ul>\n                                                </li>\n\n                                            </ul>\n                                        </li>\n\n                                        {/*   <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-file\"></span> <span className=\"xn-text\">Background Data</span></a>\n             <ul>\n\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Products</a>\n                     <ul>\n                         <li><a href=\"\"><span className=\"\"></span> Case Sizes</a></li>\n                         <li><a href=\"\"><span className=\"\"></span>Costs</a></li>\n                     </ul>\n                 </li>\n                 <li className=\"xn-openable\">\n                     <a href=\"#\"><span className=\"fa fa-clock-o\"></span> Categories</a>\n                     <ul>\n                         <li><a href=\"\"><span className=\"\"></span> View Categories</a></li>\n\n                     </ul>\n                 </li>\n\n                 <li><a href=\"\"><span className=\"\"></span> Suppliers</a></li>\n                 <li><a href=\"\"><span className=\"\"></span> Data Sources</a></li>\n                 <li><a href=\"\"><span className=\"\"></span> Funding Sources</a></li>\n             </ul>\n         </li>\n\n         <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-bar-chart-o\"></span> <span className=\"xn-text\">Graphs    </span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"#\"><span className=\"\"></span> Stock Status</a>\n\n                 </li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Consumption</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Trend Analysis</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Couple Year Protection(CYP)</a></li>\n             </ul>\n         </li>\n\n         <li className=\"xn-openable\">\n             <a href=\"#\"><span className=\"fa fa-files-o\"></span> <span className=\"xn-text\">Reports    </span></a>\n             <ul>\n\n                 <li className=\"\">\n                     <a href=\"#\"><span className=\"\"></span> Stock Status</a>\n\n                 </li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Stock Status Matrix</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Shipment Summary</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Supply Plans</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Shipment Orders</a></li>\n\n                 <li><a href=\"#\"><span className=\"\"></span> Annual Shipment Costs</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Pipeline Action</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Pipeline Problem</a></li>\n                 <li><a href=\"#\"><span className=\"\"></span> Procurement</a></li>\n             </ul>\n         </li>*/}\n                                    </ul>\n                                    {/* END X-NAVIGATION */}\n                                </div>\n                                {/* END PAGE SIDEBAR */}\n\n                                {/* PAGE CONTENT */}\n\n                                <div className=\"page-content\">\n                                    {/* START X-NAVIGATION VERTICAL */}\n                                    <ul className=\"x-navigation x-navigation-horizontal x-navigation-panel\">\n                                        {/* TOGGLE NAVIGATION */}\n                                        <li className=\"xn-icon-button\">\n                                            <a href=\"#\" className=\"x-navigation-minimize\"><span className=\"fa fa-dedent\"></span></a>\n                                        </li>\n                                        {/* END TOGGLE NAVIGATION */}\n                                        {/* SEARCH */}\n                                        {/* <li className=\"xn-search\">\n                 <form role=\"form\">\n                     <input type=\"text\" name=\"search\" placeholder=\"Search...\"/>\n                 </form>\n             </li> */}\n                                        {/* END SEARCH */}\n                                        {/* SIGN OUT */}\n                                        <li className=\"xn-icon-button pull-right\">\n                                            <a href=\"#\" className=\"mb-control\" data-box=\"#mb-signout\"><span className=\"fa fa-sign-out\"></span></a>\n                                        </li>\n                                        {/* END SIGN OUT */}\n                                        {/* MESSAGES */}\n                                        <li className=\"xn-icon-button pull-right\">\n                                            <a href=\"#\"><span className=\"fa fa-user\"></span>\n\n                                            </a>\n\n                                            <div className=\"panel panel-primary animated zoomIn xn-drop-left xn-panel-dragging user-panel\" >\n                                                <div className=\"panel-heading\">\n                                                    <div className=\"profile\">\n                                                        <div className=\"profile-image\">\n                                                            <img className=\"profile-img\" src=\"../../img/no-image.jpeg\" alt=\"John Doe\" >\n                                                            </img></div>\n                                                        <div className=\"profile-data\">\n                                                            <div className=\"profile-data-name\">XYZ</div>\n                                                            <div className=\"profile-data-title\">Admin User</div>\n                                                            <div className=\"profile-data-title\"><span>Online</span></div>\n                                                            <div className=\"profile-data-title\"><span>  <span className=\"online\"></span></span>\n                                                            </div>\n\n\n\n\n                                                        </div>\n\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </li>\n                                        <li class=\"xn-icon-button pull-right\">\n       <a href=\"../changePassword\" title=\"Change Password\"><span class=\"fa fa-key\"></span> <span class=\"xn-text\"></span></a>\n   </li>\n                                        <li className=\"xn-icon-button pull-right\">\n                                            <a href=\"#\" className=\"lang-align\" ><span className=\"\"> Languages</span> <span className=\"fa fa-caret-down lang-caret\"\n                                            ></span></a>\n                                            {/*    <div className=\"informer informer-warning\">3</div> */}\n                                            <div className=\"panel panel-primary animated zoomIn xn-drop-left xn-panel-dragging lang-width\">\n                                                {/*  <div className=\"panel-heading\">\n                         <h3 className=\"panel-title\"><span className=\"fa fa-tasks\"></span> Program Name</h3>                                \n                         <div className=\"pull-right\">\n                             <span className=\"label label-warning\">3 active</span>\n                         </div>\n                     </div> */}\n                                                <div className=\"panel-body list-group scroll lang-box\">\n                                                    <a className=\"list-group-item\" href=\"#\">\n                                                        <strong>Français | FRA</strong>\n                                                        {/*     <div className=\"progress progress-small progress-striped active\">\n                                 <div className=\"progress-bar progress-bar-danger\" role=\"progressbar\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 50%;\">50%</div>\n                             </div>\n                             <small className=\"text-muted\">John Doe, 25 Sep 2014 / 50%</small> */}\n                                                    </a>\n                                                    <a className=\"list-group-item\" href=\"#\">\n                                                        <strong>Português | PRT</strong>\n                                                        {/*      <div className=\"progress progress-small progress-striped active\">\n                                 <div className=\"progress-bar progress-bar-warning\" role=\"progressbar\" aria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 80%;\">80%</div>\n                             </div>\n                             <small className=\"text-muted\">Dmitry Ivaniuk, 24 Sep 2014 / 80%</small> */}\n                                                    </a>\n                                                    <a className=\"list-group-item\" href=\"#\">\n                                                        <strong>Español | ESP</strong>\n\n                                                    </a>\n                                                    <a className=\"list-group-item\" href=\"#\">\n                                                        <strong>STiếng Việt | VIE</strong>\n\n                                                    </a>\n                                                </div>\n\n                                            </div>\n                                        </li>\n\n\n                                        {/* END TASKS */}\n                                    </ul>\n                                    {/* END X-NAVIGATION VERTICAL */}\n\n                                    {/* START BREADCRUMB */}\n\n                                    {/* END BREADCRUMB */}\n\n                                    {/* PAGE CONTENT WRAPPER */}\n\n\n                                    <Route path='/' render={(props) => <Layout {...props} />} />\n                                    {/* <Route path=\"/login/:message\" component={LoginComponent} /> */}\n                                    {/* <Route path=\"/addUser\" component={AddUserComponent} /> */}\n                                    {/* <Route path=\"/userList\" exact component={UserListComponent} /> */}\n                                    {/* <Route path=\"/userList/:message\" component={UserListComponent} /> */}\n                                    {/* <Route path=\"/editUser\" component={EditUserComponent} /> */}\n                                    {/* <Route path=\"/addRole\" component={AddRoleComponent} /> */}\n                                    {/* <Route path=\"/roleList\" component={RoleListComponent} /> */}\n                                    {/* <Route path=\"/roleList/:message\" component={RoleListComponent} /> */}\n                                    {/* <Route path=\"/editRole\" component={RoleListComponent} /> */}\n                                    {/* <AuthenticatedRoute path=\"/updateExpiredPassword\" component={UpdateExpiredPasswordComponent} /> */}\n                                    {/* <AuthenticatedRoute path=\"/welcome\" component={WelcomeComponent} /> */}\n                                    {/* <AuthenticatedRoute path=\"/registration\" component={RegistrationComponent} /> */}\n                                    {/* <AuthenticatedRoute path=\"/listUserApproval/:message\" component={UserApprovalComponent} /> */}\n                                    {/* <AuthenticatedRoute path=\"/listUserApproval\" component={UserApprovalComponent} /> */}\n                                    {/* <AuthenticatedRoute path=\"/editUserApproval/:registrationId/:emailId\" component={EditUserApprovalComponent} /> */}\n                                    {/* <Route component={ErrorComponent} /> */}\n\n\n                                    {/* END PAGE CONTENT WRAPPER */}\n                                </div>\n                                {/* END PAGE CONTENT */}\n                            </div>\n                            {/* END PAGE CONTAINER */}\n\n                        </Switch>\n                    </>\n                </Router>\n            </div>\n        );\n    }\n\n}\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/common/Sidebar';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Sidebar></Sidebar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// AuthenticationService.setupAxiosInterceptors();\nserviceWorker.register();"],"sourceRoot":""}